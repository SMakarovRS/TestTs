#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	МассивЗаголовковРесурсов = Новый Массив;
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	// Создадим и инициализируем процессор компоновки, предварительно проверим параметры.
	Если НЕ МакетКомпоновки.ЗначенияПараметров.Найти("НачалоПериода") = Неопределено 
		И НЕ МакетКомпоновки.ЗначенияПараметров.Найти("КонецПериода") = Неопределено 
		И НЕ МакетКомпоновки.ЗначенияПараметров["НачалоПериода"].Значение = Дата(1,1,1)
		И НЕ МакетКомпоновки.ЗначенияПараметров["КонецПериода"].Значение = Дата(1,1,1)
		И МакетКомпоновки.ЗначенияПараметров["НачалоПериода"].Значение > МакетКомпоновки.ЗначенияПараметров["КонецПериода"].Значение Тогда
		
		Сообщение	 		= Новый СообщениеПользователю;
		Сообщение.Текст	 	= НСтр("ru = 'Дата начала периода не должна превышать дату окончания'");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);	
	
	// Выводим результат отчета в табличный документ "ДокументРезультат".
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);        
	
	// ПроцессорВывода.Вывести(ПроцессорКомпоновки);  на этом можно было бы закончить вывод отчета в стандартном виде... 
	// но нам нужны картинки.		
	ПолеПоКоторомуНеобходимоПолучитьЗначение = "Изображение";
	ПроцессорВывода.НачатьВывод();
	Пока Истина Цикл
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();
		Если ЭлементРезультата = Неопределено Тогда
			Прервать;
		КонецЕсли;    
		ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
		Если ЭлементРезультата.ЗначенияПараметров.Количество() > 0 Тогда
			ЗначениеВыводимыхДанных = Неопределено;
			ТекстИзо = "";
			Для каждого ЗначениеПараметра Из ЭлементРезультата.ЗначенияПараметров Цикл
				Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("Строка") Тогда
					Если СтрНайти(ЗначениеПараметра.Значение, "Нет изображения") = 1 Тогда
						ТекстИзо = ЗначениеПараметра.Значение;
					КонецЕсли;
				КонецЕсли;
				Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
					ПоляРасшифровки = ДанныеРасшифровки.Элементы[ЗначениеПараметра.Значение].ПолучитьПоля();
					Для Каждого ПолеРасшифровки Из ПоляРасшифровки Цикл
						Если ПолеРасшифровки.Поле = ПолеПоКоторомуНеобходимоПолучитьЗначение Тогда
							ЗначениеВыводимыхДанных = ПолеРасшифровки.Значение;
							Прервать;
						КонецЕсли;    
					КонецЦикла;    
				КонецЕсли;    
			КонецЦикла;    
			Если ЗначениеЗаполнено(ЗначениеВыводимыхДанных) Тогда
				мТекущееОсновноеИзображение = ЗначениеВыводимыхДанных.Получить();
				Если НЕ (мТекущееОсновноеИзображение = Неопределено) Тогда
					Рис = ДокументРезультат.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
					Рис.РазмерКартинки = РазмерКартинки.Пропорционально;
					Индекс = ДокументРезультат.Рисунки.Индекс(Рис);
					Если ТипЗнч(мТекущееОсновноеИзображение) = Тип("Картинка") Тогда
						ДокументРезультат.Рисунки[Индекс].Картинка = мТекущееОсновноеИзображение;
					ИначеЕсли ТипЗнч(мТекущееОсновноеИзображение) = Тип("ДвоичныеДанные") Тогда	
						ДокументРезультат.Рисунки[Индекс].Картинка = Новый Картинка(мТекущееОсновноеИзображение);
					КонецЕсли;	
					ВысотаТабДок = ДокументРезультат.ВысотаТаблицы;
					ОбластьДляКартинки = ДокументРезультат.НайтиТекст(ТекстИзо);
					Если ОбластьДляКартинки <> Неопределено Тогда
						ОбластьДляКартинки.ВысотаСтроки = 90;
						ДокументРезультат.Рисунки[Индекс].Расположить(ОбластьДляКартинки);
						ОбластьДляКартинки.Текст = "";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;    
		КонецЕсли;    
		
	КонецЦикла;
	
	ПроцессорВывода.ЗакончитьВывод();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
	
// Настройки общей формы отчета подсистемы "Варианты отчетов".
	//
	// Параметры:
	//   Форма - УправляемаяФорма - Форма отчета.
	//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
	//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
	//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
		
	Настройки.События.ПриСозданииНаСервере                       = Истина;
	
КонецПроцедуры
	
// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
	//
	// Параметры:
	//   Форма - УправляемаяФорма - Форма отчета.
	//   Отказ - Передается из параметров обработчика "как есть".
	//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
	//
	// См. также:
	//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
	//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
		
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры                = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		ОтборСтруктура = СтруктураВыполнения(Параметры.ПараметрКоманды);
		ЭтаФорма.ФормаПараметры.Отбор.Вставить("Организация",   ОтборСтруктура.Организация);
		ЭтаФорма.ФормаПараметры.Отбор.Вставить("МестоХранения", ОтборСтруктура.МестоХранения);
	КонецЕсли;
		
КонецПроцедуры

Функция СтруктураВыполнения(ПараметрКоманды)
	
	Структура = Новый Структура;
	Если ТипЗнч(ПараметрКоманды) = Тип("СправочникСсылка.МестаХранения") Тогда
		Структура.Вставить("Организация", ПараметрКоманды.Организация);
		Структура.Вставить("МестоХранения", ПараметрКоманды)		
	Иначе
		Структура.Вставить("Организация", ПараметрКоманды.Организация);
		Структура.Вставить("МестоХранения", ПараметрКоманды.МестоХранения);		
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции

#КонецОбласти


#КонецЕсли