
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МесяцНачисления 				= НачалоМесяца(ТекущаяДата());
	ОтображениеМесяцаНачисления 	= Формат(МесяцНачисления, "ДФ='MMMM yyyy'");
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы ОбработкаВыбора
//
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма")
		И СтрНайти(ИсточникВыбора.ИмяФормы, "ФормаКалендаря") > 0 Тогда
		
		МесяцНачисления = КонецДня(ВыбранноеЗначение);
		ЗаработнаяПлатаКлиент.ПриИзмененииМесяцаНачисления(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	
	ВариантыОтчетов.ПриСохраненииПользовательскихНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка	 = Ложь;
	ДатаКалендаряПриОткрытии = ?(ЗначениеЗаполнено(МесяцНачисления), 
		МесяцНачисления, ПолучитьТекущуюДатуСеанса());
	ОткрытьФорму("Документ.НачислениеЗаработнойПлаты.Форма.ФормаКалендаря", 
		ЗаработнаяПлатаКлиент.ПолучитьПараметрыОткрытияФормыКалендаря(ДатаКалендаряПриОткрытии), ЭтаФорма);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовФормы

&НаКлиенте
Процедура МесяцНачисленияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗаработнаяПлатаКлиент.ПриРегулированииМесяцаНачисления(ЭтаФорма, Направление);
	ЗаработнаяПлатаКлиент.ПриИзмененииМесяцаНачисления(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбрана организация'");
		ПолеСообщения = "Организация";
		УправлениеITОтделом8УФ.СообщитьОбОшибке(Отчет, ТекстСообщения,,,ПолеСообщения);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(МесяцНачисления) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран месяц начисления'");
		ПолеСообщения = "МесяцНачисления";
		УправлениеITОтделом8УФ.СообщитьОбОшибке(Отчет, ТекстСообщения,,,ПолеСообщения);
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса = ВыполнитьЗапрос();
		
	Если РезультатЗапроса[0].Пустой() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Нет данных для формирования отчета'");
		Сообщение.Сообщить();
		ТабличныйДокумент.Очистить();
		Возврат;
	КонецЕсли;
	
	Макет = Отчеты.РасчетныйЛисток.ПолучитьМакет("ПФ_MXL_РасчетныйЛисток");
	
	ОбластьШапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовок 			= Макет.ПолучитьОбласть("Заголовок");
	ОбластьНачисленоУдержано 	= Макет.ПолучитьОбласть("НачисленоУдержано");
	ОбластьСтрока 				= Макет.ПолучитьОбласть("Строка");
	ОбластьДоходыВыплачено 		= Макет.ПолучитьОбласть("ДоходыВыплачено");
	ОбластьСтрокаВыплаты 		= Макет.ПолучитьОбласть("СтрокаВыплаты");
	ОбластьВсегоВыплачено 		= Макет.ПолучитьОбласть("ВсегоВыплачено");
	ОбластьВсего 				= Макет.ПолучитьОбласть("Всего");
	ОбластьПодвал 				= Макет.ПолучитьОбласть("Подвал");
		
	ТабличныйДокумент.Очистить();
		
	ВыборкаПодразделение = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Подразделение");
	Пока ВыборкаПодразделение.Следующий() Цикл
		
		ТабличныйДокумент.НачатьГруппуСтрок();
		
		ВыборкаФизлицо = ВыборкаПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ФизЛицо");
		
		Пока ВыборкаФизлицо.Следующий() Цикл
			
			ОбластьШапка.Параметры.Заполнить(ВыборкаФизлицо);
			ОбластьШапка.Параметры.Организация		= Организация;
			ОбластьШапка.Параметры.ФизЛицо			= ВыборкаФизлицо.Физлицо;
			ОбластьШапка.Параметры.МесяцНачисления	= Формат(МесяцНачисления, "ДФ='ММММ yyyy'");
			ОбластьШапка.Параметры.Подразделение	= ВыборкаФизлицо.Подразделение;
			ТабличныйДокумент.Вывести(ОбластьШапка);
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			ТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
			
			ПоследнееНачисление	= ТабличныйДокумент.ВысотаТаблицы;
			ПоследнееУдержание	= ТабличныйДокумент.ВысотаТаблицы;
			
			ВыборкаДетали		= ВыборкаФизлицо.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл
				
				Если ВыборкаДетали.Удержание = NULL Тогда
					
					Если ПоследнееНачисление < ПоследнееУдержание Тогда
						
						ТабличныйДокумент.Область(ПоследнееНачисление + 1, 1).Текст = ВыборкаДетали.Начисление;
						ТабличныйДокумент.Область(ПоследнееНачисление + 1, 2, ПоследнееНачисление + 1, 3).Текст = "" 
							+ День(ВыборкаДетали.ДатаНачала) + "-" + День(ВыборкаДетали.ДатаОкончания) + " " 
							+ Формат(ВыборкаДетали.ДатаОкончания , "ДФ=""МММ гг""");
						ТабличныйДокумент.Область(ПоследнееНачисление + 1, 4).Текст = ВыборкаДетали.ОтработаноДней;
						ТабличныйДокумент.Область(ПоследнееНачисление + 1, 5).Текст = ВыборкаДетали.ОтработаноЧасов;
						ТабличныйДокумент.Область(ПоследнееНачисление + 1, 6, 
							ПоследнееНачисление + 1, 7).Текст = ВыборкаДетали.СуммаНачислено;
						
					Иначе
						
						ОбластьСтрока.Параметры.Начисление = ВыборкаДетали.Начисление;
						ОбластьСтрока.Параметры.ПериодНачисление = "" + День(ВыборкаДетали.ДатаНачала) + "-" 
							+ День(ВыборкаДетали.ДатаОкончания) + " " + Формат(ВыборкаДетали.ДатаОкончания , "ДФ=""МММ гг""");
						ОбластьСтрока.Параметры.ОтработаноДнейНачисление = ВыборкаДетали.ОтработаноДней;
						ОбластьСтрока.Параметры.ОтработаноЧасовНачисление = ВыборкаДетали.ОтработаноЧасов;
						ОбластьСтрока.Параметры.СуммаНачисление = ВыборкаДетали.СуммаНачислено;
						
						ТабличныйДокумент.Вывести(ОбластьСтрока);
						
						ОбластьСтрока.Параметры.Начисление = Справочники.ВидыНачисленийИУдержаний.ПустаяСсылка();
						ОбластьСтрока.Параметры.ПериодНачисление = "";
						ОбластьСтрока.Параметры.ОтработаноДнейНачисление = 0;
						ОбластьСтрока.Параметры.ОтработаноЧасовНачисление = 0;
						ОбластьСтрока.Параметры.СуммаНачисление = 0;
						
					КонецЕсли; 
					
					ПоследнееНачисление = ПоследнееНачисление + 1;
					
				Иначе
					
					Если ПоследнееУдержание < ПоследнееНачисление Тогда
						
						ТабличныйДокумент.Область(ПоследнееУдержание + 1, 8, ПоследнееУдержание + 1, 10).Текст = ВыборкаДетали.Удержание;	
						ТабличныйДокумент.Область(ПоследнееУдержание + 1, 11, ПоследнееУдержание + 1, 12).Текст = "" 
							+ День(ВыборкаДетали.ДатаНачала) + "-" + День(ВыборкаДетали.ДатаОкончания) + " " 
							+ Формат(ВыборкаДетали.ДатаОкончания , "ДФ=""МММ гг""");
						ТабличныйДокумент.Область(ПоследнееУдержание + 1, 13, 
							ПоследнееУдержание + 1, 14).Текст = ВыборкаДетали.СуммаУдержано;
						
					Иначе
						
						ОбластьСтрока.Параметры.Удержание = ВыборкаДетали.Удержание;
						ОбластьСтрока.Параметры.ПериодУдержание = "" + День(ВыборкаДетали.ДатаНачала) + "-" 
							+ День(ВыборкаДетали.ДатаОкончания) + " " + Формат(ВыборкаДетали.ДатаОкончания , "ДФ=""МММ гг""");
						ОбластьСтрока.Параметры.СуммаУдержание = ВыборкаДетали.СуммаУдержано;
						
						ТабличныйДокумент.Вывести(ОбластьСтрока);
						
						ОбластьСтрока.Параметры.Удержание = Справочники.ВидыНачисленийИУдержаний.ПустаяСсылка();
						ОбластьСтрока.Параметры.ПериодУдержание = "";
						ОбластьСтрока.Параметры.СуммаУдержание = 0;
						
					КонецЕсли; 
					
					ПоследнееУдержание = ПоследнееУдержание + 1;
					
				КонецЕсли; 
				
			КонецЦикла;
			
			ВсегоНачисления	= ВыборкаФизлицо.СуммаНачислено;
			ВсегоУдержано	= ВыборкаФизлицо.СуммаУдержано;
						
			ОбластьВсего.Параметры.ВсегоНачисления	= ВсегоНачисления;
			ОбластьВсего.Параметры.ВсегоУдержания	= ВсегоУдержано;
			ТабличныйДокумент.Вывести(ОбластьВсего);
			
			ТабличныйДокумент.Вывести(ОбластьДоходыВыплачено);
			ВыборкаВыплатСотрудника		= РезультатЗапроса[1].Выбрать();
			
			СуммаВыплаты = 0;
			
			СтруктураПоискаПоВыборке	= Новый Структура("Сотрудник", ВыборкаФизлицо.Физлицо);
			Пока ВыборкаВыплатСотрудника.НайтиСледующий(СтруктураПоискаПоВыборке) Цикл
				
				Если ВыборкаВыплатСотрудника.ВидНачисленияУдержания.Тип = Перечисления.ТипыНачисленийИУдержаний.Начисление Тогда 
					СуммаВыплаты = СуммаВыплаты + ВыборкаВыплатСотрудника.СуммаРасход;					
					ОбластьСтрокаВыплаты.Параметры.Заполнить(ВыборкаВыплатСотрудника);
					ОбластьСтрокаВыплаты.Параметры.ТекстВыплаты = "" + СокрЛП(ВыборкаВыплатСотрудника.Номер) + " от " 
						+ Формат(ВыборкаВыплатСотрудника.Дата, "ДФ=dd.MM.yyyy");
					ОбластьСтрокаВыплаты.Параметры.ПериодВыплат	= "" + День(МесяцНачисления) + "-" 
						+ День(КонецМесяца(МесяцНачисления)) + " " + Формат(КонецМесяца(МесяцНачисления) , "ДФ=""МММ гг""");
					ОбластьСтрокаВыплаты.Параметры.СуммаВыплаты	= ВыборкаВыплатСотрудника.СуммаРасход;
					ТабличныйДокумент.Вывести(ОбластьСтрокаВыплаты);
				КонецЕсли;
				
			КонецЦикла;
			
			Если СуммаВыплаты <> 0 Тогда 
				СуммаВыплаты = СуммаВыплаты - ВсегоУдержано;
			КонецЕсли;
			
			Если СуммаВыплаты <> 0 Тогда
				ОбластьВсегоВыплачено.Параметры.ВсегоВыплачено = СуммаВыплаты;
				ТабличныйДокумент.Вывести(ОбластьВсегоВыплачено);
			КонецЕсли;
			
			ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = ВыборкаФизлицо.СальдоНаНачало;
			ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода = ВыборкаФизлицо.СальдоНаКонец 
				+ ВыборкаФизлицо.СуммаНачислено - ВыборкаФизлицо.СуммаУдержано - СуммаВыплаты;
			Если ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода < 0 Тогда
				ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = НСтр("ru = 'Долг за работником на начало месяца:'");
			Иначе	
				ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = НСтр("ru = 'Долг за организацией на начало месяца:'");
			КонецЕсли; 
			Если ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода < 0 Тогда
				ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = НСтр("ru = 'Долг за работником на конец месяца:'");
			Иначе	
				ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = НСтр("ru = 'Долг за организацией на конец месяца:'");
			КонецЕсли; 
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
		КонецЦикла;
		
		ТабличныйДокумент.ЗакончитьГруппуСтрок();
	КонецЦикла;
	       	
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗапрос() 
	
	СдельнаяОплата			= Справочники.ВидыНачисленийИУдержаний.ПредопределенноеЗначениеПоИдентификатору
							("Сдельная оплата (тариф)");
	СдельнаяОплатаПроцент	= Справочники.ВидыНачисленийИУдержаний.ПредопределенноеЗначениеПоИдентификатору
							("Сдельная оплата (% от суммы)");
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НачисленияИУдержания.Сотрудник КАК Физлицо,
		|	НачисленияИУдержания.Сотрудник.Код КАК ТабельныйНомер,
		|	НачисленияИУдержания.Подразделение КАК Подразделение,
		|	НачисленияИУдержания.Подразделение.Наименование КАК ПодразделениеПредставление,
		|	СведенияОСотрудникахСрезПоследних.Должность КАК Должность,
		|	ВЫБОР
		|		КОГДА НачисленияИУдержания.ВидНачисленияУдержания.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление)
		|			ТОГДА НачисленияИУдержания.ВидНачисленияУдержания
		|		ИНАЧЕ NULL
		|	КОНЕЦ КАК Начисление,
		|	ВЫБОР
		|		КОГДА НачисленияИУдержания.ВидНачисленияУдержания.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление)
		|			ТОГДА NULL
		|		ИНАЧЕ НачисленияИУдержания.ВидНачисленияУдержания
		|	КОНЕЦ КАК Удержание,
		|	СУММА(ВЫБОР
		|			КОГДА НачисленияИУдержания.ВидНачисленияУдержания.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление)
		|				ТОГДА ЕСТЬNULL(НачисленияИУдержания.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаНачислено,
		|	СУММА(ВЫБОР
		|			КОГДА НачисленияИУдержания.ВидНачисленияУдержания.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление)
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(НачисленияИУдержания.Сумма, 0)
		|		КОНЕЦ) КАК СуммаУдержано,
		|	ВЫБОР
		|		КОГДА НачисленияИУдержания.ВидНачисленияУдержания = &СдельнаяОплата
		|				ИЛИ НачисленияИУдержания.ВидНачисленияУдержания = &СдельнаяОплатаПроцент
		|			ТОГДА &МесяцНачисления
		|		ИНАЧЕ НачисленияИУдержания.ДатаНачала
		|	КОНЕЦ КАК ДатаНачала,
		|	ВЫБОР
		|		КОГДА НачисленияИУдержания.ВидНачисленияУдержания = &СдельнаяОплата
		|				ИЛИ НачисленияИУдержания.ВидНачисленияУдержания = &СдельнаяОплатаПроцент
		|			ТОГДА КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(НачисленияИУдержания.ДатаОкончания, ДЕНЬ)
		|	КОНЕЦ КАК ДатаОкончания,
		|	СУММА(НачисленияИУдержания.ОтработаноДней) КАК ОтработаноДней,
		|	СУММА(НачисленияИУдержания.ОтработаноЧасов) КАК ОтработаноЧасов,
		|	ЕСТЬNULL(ДолгНаКонец.СуммаОстаток, 0) КАК СальдоНаКонец,
		|	ЕСТЬNULL(ДолгНаНачало.СуммаОстаток, 0) КАК СальдоНаНачало,
		|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
		|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, """") <> """"
		|			ТОГДА ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
		|		ИНАЧЕ НачисленияИУдержания.Сотрудник.Наименование
		|	КОНЕЦ КАК СотрудникПредставление
		|ИЗ
		|	РегистрНакопления.НачисленияИУдержания КАК НачисленияИУдержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыССотрудниками.Остатки(
		|				&МесяцНачисления,
		|				Организация = &Организация
		|					И &ПодразделениеОрганизация
		|					И МесяцНачисления <> &МесяцНачисления) КАК ДолгНаНачало
		|		ПО НачисленияИУдержания.Сотрудник = ДолгНаНачало.Сотрудник
		|			И НачисленияИУдержания.Подразделение = ДолгНаНачало.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыССотрудниками.Остатки(
		|				&МесяцНачисленияКонец,
		|				Организация = &Организация
		|					И &ПодразделениеОрганизация
		|					И МесяцНачисления <> &МесяцНачисления) КАК ДолгНаКонец
		|		ПО НачисленияИУдержания.Сотрудник = ДолгНаКонец.Сотрудник
		|			И НачисленияИУдержания.Подразделение = ДолгНаКонец.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках.СрезПоследних(
		|				&МесяцНачисленияКонец,
		|				Организация = &Организация
		|					И Подразделение <> ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК СведенияОСотрудникахСрезПоследних
		|		ПО НачисленияИУдержания.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&МесяцНачисленияКонец, ) КАК ФИОФизЛицСрезПоследних
		|		ПО НачисленияИУдержания.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|ГДЕ
		|	НачисленияИУдержания.Организация = &Организация
		|	И НачисленияИУдержания.МесяцНачисления = &МесяцНачисления
		|	И &НачисленияИУдержанияПодразделениеОрганизация
		|	И &НачисленияИУдержанияСотрудникСотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	НачисленияИУдержания.Сотрудник.Код,
		|	ВЫБОР
		|		КОГДА НачисленияИУдержания.ВидНачисленияУдержания = &СдельнаяОплата
		|				ИЛИ НачисленияИУдержания.ВидНачисленияУдержания = &СдельнаяОплатаПроцент
		|			ТОГДА &МесяцНачисления
		|		ИНАЧЕ НачисленияИУдержания.ДатаНачала
		|	КОНЕЦ,
		|	НачисленияИУдержания.Сотрудник,
		|	НачисленияИУдержания.Подразделение,
		|	НачисленияИУдержания.Подразделение.Наименование,
		|	СведенияОСотрудникахСрезПоследних.Должность,
		|	ЕСТЬNULL(ДолгНаКонец.СуммаОстаток, 0),
		|	ЕСТЬNULL(ДолгНаНачало.СуммаОстаток, 0),
		|	ВЫБОР
		|		КОГДА НачисленияИУдержания.ВидНачисленияУдержания.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление)
		|			ТОГДА НачисленияИУдержания.ВидНачисленияУдержания
		|		ИНАЧЕ NULL
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НачисленияИУдержания.ВидНачисленияУдержания.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Начисление)
		|			ТОГДА NULL
		|		ИНАЧЕ НачисленияИУдержания.ВидНачисленияУдержания
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НачисленияИУдержания.ВидНачисленияУдержания = &СдельнаяОплата
		|				ИЛИ НачисленияИУдержания.ВидНачисленияУдержания = &СдельнаяОплатаПроцент
		|			ТОГДА КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(НачисленияИУдержания.ДатаОкончания, ДЕНЬ)
		|	КОНЕЦ,
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, """") <> """"
		|			ТОГДА ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
		|		ИНАЧЕ НачисленияИУдержания.Сотрудник.Наименование
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодразделениеПредставление,
		|	СотрудникПредставление,
		|	ДатаНачала
		|ИТОГИ
		|	МАКСИМУМ(ПодразделениеПредставление),
		|	МАКСИМУМ(Должность),
		|	СУММА(СуммаНачислено),
		|	СУММА(СуммаУдержано),
		|	МАКСИМУМ(СальдоНаКонец),
		|	МАКСИМУМ(СальдоНаНачало),
		|	МАКСИМУМ(Фамилия),
		|	МАКСИМУМ(Имя),
		|	МАКСИМУМ(Отчество)
		|ПО
		|	Подразделение,
		|	Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетДенежныхСредств.Номер КАК Номер,
		|	УчетДенежныхСредств.Дата КАК Дата,
		|	ВзаиморасчетыССотрудникамиОбороты.Регистратор КАК Регистратор,
		|	ВзаиморасчетыССотрудникамиОбороты.Сотрудник КАК Сотрудник,
		|	ВзаиморасчетыССотрудникамиОбороты.СуммаРасход КАК СуммаРасход,
		|	ВзаиморасчетыССотрудникамиОбороты.ВидНачисленияУдержания КАК ВидНачисленияУдержания
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыССотрудниками.Обороты(
		|			,
		|			,
		|			Запись,
		|			Организация = &Организация
		|				И &ПодразделениеОрганизация
		|				И &СотрудникСотрудник
		|				И (МесяцНачисления МЕЖДУ &МесяцНачисления И &МесяцНачисленияКонец)) КАК ВзаиморасчетыССотрудникамиОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УчетДенежныхСредств КАК УчетДенежныхСредств
		|		ПО ВзаиморасчетыССотрудникамиОбороты.Регистратор = УчетДенежныхСредств.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата");
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПодразделениеОрганизация", "Подразделение = &Подразделение");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
			"&НачисленияИУдержанияПодразделениеОрганизация", "НачисленияИУдержания.Подразделение = &Подразделение");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПодразделениеОрганизация", "ИСТИНА");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НачисленияИУдержанияПодразделениеОрганизация", "ИСТИНА");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
			"&НачисленияИУдержанияСотрудникСотрудник", "НачисленияИУдержания.Сотрудник = &Сотрудник");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СотрудникСотрудник", "Сотрудник = &Сотрудник");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НачисленияИУдержанияСотрудникСотрудник", "ИСТИНА");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СотрудникСотрудник", "ИСТИНА");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("МесяцНачисления",		МесяцНачисления);
	Запрос.УстановитьПараметр("МесяцНачисленияКонец",	КонецМесяца(МесяцНачисления)); 
	Запрос.УстановитьПараметр("Подразделение",			Подразделение);
	Запрос.УстановитьПараметр("Сотрудник",				Сотрудник);
	Запрос.УстановитьПараметр("СдельнаяОплата",			СдельнаяОплата);
	Запрос.УстановитьПараметр("СдельнаяОплатаПроцент",	СдельнаяОплатаПроцент);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса;
	
КонецФункции

&НаСервере
Функция ПолучитьТекущуюДатуСеанса()
	
	Возврат ТекущаяДатаСеанса();
	
КонецФункции

#КонецОбласти

