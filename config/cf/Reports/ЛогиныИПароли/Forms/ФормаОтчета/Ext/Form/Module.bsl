
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	
	ВариантыОтчетов.ПриСохраненииПользовательскихНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
		
	РасшифровкаСтруктура	= ПолучитьРасшифровкуНаСервере(Расшифровка, "Пароль");
	РасшифровкаЗначение	    = РасшифровкаСтруктура.РасшифровкаЗначение;
	СтандартнаяОбработка	= РасшифровкаСтруктура.СтандартнаяОбработка;
	
	Если ЗначениеЗаполнено(РасшифровкаЗначение) Тогда		
		СтруктураЗаписи = Новый Структура;
		СтруктураЗаписи.Вставить("Владелец", РасшифровкаЗначение);
		
		ОткрытьФорму("РегистрСведений.ЛогиныИПаролиХранилище.Форма.ФормаПросмотраПароля", СтруктураЗаписи, ЭтотОбъект,
			, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;		
		
КонецПроцедуры

&НаСервере
Функция ПолучитьРасшифровкуНаСервере(Знач Расшифровка, Знач ИмяРасшифровки)
	
	РезультатСтруктура	= Новый Структура("СтандартнаяОбработка, РасшифровкаЗначение", Истина, Неопределено);	
	Данные				= ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ВсеПоля				= Данные.Элементы.Получить(Расшифровка).ПолучитьПоля();
	ПолеПоиска			= ВсеПоля.Найти(ИмяРасшифровки);
	
	Если ПолеПоиска <> Неопределено Тогда
		РезультатСтруктура.Вставить("СтандартнаяОбработка", Ложь);
		РезультатСтруктура.Вставить("РасшифровкаЗначение", ПолеПоиска.Значение);		
	КонецЕсли;	
	
	Возврат РезультатСтруктура;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВычислитьСумму(Команда)
	
	УправлениеITОтделом8УФКлиент.ПоказатьРасчетЯчеек(ЭтотОбъект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭлектроннойПочте(Команда)
	
	ОтображениеСостояния = Элементы.Результат.ОтображениеСостояния;
	Если ОтображениеСостояния.Видимость = Истина
		И ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отчет не сформирован. Для отправки отчета необходимо его сформировать'"));
		Возврат;
	Иначе
		ПоказатьДиалогОтправкиПоЭлектроннойПочте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДиалогОтправкиПоЭлектроннойПочте()
		
	АдресВложения 					= ПоместитьВоВременноеХранилище(Результат, Новый УникальныйИдентификатор());	
	ЗаголовокСохранения 			= НСтр("ru = 'Логины и пароли'");		
	МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
	ПараметрыОтправкиПисьма 		= МодульРаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма();	
	ПараметрыОтправкиПисьма.Тема 	= НСтр("ru = 'Логины и пароли'");
	
	Вложения = Новый Массив;
	Вложение = Новый Структура();
	Вложение.Вставить("Представление", ЗаголовокСохранения);
	Вложение.Вставить("АдресВоВременномХранилище", АдресВложения);
	Вложения.Добавить(Вложение);
	ПараметрыОтправкиПисьма.Вложения = Вложения;
	
	МодульРаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыОтправкиПисьма);
	
КонецПроцедуры

#КонецОбласти