#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборВидОтношений(Форма, ИмяПоля, Использование)
	
	ЧислоИзмененных = ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(
		Форма.Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор,
		ИмяПоля,
		,
		Истина,
		ВидСравненияКомпоновкиДанных.Равно,
		Использование,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
	Если ЧислоИзмененных = 0 Тогда
		
		ГруппаВидОтношений = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(
			Форма.Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы, "ВидОтношений");
		
		Если ГруппаВидОтношений = Неопределено Тогда
			ГруппаВидОтношений = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
				Форма.Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы,
				"ВидОтношений",
				ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ГруппаВидОтношений,
			ИмяПоля,
			ВидСравненияКомпоновкиДанных.Равно,
			Истина,
			,
			Использование,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;	
	
	Если Параметры.Свойство("ОтборКлиенты") Тогда
		ОтборКлиенты = Параметры.ОтборКлиенты;	
		УстановитьОтборВидОтношений(ЭтотОбъект, "Клиент", ОтборКлиенты);
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПоставщики") Тогда
		ОтборПоставщики = Параметры.ОтборПоставщики;	
		УстановитьОтборВидОтношений(ЭтотОбъект, "Поставщик", ОтборПоставщики);
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборРемонтСервис") Тогда
		ОтборРемонтСервис = Параметры.ОтборРемонтСервис;	
		УстановитьОтборВидОтношений(ЭтотОбъект, "РемонтСервис", ОтборРемонтСервис);
	КонецЕсли;
	
	Если УправлениеITОтделом8УФПовтИсп.ВедетсяСкладскойУчетКлиентов() Тогда
		Элементы.ОтборУчетОстатков.Видимость = Истина;
		Если Параметры.Свойство("ОтборУчетОстатков") Тогда
			ОтборУчетОстатков = Параметры.ОтборУчетОстатков;	
			УстановитьОтборВидОтношений(ЭтотОбъект, "УчетОстатков", ОтборУчетОстатков);
		КонецЕсли;
	Иначе
		Элементы.ОтборУчетОстатков.Видимость = Ложь;
	КонецЕсли;	
	
	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ПриСозданииНаСервереСписокКонтрагентов(Список);
	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборКлиентыПриИзменении(Элемент)
	УстановитьОтборВидОтношений(ЭтотОбъект, "Клиент", ОтборКлиенты);
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоставщикиПриИзменении(Элемент)
	УстановитьОтборВидОтношений(ЭтотОбъект, "Поставщик", ОтборПоставщики);
КонецПроцедуры

&НаКлиенте
Процедура ОтборРемонтСервисПриИзменении(Элемент)
	УстановитьОтборВидОтношений(ЭтотОбъект, "РемонтСервис", ОтборРемонтСервис);	
КонецПроцедуры

&НаКлиенте
Процедура ОтборУчетОстатковПриИзменении(Элемент)
	УстановитьОтборВидОтношений(ЭтотОбъект, "УчетОстатков", ОтборУчетОстатков);	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Клиент",		ОтборКлиенты);
	ЗначенияЗаполнения.Вставить("Поставщик",	ОтборПоставщики);
	ЗначенияЗаполнения.Вставить("РемонтСервис",	ОтборРемонтСервис);
	ЗначенияЗаполнения.Вставить("УчетОстатков",	ОтборУчетОстатков);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, Элемент);
КонецПроцедуры


#КонецОбласти
