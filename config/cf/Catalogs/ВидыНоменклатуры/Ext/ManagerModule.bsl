#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет виды номенклатуры по умолчанию.
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьВидыНоменклатурыПриПервоначальномЗаполнении() Экспорт
	
	// Описываем стуктуру.
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура");
	ТЗ.Колонки.Добавить("Наименование");
	ТЗ.Колонки.Добавить("МожетИметьИнвентарныйНомер");
	ТЗ.Колонки.Добавить("МожетИметьСерийныйНомер");
	ТЗ.Колонки.Добавить("МожетИметьКомплектующие");
	ТЗ.Колонки.Добавить("МожетИметьШтрихкод");
	ТЗ.Колонки.Добавить("МожетИметьIPАдрес");
	ТЗ.Колонки.Добавить("ГруппаЗаписиНоменклатуры");
	ТЗ.Колонки.Добавить("ТипВидаНоменклатуры");
	ТЗ.Колонки.Добавить("ВестиУчетПоКарточкамНоменклатуры");
	ТЗ.Колонки.Добавить("Картинка");
	ТЗ.Колонки.Добавить("ГруппаХарактеристик");
	ТЗ.Колонки.Добавить("РодительскийВид");
	ТЗ.Колонки.Добавить("УникальностьИнвентарногоНомера");
	ТЗ.Колонки.Добавить("УникальностьСерийногоНомера");
	
	ВД = Справочники.ВидыНоменклатуры;
	ВХ = ПланыВидовХарактеристик.ВидыХарактеристик;
	мПеречисленияТипыВидовНоменклатурыКомплект = Перечисления.ТипыВидовНоменклатуры.Комплект;
	мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать = Перечисления.МеханизмКонтроляУникальностиНоменклатуры.НеКонтролировать;
	                         
	// Заполняем реквизитами.
	// 			ТЗ //Номенклатура // Наименование //Инв 	//Сер 	//Комп //МожетИметьШтрихкод //ГруппаЗаписиНоменклатуры //ТипВидаНоменклатуры //Картинка // МожетИметьIPАдрес // РодительскийВид.
	ДобавитьВТаблицуЗначений(ТЗ, ВД.БлокПитания,	НСтр("ru = 'Блок питания'"),Истина,	Истина,	Ложь,	Истина,	НСтр("ru = 'Блоки питания'"), , БиблиотекаКартинок.ннБлокПитания, Истина, ВХ.БлокПитания,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.ВебКамера, 		НСтр("ru = 'Веб камера'"), 	Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Веб-камера'"), ,БиблиотекаКартинок.ннВебКамера, Истина, ВХ.ВебКамера,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Видеокарта,		НСтр("ru = 'Видеокарта'"), 	Ложь,	Истина,	Истина,	Истина,	НСтр("ru = 'Видеокарты'"), ,	БиблиотекаКартинок.ннВидеоКарта, Истина, ВХ.ВидеоКарта,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.FDD,			НСтр("ru = 'FDD'"),			Ложь,	Истина,	Ложь,	Ложь,	НСтр("ru = 'FDD'"),	,	БиблиотекаКартинок.ннFDD, Истина,,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.ЖесткийДиск,	НСтр("ru = 'Жесткий диск'"),Ложь,	Истина,	Ложь,	Ложь,	НСтр("ru = 'Жесткие диски'"),, БиблиотекаКартинок.ннЖесткийДиск, Истина, ВХ.ЖесткийДиск,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.ЗвуковаяКарта,	НСтр("ru = 'Звуковые карты'"),Ложь,	Истина,	Ложь,	Ложь,	НСтр("ru = 'Звуковые карты'"),, БиблиотекаКартинок.ннЗвуковаяКарта, Истина, ВХ.ЗвуковаяКарта,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.CD,				НСтр("ru = 'CD'"),			Истина,	Ложь,	Ложь,	Истина,	НСтр("ru = 'CD и DVD'"),	,БиблиотекаКартинок.ннCD, Истина, ,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.DVD,			НСтр("ru = 'DVD'"),			Истина,	Ложь,	Ложь,	Истина,	НСтр("ru = 'CD и DVD'"),	,БиблиотекаКартинок.ннDVD, Истина, ,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Клавиатура,		НСтр("ru = 'Клавиатура'"),	Истина,	Ложь,	Ложь,	Истина,	НСтр("ru = 'Клавиатуры'"),,БиблиотекаКартинок.ннКлавиатура, Ложь, ВХ.Клавиатура,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Контроллер,		НСтр("ru = 'Контроллер'"),	Ложь,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Прочее'"),,	БиблиотекаКартинок.ннВидеоКарта, Истина,,,,);	
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Лицензия,		НСтр("ru = 'Лицензия'"),	Ложь,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Программное обеспечение и лицензии'"),	Перечисления.ТипыВидовНоменклатуры.ПрограммноеОбеспечение,	БиблиотекаКартинок.ннЛицензия, Истина, ,,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать);	
	ДобавитьВТаблицуЗначений(ТЗ, ВД.МатеринскаяПлата,НСтр("ru = 'Материнская плата'"),Ложь,Истина,Истина,Ложь,	НСтр("ru = 'Материнские платы'"),,БиблиотекаКартинок.ннМатеринскаяПлата, Истина, ВХ.МатеринскаяПлата,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Микрофон,		НСтр("ru = 'Микрофон'"),	Истина,	Истина,	Ложь,	Истина,	НСтр("ru = 'Прочее'"),, БиблиотекаКартинок.ннМикрофон, Истина, ВХ.Микрофон,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Модем,			НСтр("ru = 'Модем'"),		Истина,	Истина,	Ложь,	Истина,	НСтр("ru = 'Модемы'"),,	БиблиотекаКартинок.ннМодем, Истина, ,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Монитор,		НСтр("ru = 'Монитор'"),		Истина,	Истина,	Ложь,	Истина,	НСтр("ru = 'Мониторы'"),,БиблиотекаКартинок.ннМонитор, Истина, ВХ.Монитор,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.МФУ,			НСтр("ru = 'МФУ'"),			Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Принтеры и МФУ'"),,БиблиотекаКартинок.ннМФУ, Истина, ВХ.МФУ, Истина,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Мышь,			НСтр("ru = 'Мышь'"),		Ложь,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Мышки'"),,БиблиотекаКартинок.ннМышь, Ложь, ВХ.Мышь,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Ноутбук,		НСтр("ru = 'Ноутбук'"),		Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Ноутбуки'"),,БиблиотекаКартинок.ннНоутбук, Истина, ВХ.Ноутбук, Истина,,);	
	ДобавитьВТаблицуЗначений(ТЗ, ВД.ОптическийПривод,НСтр("ru = 'Оптический привод'"),Ложь,Истина,Ложь,Ложь,	НСтр("ru = 'Оптические приводы (CD-ROM, DVD-ROM, Blu-ray)'"),,БиблиотекаКартинок.ннОптическийПривод, Истина, ВХ.Привод,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Память,			НСтр("ru = 'Память'"),		Ложь,	Истина,	Ложь,	Ложь,	НСтр("ru = 'Память'"),,БиблиотекаКартинок.ннПамять, Истина, ВХ.Память,,,);	
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Принтер,		НСтр("ru = 'Принтер'"),		Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Принтеры и МФУ'"),,БиблиотекаКартинок.ннПринтер, Истина, ВХ.Принтер,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.ПрограммноеОбеспечение,НСтр("ru = 'Программное обеспечение'"),Ложь,Ложь,Ложь,Ложь,НСтр("ru = 'Программное обеспечение и лицензии'"),Перечисления.ТипыВидовНоменклатуры.ПрограммноеОбеспечение,БиблиотекаКартинок.ннПрограммноеОбеспечение, Истина,,,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Процессор,		НСтр("ru = 'Процессор'"),	Ложь,	Истина,	Ложь,	Ложь,	НСтр("ru = 'Процессоры'"),,БиблиотекаКартинок.ннПроцессор, Истина, ВХ.Процессор,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.ТипНеОпределен,	НСтр("ru = '<<ТИП НЕ ОПРЕДЕЛЕН>>'"),Ложь,	Ложь,	Ложь,	Ложь,НСтр("ru = 'Прочее'"),,БиблиотекаКартинок.КартинкаНеВыбранногоВидаНоменклатуры, Истина,,,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.СетеваяКарта,	НСтр("ru = 'Сетевая карта'"),Ложь,	Истина,	Ложь,	Ложь,	НСтр("ru = 'Сетевое оборудование'"),,БиблиотекаКартинок.ннСетеваяКарта, Истина, ВХ.СетеваяКарта, Истина,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.СетевоеОборудование,НСтр("ru = 'Сетевое оборудование'"),Истина,Истина,Ложь,Ложь,	НСтр("ru = 'Сетевое оборудование'"), Перечисления.ТипыВидовНоменклатуры.Оборудование,БиблиотекаКартинок.ннСетевоеОборудование, Истина,,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.СетевойКабель,	НСтр("ru = 'Сетевой кабель'"),Ложь,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Сетевое оборудование'"),,БиблиотекаКартинок.КартинкаНеВыбранногоВидаНоменклатуры, Истина,,,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Корпус,			НСтр("ru = 'Корпус'"),		Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Корпусы'"),,БиблиотекаКартинок.ннСистемныйБлок, Истина,,Истина,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Сканер,			НСтр("ru = 'Сканер'"),		Истина,	Истина,	Ложь,	Истина,	НСтр("ru = 'Сканеры'"),,БиблиотекаКартинок.ннСканер, Истина, ВХ.Корпус,Истина);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.ТонкийКлиент,	НСтр("ru = 'Тонкий клиент'"),Истина,	Истина,	Ложь,	Истина,	НСтр("ru = 'Тонкие клиенты'"), Перечисления.ТипыВидовНоменклатуры.Комплект,БиблиотекаКартинок.ннТонкийКлиент, Истина,,Истина);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.ФлешНакопитель,	НСтр("ru = 'Флеш-накопитель'"),Ложь,Истина,Ложь,	Истина,	НСтр("ru = 'Флеш-накопители'"), ,БиблиотекаКартинок.ннФлешНакопитель, Истина,ВХ.ФлешНакопитель,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Бумага,			НСтр("ru = 'Бумага'"),		Ложь,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Прочее'"), Перечисления.ТипыВидовНоменклатуры.РасходныйМатериал,БиблиотекаКартинок.ннБумага, Ложь,,,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Дискеты,		НСтр("ru = 'Дискета'"),		Ложь,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Прочее'"), Перечисления.ТипыВидовНоменклатуры.РасходныйМатериал,БиблиотекаКартинок.ннДискеты, Ложь,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.TV,				НСтр("ru = 'TV'"),			Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Прочее'"), Перечисления.ТипыВидовНоменклатуры.Комплект,БиблиотекаКартинок.ннTV, Истина,,Истина);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Книга,			НСтр("ru = 'Книга'"),		Истина,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Книги'"), Перечисления.ТипыВидовНоменклатуры.Прочее,БиблиотекаКартинок.ннКнига, Истина,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.ИсточникБесперебойногоПитания, НСтр("ru = 'Источник бесперебойного питания'"),Истина,Истина,Ложь,Истина,	НСтр("ru = 'Прочее'"), Перечисления.ТипыВидовНоменклатуры.Прочее,БиблиотекаКартинок.ннБлокПитания, Истина,ВХ.ИБП,);
    ДобавитьВТаблицуЗначений(ТЗ, ВД.СетевойФильтр,	НСтр("ru = 'Сканер'"),		Ложь,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Прочее'"),,БиблиотекаКартинок.ннСетевойФильтр, Ложь, ВХ.Сканер,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Моноблок,		НСтр("ru = 'Моноблок'"),	Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Моноблоки'"),,БиблиотекаКартинок.ннМоноблок, Истина,,Истина);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Планшет,		НСтр("ru = 'Планшет'"),		Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Планшеты'"),,БиблиотекаКартинок.ннПланшет, Истина,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Услуга,			НСтр("ru = 'Услуга'"),		Ложь,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Услуги'"), Перечисления.ТипыВидовНоменклатуры.Услуга, БиблиотекаКартинок.КартинкаНеВыбранногоВидаНоменклатуры, Ложь,,,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать,мМеханизмКонтроляУникальностиНоменклатурыНеКонтролировать);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.КабельКанал,	НСтр("ru = 'Кабель-канал'"),Ложь,	Ложь,	Ложь,	Ложь,	НСтр("ru = 'Прочее'"), , БиблиотекаКартинок.КартинкаНеВыбранногоВидаНоменклатуры, Ложь,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Плоттер,		НСтр("ru = 'Плоттер'"),		Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Принтеры и МФУ'"), , БиблиотекаКартинок.ннПлоттер, Истина,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Картридж,		НСтр("ru = 'Картридж'"),	Истина,	Истина,	Ложь,	Истина,	НСтр("ru = 'Картриджи'"), , БиблиотекаКартинок.ннКартридж, Истина,,);
	ДобавитьВТаблицуЗначений(ТЗ, ВД.Комплект,		НСтр("ru = 'Комплект'"),	Истина,	Истина,	Истина,	Истина,	НСтр("ru = 'Комплекты'"), Перечисления.ТипыВидовНоменклатуры.Комплект, БиблиотекаКартинок.ннСистемныйБлок, Истина,,Истина);
	
	// Записываем
	мРегистрыСведенийХарактеристики = РегистрыСведений.Характеристики;
	Для Каждого Строки Из ТЗ Цикл
		Объект = Строки.Номенклатура.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект, Строки);
		Объект.Картинка = Новый ХранилищеЗначения(Строки.Картинка.Получить());		
		Объект.Записать();
		
		// Записываем характеристики.
		НаборЗаписей = мРегистрыСведенийХарактеристики.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Объект.Ссылка);	
		НаборЗаписей.Записать();
		// Очищаем характеристики старые.
		
		// Записываем характеристики новые.
		НаборЗаписей = мРегистрыСведенийХарактеристики.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Объект.Ссылка);	
		
		Если ЗначениеЗаполнено(Строки.ГруппаХарактеристик) Тогда
			Запрос = Новый Запрос();
			Запрос.Текст =
				"ВЫБРАТЬ
				|	ВидыХарактеристик.Ссылка КАК ВидХарактеристики
				|ИЗ
				|	ПланВидовХарактеристик.ВидыХарактеристик КАК ВидыХарактеристик
				|ГДЕ
				|	ВидыХарактеристик.ЭтоГруппа = ЛОЖЬ
				|	И ВидыХарактеристик.Родитель В ИЕРАРХИИ(&ГруппаХарактеристик)";
			Запрос.УстановитьПараметр("ГруппаХарактеристик", Строки.ГруппаХарактеристик);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				НоваяЗапись                   = НаборЗаписей.Добавить();
				НоваяЗапись.Объект            = Объект.Ссылка;
				НоваяЗапись.ВидХарактеристики = Выборка.ВидХарактеристики;
			КонецЦикла;
			
			НаборЗаписей.Записать();
		КонецЕсли;		
	КонецЦикла;
	
	ЗаполнитьРодительскиеВидыНоменклатуры();	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

// Заполняет родительские виды номенклатуры по умолчанию.
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьРодительскиеВидыНоменклатуры() Экспорт
	
	ВД = Справочники.ВидыНоменклатуры;
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ВидНоменклатуры");
	ТЗ.Колонки.Добавить("Массив");
		
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.БлокПитания;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.Корпус);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.Видеокарта;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.МатеринскаяПлата);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.ЖесткийДиск;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.МатеринскаяПлата);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.ЗвуковаяКарта;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.МатеринскаяПлата);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.ИсточникБесперебойногоПитания;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.Корпус);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.Картридж;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.МФУ);
	НоваяСтрока.Массив.Добавить(ВД.Принтер);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.Клавиатура;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.Комплект);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.Микрофон;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.Комплект);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.Монитор;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.Комплект);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.Мышь;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.Комплект);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.ОптическийПривод;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.Корпус);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.Память;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.МатеринскаяПлата);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.Процессор;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.МатеринскаяПлата);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.СетеваяКарта;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.МатеринскаяПлата);
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.ВидНоменклатуры = ВД.МатеринскаяПлата;
	НоваяСтрока.Массив = Новый Массив();
	НоваяСтрока.Массив.Добавить(ВД.Корпус);
	
	Для Каждого Строки Из ТЗ Цикл
		Объект = Строки.ВидНоменклатуры.ПолучитьОбъект();
		Объект.РодительскиеВиды.Очистить();
		Для Каждого Строки2 Из Строки.Массив Цикл
			Объект.РодительскиеВиды.Очистить();
			НоваяСтрока = Объект.РодительскиеВиды.Добавить();
			НоваяСтрока.РодительскийВид = Строки2;
		КонецЦикла;
		Объект.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ГруппаНоменклатуры(Наименование)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Наименование = &Наименование
		|	И Номенклатура.ЭтоГруппа = ИСТИНА";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Результат = Запрос.Выполнить();
	СоздатьГруппу = Ложь;
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	НоваяГруппа = Справочники.Номенклатура.СоздатьГруппу();
	НоваяГруппа.Наименование = Наименование;
	НоваяГруппа.Записать();
	
	Возврат НоваяГруппа.Ссылка;
	
КонецФункции

Процедура ДобавитьВТаблицуЗначений(ТЗ, Номенклатура, Наименование,
	МожетИметьИнвентарныйНомер       = Ложь,
	МожетИметьСерийныйНомер          = Ложь,
	МожетИметьКомплектующие          = Ложь,
	МожетИметьШтрихкод               = Ложь,
	ГруппаЗаписиНоменклатуры         = Неопределено,
	ТипВидаНоменклатуры              = Неопределено,
	Картинка                         = Неопределено,
	ВестиУчетПоКарточкамНоменклатуры = Истина,
	ГруппаХарактеристик              = Неопределено,
	МожетИметьIPАдрес				 = Ложь,
	УникальностьИнвентарногоНомера	 = Неопределено,
	УникальностьСерийногоНомера	 	 = Неопределено)
	
	НоваяСтрока                                 = ТЗ.Добавить();
	НоваяСтрока.Номенклатура 				    = Номенклатура;
	НоваяСтрока.Наименование 				    = Наименование;
	НоваяСтрока.МожетИметьИнвентарныйНомер 	    = МожетИметьИнвентарныйНомер;
	НоваяСтрока.МожетИметьСерийныйНомер 	    = МожетИметьСерийныйНомер;
	НоваяСтрока.МожетИметьКомплектующие 	    = МожетИметьКомплектующие;
	НоваяСтрока.МожетИметьШтрихкод 			    = МожетИметьШтрихкод;
	НоваяСтрока.МожетИметьIPАдрес 			    = МожетИметьIPАдрес;
	НоваяСтрока.ВестиУчетПоКарточкамНоменклатуры= ВестиУчетПоКарточкамНоменклатуры;
	НоваяСтрока.ГруппаЗаписиНоменклатуры 	    = ?(ГруппаЗаписиНоменклатуры = Неопределено, Справочники.Номенклатура.ПустаяСсылка(), ГруппаЗаписиНоменклатуры);
	НоваяСтрока.ТипВидаНоменклатуры 		    = ?(ТипВидаНоменклатуры = Неопределено, Перечисления.ТипыВидовНоменклатуры.Комплектующая, ТипВидаНоменклатуры);
	НоваяСтрока.ГруппаХарактеристик 	        = ?(ГруппаХарактеристик = Неопределено, ПланыВидовХарактеристик.ВидыХарактеристик.ПустаяСсылка(), ГруппаХарактеристик);
	Если Картинка <> Неопределено Тогда
		НоваяСтрока.Картинка 				    = Новый ХранилищеЗначения(Картинка);
	КонецЕсли;
	НоваяСтрока.УникальностьИнвентарногоНомера	= ?(УникальностьИнвентарногоНомера = Неопределено, Перечисления.МеханизмКонтроляУникальностиНоменклатуры.ВсяИнформационнаяБаза, УникальностьИнвентарногоНомера);
	НоваяСтрока.УникальностьСерийногоНомера		= ?(УникальностьСерийногоНомера = Неопределено, Перечисления.МеханизмКонтроляУникальностиНоменклатуры.ВсяИнформационнаяБаза, УникальностьСерийногоНомера);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли