
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Редактирование.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;	
	
	Если Объект.Ссылка.Пустая() Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.Наименование;
		Объект.ВремяКэширования = 604800;
	Иначе
		Если ЭтоТекстовыйФайл() Тогда
			ЭтаФорма.ТекущийЭлемент = Элементы.ТекстФайла;
		КонецЕсли;
	КонецЕсли;
	
	Если УправлениеITОтделом8УФ.ЭтоДемоСерверОграниченныеПрава() Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;		
	КонецЕсли;
		
	Заголовок = Объект.Наименование;
	
	ОбновитьОтносительныйURL();
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Алгоритм = ТекущийОбъект.Алгоритм.Получить();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Элементы.Редактирование.ТекущаяСтраница = Элементы.Текст Тогда
		ТекущийОбъект.ХранилищеФайла = Новый ХранилищеЗначения(ТекстФайла, Новый СжатиеДанных(9));
	КонецЕсли;
	ТекущийОбъект.Алгоритм = Новый ХранилищеЗначения(Алгоритм, Новый СжатиеДанных(9));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьОтносительныйURL();
	ЭтаФорма.Прочитать();
	ОбновитьОтображениеДанных();
	ОбновитьПовторноИспользуемыеЗначения();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипФайлаПриИзменении(Элемент)
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Заголовок = Объект.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура КэшированиеПриИзменении(Элемент)
	
	Если Объект.Кэширование И Объект.ВремяКэширования = 0 Тогда
		Объект.ВремяКэширования = 604800;
	КонецЕсли;
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстФайлаПриИзменении(Элемент)

	ОбновитьСписокПараметров();	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикСобытияТаблицыПараметры

&НаКлиенте
Процедура ТаблицаПараметровНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)

	ПараметрыПеретаскивания.Значение = 
		"Переменные.Вставить(" + Элемент.ТекущиеДанные.Параметр + ","""");" + Символы.ПС;	

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Элементы.Алгоритм.ВыделенныйТекст = 
		"Переменные.Вставить(""" + Элемент.ТекущиеДанные.Параметр + ""","""");" + Символы.ПС;	

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровПараметрИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;	

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)

	Отказ = Истина;	

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровПередУдалением(Элемент, Отказ)

	Отказ = Истина;	

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровПередНачаломИзменения(Элемент, Отказ)

	Отказ = Истина;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ЗагрузитьФайл

&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	
	Перем ВыбранноеИмя;
	Перем АдресВременногоХранилища;

	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		Режим = РежимДиалогаВыбораФайла.Открытие;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		ДиалогОткрытияФайла.Фильтр = НСтр("ru = 'Все файлы (*.*)|*.*'");
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите файл'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранноеИмя = ДиалогОткрытияФайла.ПолноеИмяФайла;
			Файл = Новый Файл(ВыбранноеИмя);
			Объект.ОписаниеФайла = СтрШаблон(НСтр("ru = 'Исходный файл: %1; Размер: %2 байт; Изменен: %3'"), Файл.Имя,
				Файл.Размер(), Файл.ПолучитьВремяИзменения());
			Объект.Наименование = СокрЛП(Файл.Имя);
			АдресВременногоХранилища = "";
			НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьФайлЗавершение", ЭтотОбъект, 
				Новый Структура("АдресВременногоХранилища,ОписаниеФайла,ИмяФайла", 
					АдресВременногоХранилища,ОБъект.ОписаниеФайла,Файл.Имя)), АдресВременногоХранилища, ВыбранноеИмя, 
					Ложь,);
		КонецЕсли;
	Иначе		
		ПоказатьПредупреждение(,
			НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьФайлОбъекта(АдресВременногоХранилища)
	
	УстановитьПривилегированныйРежим(Истина);
	ЭлементСправочника 					= РеквизитФормыВЗначение("Объект");
	ДвоичныеДанные 						= ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ЭлементСправочника.Расширение 		= ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(
		ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(Объект.Наименование));
	ЭлементСправочника.ХранилищеФайла 	= Новый ХранилищеЗначения(ДвоичныеДанные, 
		Новый СжатиеДанных(?(СтрНайти(НРег(Объект.ТипФайла), "text/") > 0, 9, 0)));
	ЭлементСправочника.Записать();
	
	Модифицированность = Ложь;
	УдалитьИзВременногоХранилища(АдресВременногоХранилища);
	ЗначениеВРеквизитФормы(ЭлементСправочника, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлЗавершение(Результат, Адрес, ВыбранноеИмя, ДополнительныеПараметры) Экспорт
    
    Если Результат И Адрес <> Неопределено И Адрес <> "" Тогда
        ПоместитьФайлОбъекта(Адрес);
		Объект.ОписаниеФайла = ДополнительныеПараметры.ОписаниеФайла;
		Если ПустаяСтрока(Объект.ТипФайла) Тогда
			Объект.ТипФайла = ТипФайла(ДополнительныеПараметры.ИмяФайла);
		КонецЕсли;
		Записать();
		ОбновитьВидимостьДоступность();
		Модифицированность = Ложь;
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Ошибка при загрузке файла в хранилище...'"));
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СохранитьФайл

&НаСервере
Функция ПолучитьФайлНаСервере()
	
	ЭлементСправочника = РеквизитФормыВЗначение("Объект");	
	ДанныеФайла = ЭлементСправочника.ХранилищеФайла.Получить();
	Если ТипЗнч(ДанныеФайла)=Тип("Строка") Тогда
		ВремФайл = ПолучитьИмяВременногоФайла();
		Текст = Новый ЗаписьТекста(ВремФайл, КодировкаТекста.UTF8);
		Текст.Записать(ДанныеФайла);
		Текст.Закрыть();
		ДанныеФайла = Новый ДвоичныеДанные(ВремФайл);
		УдалитьФайлы(ВремФайл);
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеФайла);
	
КонецФункции

&НаКлиенте
Процедура СохранитьФайл(Команда)
	
	Если ВычислитьКод("РеквизитФормыВЗначение(""Объект"").ХранилищеФайла.Получить()=Неопределено") Тогда
		ПоказатьПредупреждение(, НСтр("ru = Нет сохраненного в системе файла''"));
	ИначеЕсли ПодключитьРасширениеРаботыСФайлами() Тогда
		Режим = РежимДиалогаВыбораФайла.Сохранение;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = Объект.Наименование;
		ДиалогОткрытияФайла.Фильтр = НСтр("ru = Все файлы (*.*)|*.*'");
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = Сохранить как...'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранноеИмя = ДиалогОткрытияФайла.ПолноеИмяФайла;
			АдресФайла = ПолучитьФайлНаСервере();
			Данные = ПолучитьИзВременногоХранилища(АдресФайла);
			Файл = Новый Файл(ВыбранноеИмя);
			Если Данные<>Неопределено И Файл.Существует() Тогда
				УдалитьФайлы(ВыбранноеИмя);
			КонецЕсли;			
			Данные.Записать(ВыбранноеИмя);
		КонецЕсли;
	Иначе		
		ПоказатьПредупреждение(,
			НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура КодПроверить(Команда)
	
	ОчиститьСообщения();            
	СкрытыйКод = 
		"ЯзыковыеДанные = Новый Структура();
		|Тело = """";
		|Ответ = Новый HTTPСервисОтвет(200); 
		|ОтносительныйURLПеренаправления = """"; 
		|POST = Новый Массив();
		|Запрос = Новый HTTPЗапрос();
		|ОтносительныйURL = """";
		|Алгоритм = """";
		|ИмяФайла = ""index.html"";
		|Путь = """";
		|Элемент = Неопределено;
		|Переменные = Новый Структура;
		|Результат = Неопределено;";
	Ответ = РедактированиеКода.ПроверитьКод(Алгоритм, СкрытыйКод, Элементы.Алгоритм, Истина);
	Если Ответ<>Истина Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Ответ);
	Иначе
	    ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Ошибок не обнаружено'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодЗакомментироватьБлок(Команда)
	
	РедактированиеКода.ЗакомментироватьБлок(ЭтаФорма, Элементы.Алгоритм, Алгоритм);
	
КонецПроцедуры

&НаКлиенте
Процедура КодРаскомментироватьБлок(Команда)
	
	РедактированиеКода.РаскомментироватьБлок(ЭтаФорма, Элементы.Алгоритм, Алгоритм);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьПараметр(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("ВставитьПараметрЗавершение",ЭтаФорма);
	ПоказатьВводСтроки(ОписаниеОповещения,,"Введите имя параметра",,Ложь);	

КонецПроцедуры

&НаКлиенте
Процедура ВставитьПараметрЗавершение(ИмяПараметра,Параметры) Экспорт

	Если ЗначениеЗаполнено(ИмяПараметра) тогда
		ПараметрТекст = СтрШаблон("<!---%1--->", ИмяПараметра);
		Если СтрЧислоВхождений(ТекстФайла, ПараметрТекст) = 0 тогда
			Элементы.ТекстФайла.ВыделенныйТекст = ПараметрТекст;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьПараметры(Команда)

	Элементы.ТаблицаПараметров.Видимость = НЕ Элементы.ТаблицаПараметров.Видимость;
	ОбновитьВидимостьДоступность();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	
	Данные = РеквизитФормыВЗначение("Объект").ХранилищеФайла.Получить();
	Элементы.ВремяКэширования.Видимость = Объект.Кэширование;
	Элементы.ВставитьПараметр.Видимость = Ложь;
	
	Попытка
		Картинка = Новый Картинка(Данные);
		Если Картинка.Вид <> ВидКартинки.Пустая И Картинка.Формат() <> ФорматКартинки.НеизвестныйФормат 
			И Картинка.Формат() <> Неопределено Тогда
			Элементы.ФорматКартинкиСтрокой.Заголовок = СтрШаблон(НСтр("ru = 'Формат: %1'"), Картинка.Формат());
			АдресИзображения = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ХранилищеФайла");
			Элементы.Редактирование.ТекущаяСтраница = Элементы.Изображение;
			Возврат;
		КонецЕсли;
	Исключение
	КонецПопытки;		
	
	Если СтрНайти(НРег(Объект.ТипФайла), "font") > 0 
		ИЛИ СтрНайти(НРег(Объект.ТипФайла), "application/unknown") > 0 Тогда
		Элементы.Редактирование.ТекущаяСтраница = Элементы.Файл;
	ИначеЕсли СтрНайти(НРег(Объект.ТипФайла), "image/") > 0  Тогда
		Элементы.Редактирование.ТекущаяСтраница = Элементы.Изображение;
	Иначе
		Элементы.Редактирование.ТекущаяСтраница = Элементы.Текст;
		ТекстФайла = РаботаСHTML.ПолучитьТекстИзДвоичныхДанных(Данные);
		ОбновитьСписокПараметров();
		Элементы.ВставитьПараметр.Видимость = Истина;
	КонецЕсли;
		
	Элементы.ПоказатьСкрытьПараметры.Картинка = ?(Элементы.ТаблицаПараметров.Видимость, 
		БиблиотекаКартинок.СтрелкаВлево, БиблиотекаКартинок.СтрелкаВправо);	
		
	
КонецПроцедуры

&НаСервере
Функция ТипФайла(ИмяФайла)
	
	Возврат РаботаСHTML.ТипФайла(ИмяФайла);
	
КонецФункции

&НаСервере
Функция ВычислитьКод(Код, Параметр = Неопределено)
	
	Возврат Вычислить(Код)
	
КонецФункции

&НаСервере
Функция ЭтоТекстовыйФайл()
	
	Возврат СтрНайти(НРег(Объект.ТипФайла), "text/") > 0 ИЛИ
		СтрНайти(";json;md;txt;yml;log;cvs;less;coffee;map;css;js;less;xml;html;htm;php;pl;log;", 
			";" + НРег(Объект.Расширение) + ";") > 0
		
КонецФункции

&НаСервере
Процедура ОбновитьОтносительныйURL()
	
	ОтносительныйURL = HTTPСервисы.ОтносительныйURLСтраницы(Объект.Ссылка);
	
КонецПроцедуры

//@skip-warning
&НаСервере
Процедура АлгоритмСтраницы(Знач Стр)
	
	HTTPСервисы.АлгоритмСтраницы(Стр);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокПараметров()
	
	ТаблицаПараметров.Загрузить(HTTPСервисы.ПолучитьТаблицуПараметов(ТекстФайла, Ложь));
	
КонецПроцедуры

#КонецОбласти