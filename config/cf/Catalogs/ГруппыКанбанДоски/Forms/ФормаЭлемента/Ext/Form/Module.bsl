
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	БазовыеЦвета = ЗначениеИзСтрокиВнутр(ПолучитьОбщийМакет("БазовыеЦвета").ПолучитьТекст());
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ЦветТекста = "#666666";
    	Объект.Отображать = Истина;
        Объект.ВидГруппы = Перечисления.ВидыГруппКанбанДоски.Отборы;
		ИнициализироватьУсловиеОтбора();
    КонецЕсли; 
	
	Попытка
		РедактируемыйЦветТекста = РаботаСЦветомКлиентСервер.HexВЦвет(Объект.ЦветТекста);
	Исключение
		РедактируемыйЦветТекста = РаботаСЦветомКлиентСервер.HexВЦвет("#666666");
	КонецПопытки;
	
    Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
    ОбновитьВидимостьДоступность();    
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ИсточникГруппыКанбанДоски");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализироватьУсловиеОтбора();
	
	Если ТекущийОбъект.УсловиеОтбора.Получить() <> Неопределено Тогда
		УсловиеОтбора.ЗагрузитьНастройки(ТекущийОбъект.УсловиеОтбора.Получить());		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ЦветТекста = РаботаСЦветомКлиентСервер.ЦветВHex(РедактируемыйЦветТекста);
	ТекущийОбъект.УсловиеОтбора = Новый ХранилищеЗначения(УсловиеОтбора.Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидГруппыПриИзменении(Элемент)
    
    ИнициализироватьУсловиеОтбора();
    ОбновитьВидимостьДоступность();
    
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Результат = Неопределено;
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("РедактируемыйЦветТекстаНачалоВыбораЗавершение1", ЭтотОбъект),
		БазовыеЦвета, Элемент, БазовыеЦвета.НайтиПоЗначению(РедактируемыйЦветТекста));
		
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаНачалоВыбораЗавершение1(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Результат = ВыбранныйЭлемент;
    Если Результат <> Неопределено Тогда
        
        Если ТипЗнч(Результат.Значение) = Тип("Строка") Тогда
            ПараметрыФормы = Новый Структура("РедактируемыйЦвет", РедактируемыйЦветТекста);
            ОткрытьФорму("ОбщаяФорма.ФормаВыбораЦвета", ПараметрыФормы, Элементы.РедактируемыйЦветТекста,,,,
				Новый ОписаниеОповещения("РедактируемыйЦветТекстаНачалоВыбораЗавершение", ЭтотОбъект,
					Новый Структура("Результат", Результат)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
            Возврат;
        Иначе
            РедактируемыйЦветТекста = Результат.Значение;
        КонецЕсли;
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаНачалоВыбораЗавершение(Результат1, ДополнительныеПараметры) Экспорт
    
    Результат = ДополнительныеПараметры.Результат;
    
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Цвет") Тогда
		РедактируемыйЦветТекста = ВыбранноеЗначение;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	
	Если ЗначениеЗаполнено(Объект.ВидГруппы) Тогда	
		ИндексТипаТипУсловия = Перечисления.ВидыГруппКанбанДоски.Индекс(Объект.ВидГруппы);
		ИмяТипУсловия = Метаданные.Перечисления.ВидыГруппКанбанДоски.ЗначенияПеречисления[ИндексТипаТипУсловия].Имя;
	Иначе
		ИмяТипУсловия = "Пусто";
	КонецЕсли;
	Элементы.Страницы.ТекущаяСтраница = Элементы["Страница" + ИмяТипУсловия];
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьУсловиеОтбора()
		
    СКД = Документы.Задание.ПолучитьМакет("СКД_Канбан");
		
	УсловиеОтбора.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(
		ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор)));
	УсловиеОтбора.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
	УсловиеОтбора.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
КонецПроцедуры

#КонецОбласти