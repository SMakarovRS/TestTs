#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Заполняет справочник по умолчанию.
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьОценкиЗаданийПриПервоначальномЗаполнении(Знач ИмяНастроек = "") Экспорт
	
    СтрБелыйЦвет    = РаботаСЦветомКлиентСервер.ЦветВHex(Новый Цвет(255, 255, 255));
    
    #Область Отлично
    НачатьТранзакцию();
    Попытка
    	Элемент 						= Справочники.ОценкиЗаданий.Отлично.ПолучитьОбъект();
    	Элемент.Наименование 			= НСтр("ru = 'Отлично'");
    	Элемент.Порядок 				= 0;
    	Элемент.ВыводитьВТекстеПисьма 	= Истина;
		Если ИмяНастроек = "КартинкиОценки" Тогда
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоИзображение;
			Элемент.Картинка			= Новый ХранилищеЗначения(БиблиотекаКартинок.ОценкаОтлично.ПолучитьДвоичныеДанные());
		Иначе
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоТекст;
    		Элемент.ЦветТекста 			= СтрБелыйЦвет;
    		Элемент.ЦветФона			= РаботаСЦветомКлиентСервер.ЦветВHex(Новый Цвет(46, 175, 30));
		КонецЕсли;
    	Элемент.Значение				= 5;
    	Элемент.Записать();
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
    КонецПопытки;
    #КонецОбласти
    
    #Область Хорошо
    НачатьТранзакцию();
    Попытка
    	Элемент 						= Справочники.ОценкиЗаданий.Хорошо.ПолучитьОбъект();
    	Элемент.Наименование 			= НСтр("ru = 'Хорошо'");
    	Элемент.Порядок 				= 1;
	  	Элемент.ВыводитьВТекстеПисьма 	= Истина;
		Если ИмяНастроек = "КартинкиОценки" Тогда
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоИзображение;
			Элемент.Картинка			= Новый ХранилищеЗначения(БиблиотекаКартинок.ОценкаХорошо.ПолучитьДвоичныеДанные());
		Иначе
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоТекст;
	    	Элемент.ЦветТекста 			= СтрБелыйЦвет;
	    	Элемент.ЦветФона			= РаботаСЦветомКлиентСервер.ЦветВHex(Новый Цвет(106, 161, 25));
		КонецЕсли;
    	Элемент.Значение				= 4;
    	Элемент.Записать();
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
    КонецПопытки;
    #КонецОбласти
    
    #Область Средне
    НачатьТранзакцию();
    Попытка
    	Элемент 						= Справочники.ОценкиЗаданий.Средне.ПолучитьОбъект();
    	Элемент.Наименование 			= НСтр("ru = 'Средне'");
    	Элемент.Порядок 				= 2;
    	Элемент.ВыводитьВТекстеПисьма 	= Истина;
		Если ИмяНастроек = "КартинкиОценки" Тогда
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоИзображение;
			Элемент.Картинка			= Новый ХранилищеЗначения(БиблиотекаКартинок.ОценкаСредне.ПолучитьДвоичныеДанные());
		Иначе
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоТекст;
    		Элемент.ЦветТекста 			= СтрБелыйЦвет;
    		Элемент.ЦветФона			= РаботаСЦветомКлиентСервер.ЦветВHex(Новый Цвет(249, 190, 17));
		КонецЕсли;
    	Элемент.Значение				= 3;
    	Элемент.Записать();
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
    КонецПопытки;
    #КонецОбласти
    
    #Область Низко     
    НачатьТранзакцию();
    Попытка
    	Элемент 						= Справочники.ОценкиЗаданий.Низко.ПолучитьОбъект();
    	Элемент.Наименование 			= НСтр("ru = 'Низко'");
    	Элемент.Порядок 				= 3;
    	Элемент.ВыводитьВТекстеПисьма 	= Истина;
		Если ИмяНастроек = "КартинкиОценки" Тогда
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоИзображение;
			Элемент.Картинка			= Новый ХранилищеЗначения(БиблиотекаКартинок.ОценкаНизко.ПолучитьДвоичныеДанные());
		Иначе
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоТекст;
    		Элемент.ЦветТекста 			= СтрБелыйЦвет;
    		Элемент.ЦветФона			= РаботаСЦветомКлиентСервер.ЦветВHex(Новый Цвет(242, 135, 58));
		КонецЕсли;
    	Элемент.Значение				= 2;
    	Элемент.Записать();
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
    КонецПопытки;
    #КонецОбласти 
    
    #Область Ужасно
    НачатьТранзакцию();
    Попытка
    	Элемент 						= Справочники.ОценкиЗаданий.Ужасно.ПолучитьОбъект();
    	Элемент.Наименование 			= НСтр("ru = 'Ужасно'");
    	Элемент.Порядок 				= 4;
    	Элемент.ВыводитьВТекстеПисьма 	= Истина;
		Если ИмяНастроек = "КартинкиОценки" Тогда
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоИзображение;
			Элемент.Картинка			= Новый ХранилищеЗначения(БиблиотекаКартинок.ОценкаУжасно.ПолучитьДвоичныеДанные());
		Иначе
			Элемент.ВнешнийВидОценки	= Перечисления.ВнешнийВидОценки.ТолькоТекст;
    		Элемент.ЦветТекста 			= СтрБелыйЦвет;
    		Элемент.ЦветФона			= РаботаСЦветомКлиентСервер.ЦветВHex(Новый Цвет(227, 63, 35));			
		КонецЕсли;
    	Элемент.Значение				= 1;
    	Элемент.Записать();
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
    КонецПопытки;
    #КонецОбласти
    
    #Область БезОценки
    НачатьТранзакцию();
    Попытка
    	Элемент 						= Справочники.ОценкиЗаданий.БезОценки.ПолучитьОбъект();
    	Элемент.Наименование 			= НСтр("ru = 'Без оценки'");
    	Элемент.Порядок 				= 5;
    	Элемент.ВыводитьВТекстеПисьма 	= Ложь;
		Элемент.ВнешнийВидОценки		= Перечисления.ВнешнийВидОценки.ТолькоТекст;
    	Элемент.ЦветТекста 				= РаботаСЦветомКлиентСервер.ЦветВHex(Новый Цвет(0, 0, 0));
    	Элемент.ЦветФона				= СтрБелыйЦвет;		
    	Элемент.Значение				= 0;
    	Элемент.Записать();
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
    КонецПопытки;
    #КонецОбласти
    
    #Область ПовторноеОткрытие
    НачатьТранзакцию();
    Попытка
    	Элемент 						= Справочники.ОценкиЗаданий.ПовторноеОткрытие.ПолучитьОбъект();
    	Элемент.Наименование 			= НСтр("ru = 'Повторное открытие'");
    	Элемент.Порядок 				= 6;
    	Элемент.ВыводитьВТекстеПисьма 	= Ложь;
		Элемент.ВнешнийВидОценки		= Перечисления.ВнешнийВидОценки.ТолькоТекст;
    	Элемент.ЦветТекста 				= РаботаСЦветомКлиентСервер.ЦветВHex(Новый Цвет(0, 0, 200));
    	Элемент.ЦветФона				= СтрБелыйЦвет;		
    	Элемент.Значение				= 0;
    	Элемент.Записать();
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
    КонецПопытки;
    #КонецОбласти
    	
КонецПроцедуры

#КонецОбласти

#КонецЕсли