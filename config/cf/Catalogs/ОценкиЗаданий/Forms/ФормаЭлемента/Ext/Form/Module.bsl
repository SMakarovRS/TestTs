
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БазовыеЦвета = ЗначениеИзСтрокиВнутр(ПолучитьОбщийМакет("БазовыеЦвета").ПолучитьТекст());
	Если Объект.Ссылка.Пустая() Тогда
		ЦветТекста = WebЦвета.Черный;
		Объект.ВнешнийВидОценки = Перечисления.ВнешнийВидОценки.ТолькоИзображение;
	Иначе
		Попытка
			ЦветТекста = РаботаСЦветомКлиентСервер.HexВЦвет(Объект.ЦветТекста);			
		Исключение
			ЦветТекста = WebЦвета.Черный;
		КонецПопытки;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ЦветФона = WebЦвета.Белый;
	Иначе
		Попытка
			ЦветФона = РаботаСЦветомКлиентСервер.HexВЦвет(Объект.ЦветФона);			
		Исключение
			ЦветФона = WebЦвета.Белый;
		КонецПопытки;
	КонецЕсли;
	
	ОбновитьВидимостьИДоступность();
	ОбновитьИзображение();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ЦветТекста 	= РаботаСЦветомКлиентСервер.ЦветВHex(ЦветТекста);
	ТекущийОбъект.ЦветФона 		= РаботаСЦветомКлиентСервер.ЦветВHex(ЦветФона);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ОценкиЗаданий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	
	ОчиститьИзображениеНаСервере();	
	ОбновитьИзображение();
	Элементы.АдресКартинки.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзображениеИзФайла(Команда)
	
	ВыбратьКартинкуИзФайла();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзображениеИзНабора(Команда)
	
	Результат = Неопределено;	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораИзображенияИзНабора",,,,,,
		Новый ОписаниеОповещения("ВыбратьИзображениеИзНабораЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзображениеИзНабораЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если Результат <> Неопределено Тогда
        Адрес = ПоместитьВоВременноеХранилище(Результат);
        ПоместитьФайлОбъекта(Адрес);
        Элементы.АдресКартинки.Обновить();
		ОбновитьИзображение();
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РедактируемыйЦветТекстаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Результат = Неопределено;	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("РедактируемыйЦветТекстаНачалоВыбораЗавершение", ЭтотОбъект), 
        БазовыеЦвета, Элемент, БазовыеЦвета.НайтиПоЗначению(ЦветТекста));
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Результат = ВыбранныйЭлемент;
    Если Результат <> Неопределено Тогда
		
		Если ТипЗнч(Результат) = Тип("Цвет") Тогда
			ЦветТекста = Результат;
        ИначеЕсли ТипЗнч(Результат.Значение) = Тип("Строка") Тогда
            ПараметрыФормы = Новый Структура("РедактируемыйЦвет", ЦветТекста);
            ОткрытьФорму("ОбщаяФорма.ФормаВыбораЦвета", ПараметрыФормы, Элементы.ЦветТекста,,,, 
                Новый ОписаниеОповещения("РедактируемыйЦветТекстаНачалоВыбораЗавершение", ЭтотОбъект, 
                    Новый Структура("Результат", Результат)),
                РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
            Возврат;
        Иначе
            ЦветТекста = Результат.Значение;
        КонецЕсли;        
        ОбновитьВидимостьИДоступность();
		
	КонецЕсли;
	

КонецПроцедуры

&НаКлиенте
Процедура ЦветТекстаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Цвет") Тогда
		ЦветТекста = ВыбранноеЗначение;		
		ОбновитьВидимостьИДоступность();
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветФонаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Результат = Неопределено;	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("РедактируемыйЦветФонаНачалоВыбораЗавершение", ЭтотОбъект), 
        БазовыеЦвета, Элемент, БазовыеЦвета.НайтиПоЗначению(ЦветФона));

КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветФонаНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Результат = ВыбранныйЭлемент;
    Если Результат <> Неопределено Тогда
		
		Если ТипЗнч(Результат) = Тип("Цвет") Тогда
			ЦветФона = Результат;
        ИначеЕсли ТипЗнч(Результат.Значение) = Тип("Строка") Тогда
            ПараметрыФормы = Новый Структура("РедактируемыйЦвет", ЦветФона);
            ОткрытьФорму("ОбщаяФорма.ФормаВыбораЦвета", ПараметрыФормы, Элементы.ЦветФона,,,,
                Новый ОписаниеОповещения("РедактируемыйЦветФонаНачалоВыбораЗавершение", ЭтотОбъект, 
                    Новый Структура("Результат", Результат)), 
                РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
            Возврат;
        Иначе
            ЦветФона = Результат.Значение;
		КонецЕсли;
		ОбновитьВидимостьИДоступность();
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЦветФонаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Цвет") Тогда
		ЦветФона = ВыбранноеЗначение;
		ОбновитьВидимостьИДоступность();
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьКартинкуИзФайла();
КонецПроцедуры

&НаКлиенте
Процедура ВнешнийВидОценкиПриИзменении(Элемент)
	
	ОбновитьВидимостьИДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВидимостьИДоступность()
	
	Элементы.Образец.ЦветТекста = ЦветТекста;
	Элементы.Образец.ЦветФона 	= ЦветФона;
	Элементы.ГруппаЦвета.Видимость = Объект.ВнешнийВидОценки = Перечисления.ВнешнийВидОценки.ТолькоТекст;
	Элементы.Образец.Видимость = Элементы.ГруппаЦвета.Видимость;
	Элементы.ГруппаКнопкиКартинки.Видимость = Объект.ВнешнийВидОценки = Перечисления.ВнешнийВидОценки.ТолькоИзображение;
	Элементы.АдресКартинки.Видимость = Элементы.ГруппаКнопкиКартинки.Видимость;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьИзображениеНаСервере()
	
	ЭлементСправочника = РеквизитФормыВЗначение("Объект");
	ЭлементСправочника.Картинка = Неопределено;
	ЭлементСправочника.Записать();
	Модифицированность = Ложь;
	ЗначениеВРеквизитФормы(ЭлементСправочника, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИзображение()
	
	АдресКартинки = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Картинка")
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзФайла()
	
	Перем ВыбранноеИмя;
	Перем АдресВременногоХранилища;

	НачатьПодключениеРасширенияРаботыСФайлами(Новый ОписаниеОповещения("ВыбратьКартинкуИзФайлаЗавершение2", ЭтотОбъект, 
		Новый Структура("АдресВременногоХранилища", АдресВременногоХранилища)));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзФайлаЗавершение2(Подключено, ДополнительныеПараметры) Экспорт
	
	АдресВременногоХранилища = ДополнительныеПараметры.АдресВременногоХранилища;
	
	
	Если Подключено Тогда
		Режим = РежимДиалогаВыбораФайла.Открытие;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		Фильтр = УправлениеITОтделом8УФКлиентСервер.ПолучитьФильтрИзображений();
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите изображение'");
		ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ВыбратьКартинкуИзФайлаЗавершение1", ЭтотОбъект,
			Новый Структура("АдресВременногоХранилища, ДиалогОткрытияФайла", АдресВременногоХранилища, ДиалогОткрытияФайла)));
	Иначе		
		ПоказатьПредупреждение(,НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзФайлаЗавершение1(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	АдресВременногоХранилища = ДополнительныеПараметры.АдресВременногоХранилища;
	ДиалогОткрытияФайла = ДополнительныеПараметры.ДиалогОткрытияФайла;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ВыбранноеИмя = ДиалогОткрытияФайла.ПолноеИмяФайла;
		НачатьПомещениеФайла(Новый ОписаниеОповещения("ВыбратьКартинкуИзФайлаЗавершение", ЭтотОбъект, 
			Новый Структура("АдресВременногоХранилища", АдресВременногоХранилища)), 
			АдресВременногоХранилища, ВыбранноеИмя, Ложь,);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзФайлаЗавершение(Результат, Адрес, ВыбранноеИмя, ДополнительныеПараметры) Экспорт
    
    Если Результат Тогда
        ПоместитьФайлОбъекта(Адрес);
        Элементы.АдресКартинки.Обновить();
		ОбновитьИзображение();
    КонецЕсли;

КонецПроцедуры

// Процедура извлекает данные объекта из временного хранилища, 
// производит модификацию элемента справочника и записывает его.
// 
// Параметры: 
//  АдресВременногоХранилища - Строка - адрес временного хранилища. 
// 
// Возвращаемое значение: 
//  Нет.
&НаСервере
Процедура ПоместитьФайлОбъекта(АдресВременногоХранилища)
	
	ЭлементСправочника = РеквизитФормыВЗначение("Объект");
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ЭлементСправочника.Картинка = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());
	ЭлементСправочника.Записать();
	Модифицированность = Ложь;
	УдалитьИзВременногоХранилища(АдресВременногоХранилища);
	ЗначениеВРеквизитФормы(ЭлементСправочника, "Объект");
	
КонецПроцедуры

#КонецОбласти