
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	#Область БСП
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
		
	#КонецОбласти
	
	Периоды.Параметры.УстановитьЗначениеПараметра("Владелец", Объект.Ссылка);	
	
	// Учет остатков контрагентов.
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("ОрганизацииОрганизация");
	УправлениеITОтделом8УФ.УстановитьОграничениеТипаДляЭлементовФормы(ЭтаФорма, МассивЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
    УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	Периоды.Параметры.УстановитьЗначениеПараметра("Владелец", ТекущийОбъект.Ссылка);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_Бюджеты", Новый Структура, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма") 
		И ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ФормаВыбораОрганизацииКонтрагента"
		И ИсточникВыбора.ВладелецФормы = ЭтаФорма Тогда
		СтрокаТекущиеДанные = Элементы.Организации.ТекущиеДанные;
		УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикОбработкаВыбораФормы(ЭтаФорма, 
	 		"ОрганизацииОрганизация",
			СтрокаТекущиеДанные.Организация,
			ВыбранноеЗначение,
			Новый ОписаниеОповещения("ПослеОбработкиВыбора", ЭтотОбъект));	
	КонецЕсли;
	
КонецПроцедуры					

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПериоды

&НаКлиенте
Процедура ПериодыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Объект.Ссылка.Пустая() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Для добавления периодов необходимо записать элемент'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Копирование Тогда
		
		Отказ 			= Истина;
		ДатаНачала 		= СледующаяДатаНачалаПериода(Объект.Ссылка);
		Если ДатаНачала = Дата(1, 1, 1) Тогда
			ДатаНачала = Объект.ДатаНачала;
		КонецЕсли;
		ДатаОкончания 	= КонецМесяца(ДатаНачала);
		мПараметры = Новый Структура("Владелец, ДатаНачала, ДатаОкончания", Объект.Ссылка, ДатаНачала, ДатаОкончания);
		ОткрытьФорму("Справочник.ПериодыБюджетов.ФормаОбъекта", мПараметры, Объект.Ссылка,
			УникальныйИдентификатор,,,
			Новый ОписаниеОповещения("ПериодыПередНачаломДобавленияЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодыПередНачаломДобавленияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.Периоды.Обновить();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьНаименование(Команда)
	СформироватьНаименованиеСервер();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОрганизации(Команда)
	ЗаполнитьОрганизацииСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПоМесяцам(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда   
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполнение возможно только после записи'"));
		Возврат;
	КонецЕсли;
	ЗаполнитьПериоды(0);
КонецПроцедуры

&НаКлиенте
Процедура ПоКварталам(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда   
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполнение возможно только после записи'"));
		Возврат;
	КонецЕсли;
	ЗаполнитьПериоды(1);
КонецПроцедуры

&НаКлиенте
Процедура ПоПолугодиям(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда   
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполнение возможно только после записи'"));
		Возврат;
	КонецЕсли;
	ЗаполнитьПериоды(2);
КонецПроцедуры

&НаКлиенте
Процедура ПоГодам(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда   
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполнение возможно только после записи'"));
		Возврат;
	КонецЕсли;
	ЗаполнитьПериоды(3);
КонецПроцедуры

&НаКлиенте
Процедура ПоДням(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда   
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполнение возможно только после записи'"));
		Возврат;
	КонецЕсли;
	ЗаполнитьПериоды(5);
КонецПроцедуры

&НаКлиенте
Процедура ПоНеделям(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда   
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполнение возможно только после записи'"));
		Возврат;
	КонецЕсли;
	ЗаполнитьПериоды(4);
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик команды "УстановитьИнтервал".
//
Процедура ВыборПериодаБюджета(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период.Вариант = ВариантСтандартногоПериода.Месяц;
	Диалог.Период.ДатаНачала = Объект.ДатаНачала;
	Диалог.Период.ДатаОкончания = Объект.ДатаОкончания;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораПериодаЗаполнения", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры // УстановитьИнтервал()

&НаКлиенте
// Процедура обрабатывает результат выбора периода заполнения текущего документа
//
Процедура ПослеВыбораПериодаЗаполнения(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		
		Объект.ДатаНачала = РезультатЗакрытия.ДатаНачала;
		Объект.ДатаОкончания = РезультатЗакрытия.ДатаОкончания;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область БСП

// СтандартныеПодсистемы.Свойства

&НаСервере
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, 
	НавигационнаяСсылка = Неопределено, 
	СтандартнаяОбработка = Неопределено)
	
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервере
Процедура ЗаполнитьПериоды(Режим)
		
	ОчиститьПериоды();
		
	ТемпДатаНачала = Объект.ДатаНачала;
	Порядок = 0;
	Пока ТемпДатаНачала <= Объект.ДатаОкончания Цикл
		НовыйЭлемент = Справочники.ПериодыБюджетов.СоздатьЭлемент();
		НовыйЭлемент.Владелец = Объект.Ссылка;
		
		Если Режим = 0 Тогда
			// По месяцам
			НовыйЭлемент.ДатаНачала = НачалоМесяца(ТемпДатаНачала);
			НовыйЭлемент.ДатаОкончания = КонецМесяца(ТемпДатаНачала);
		ИначеЕсли Режим = 1 Тогда
			// По кварталам
			НовыйЭлемент.ДатаНачала = НачалоКвартала(ТемпДатаНачала);
			НовыйЭлемент.ДатаОкончания = КонецКвартала(ТемпДатаНачала);			
		ИначеЕсли Режим = 2 Тогда
			// По Полугодиям
			НовыйЭлемент.ДатаНачала = НачалоМесяца(ТемпДатаНачала);
			НовыйЭлемент.ДатаОкончания = ДобавитьМесяц(НовыйЭлемент.ДатаНачала, 6) - 1;
		ИначеЕсли Режим = 3 Тогда
			// По годам
			НовыйЭлемент.ДатаНачала = НачалоГода(ТемпДатаНачала);
			НовыйЭлемент.ДатаОкончания = КонецГода(ТемпДатаНачала);			
		ИначеЕсли Режим = 4 Тогда
			// По неделям
			НовыйЭлемент.ДатаНачала = НачалоНедели(ТемпДатаНачала);
			НовыйЭлемент.ДатаОкончания = КонецНедели(ТемпДатаНачала);			
		ИначеЕсли Режим = 5 Тогда
			// По дням
			НовыйЭлемент.ДатаНачала = НачалоДня(ТемпДатаНачала);
			НовыйЭлемент.ДатаОкончания = КонецДня(ТемпДатаНачала);			
		Иначе
			Прервать;
		КонецЕсли;
		
		НовыйЭлемент.Наименование = СформироватьПредставлениеПериода(
			НачалоДня(НовыйЭлемент.ДатаНачала), 
			КонецДня(НовыйЭлемент.ДатаОкончания));
			
		НовыйЭлемент.Порядок = Порядок;
		НовыйЭлемент.Записать();
		
		Порядок = Порядок + 1;
		
		Если Режим = 0 Тогда
			ТемпДатаНачала = КонецМесяца(ТемпДатаНачала) + 1;
		ИначеЕсли Режим = 1 Тогда
			ТемпДатаНачала = КонецКвартала(ТемпДатаНачала) + 1;
		ИначеЕсли Режим = 2 Тогда
			ТемпДатаНачала =  ДобавитьМесяц(НачалоМесяца(ТемпДатаНачала), 6);
		ИначеЕсли Режим = 3 Тогда
			ТемпДатаНачала = КонецГода(ТемпДатаНачала) + 1;
		ИначеЕсли Режим = 4 Тогда
			ТемпДатаНачала = КонецНедели(ТемпДатаНачала) + 1;
		ИначеЕсли Режим = 5 Тогда
			ТемпДатаНачала = КонецДня(ТемпДатаНачала) + 1;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Периоды.Параметры.УстановитьЗначениеПараметра("Владелец", Объект.Ссылка);
	Элементы.Периоды.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОрганизацииСервер()
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ПометкаУдаления = ЛОЖЬ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Организации.Добавить();
		НоваяСтрока.Организация = Выборка.Ссылка;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция СформироватьПредставлениеПериода(ДатаНач, ДатаКон)
	
	Если ДатаНач = Дата(1, 1, 1) ИЛИ ДатаКон = Дата(1, 1, 1) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не заполнены даты начала и(или) окончания в бюджете'"));
		Возврат "";
	КонецЕсли;
	
	Возврат ПредставлениеПериода(ДатаНач, ДатаКон);
	
КонецФункции

&НаСервере
Процедура СформироватьНаименованиеСервер()
	
	Текст = "";
	Для Каждого Строки Из Объект.Организации Цикл
		Префикс = ?(ПустаяСтрока(Текст), " ", ", ");
		
		Текст = Текст + Префикс + СокрЛП(Строки.Организация.Наименование);
	КонецЦикла;
	
	Объект.Наименование = СтрШаблон(НСтр("ru = 'Бюджет %1'"),
		СокрЛП(ПредставлениеПериода(НачалоДня(Объект.ДатаНачала), КонецДня(Объект.ДатаОкончания)) + Текст));
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьПериоды()
	
	// Очистка предыдущих.
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПериодыБюджетов.Ссылка,
		|	ПериодыБюджетов.Наименование
		|ИЗ
		|	Справочник.ПериодыБюджетов КАК ПериодыБюджетов
		|ГДЕ
		|	ПериодыБюджетов.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
	Рез = Запрос.Выполнить();
	Если НЕ Рез.Пустой() Тогда
	    Выборка = Рез.Выбрать();
		ЕстьОшибки = Ложь;
		Пока Выборка.Следующий() Цикл
			Массив = Новый Массив();
			Массив.Добавить(Выборка.Ссылка);
			ТабСсылок = НайтиПоСсылкам(Массив);
			
			Если ТабСсылок.Количество() > 0 Тогда
				ОбщегоНазначения.СообщитьПользователю(
					СтрШаблон(НСтр("ru = 'Не могу удалить период ""%1"" этот период используется в документах'"),
						Выборка.Наименование));
				ЕстьОшибки = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьОшибки Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Есть ошибки при удалении периодов'"));
			Возврат;
		КонецЕсли;
		
		Выборка.Сбросить();
		НачатьТранзакцию();
		Пока Выборка.Следующий() Цикл
			Попытка
				ОбъектСпр = Выборка.Ссылка.ПолучитьОбъект();
				ОбъектСпр.Удалить();
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	Элементы.Периоды.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СледующаяДатаНачалаПериода(Бюджет)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ПериодыБюджетов.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	Справочник.ПериодыБюджетов КАК ПериодыБюджетов
		|ГДЕ
		|	ПериодыБюджетов.Владелец = &Бюджет
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОкончания УБЫВ";
	Запрос.УстановитьПараметр("Бюджет", Бюджет);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Возврат КонецДня(Выборка.ДатаОкончания) + 1;
		
	Иначе
		
		Возврат Дата(1, 1, 1);
		
	КонецЕсли;
	
	
КонецФункции

#Область УчетОстатковКонтрагентов

&НаКлиенте
Процедура Подключаемый_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокаТекущиеДанные = Элементы.Организации.ТекущиеДанные;	
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикНачалоВыбора(ЭтаФорма,
		СтрокаТекущиеДанные.Организация,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
		
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикАвтоПодбор(ЭтаФорма, 
				"ОрганизацииОрганизация",
				Текст, 
				ДанныеВыбора,
				Ожидание,
				СтандартнаяОбработка);
				
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Очистка(Элемент, СтандартнаяОбработка)	
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)	
	
	СтрокаТекущиеДанные = Элементы.Организации.ТекущиеДанные;	
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикОбработкаВыбора(ЭтаФорма, 
				"ОрганизацииОрганизация", 
				СтрокаТекущиеДанные.Организация,
				Новый ОписаниеОповещения("ПослеОбработкиВыбора", ЭтотОбъект),
				ВыбранноеЗначение,
				СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбработкиВыбора(Результат, ДополнительныеПараметры) Экспорт
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти