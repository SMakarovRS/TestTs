
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.Активность = Истина;
		Алгоритм = TelegramСервер.КомментарийПредопределенныхПеременныхДействий();
		
	КонецЕсли;
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Алгоритм = ТекущийОбъект.Алгоритм.Получить();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.Алгоритм = Новый ХранилищеЗначения(Алгоритм, Новый СжатиеДанных(9));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОчиститьВсеПараметрыПриИзменении(Элемент)
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметры

&НаКлиенте
Процедура ПараметрыПриАктивизацииСтроки(Элемент)
	
	ОбновитьДоступностьСтолбцаЗначениеТаблицыПараметры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДействиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Параметры.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.TelegramДействияСПараметром.Очистить") Тогда
		ТекущиеДанные.Значение = "";
	КонецЕсли;
	
	ОбновитьДоступностьСтолбцаЗначениеТаблицыПараметры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сообщение(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Отправка сообщения'"), "sendMessage", "ОтправитьСообщение");
	
КонецПроцедуры

&НаКлиенте
Процедура Фото(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Отправка фото'"), "sendPhoto", "ОтправитьФото");
	
КонецПроцедуры

&НаКлиенте
Процедура Видео(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Отправка видео'"), "sendVideo", "ОтправитьВидео");
	
КонецПроцедуры

&НаКлиенте
Процедура Файл(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Отправка файла'"), "sendDocument", "ОтправитьДокумент");
	
КонецПроцедуры

&НаКлиенте
Процедура Аудио(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Отправка аудио'"), "sendAudio", "ОтправитьАудио");
	
КонецПроцедуры

&НаКлиенте
Процедура Голосовое(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Отправка голосового сообщения'"), "sendVoice", "ОтправитьГолосовоеСообщение");
	
КонецПроцедуры

&НаКлиенте
Процедура Местоположение(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Отправка местоположения'"), "sendLocation", "ОтправитьМестоположение");
	
КонецПроцедуры

&НаКлиенте
Процедура МестоНаКарте(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Отправка места на карте'"), "sendVenue", "ОтправитьМестоНаКарте");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьАлгоритм(Команда)
	
	Алгоритм = "";
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСообщение(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Редактирование отправленного ранее сообщения'"), "editMessageText", 
		"ИзменитьТекстСообщения");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСообщение(Команда)
	
	ОткрытьФормуПодсказки(НСтр("ru = 'Удаление отправленного ранее сообщения'"), "deleteMessage", "УдалитьСообщение");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрДействия(Команда)
	
	ДобавитьКодВыбор(
		"УстановитьПараметрДействия(НакопленныеДанные.НастройкиБота.Ссылка, НакопленныеДанные.ИдентификаторЧата, ПараметрДействия(""<Наименование параметра>""), <Значение параметра>);",
		Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПараметрДействия(Команда)

	ДобавитьКодВыбор(
		"ЗначениеПараметра(НакопленныеДанные.Параметры, ""<Наименование параметра>"");",
		Неопределено);
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	
	Элементы.Параметры.Доступность = Объект.ОчиститьВсеПараметры = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПодсказки(Знач ЗаголовокФормы, Знач Метод, Знач НазваниеПроцедуры)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Заголовок", 		ЗаголовокФормы);
	ПараметрыОткрытия.Вставить("Метод", 			Метод);
	ПараметрыОткрытия.Вставить("НазваниеПроцедуры", НазваниеПроцедуры);
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьКодВыбор", ЭтаФорма);
	ОткрытьФорму("Справочник.TelegramДействия.Форма.Подсказка", ПараметрыОткрытия,ЭтаФорма,,,,ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКодВыбор(ТекстМакета, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ТекстМакета) = Тип("Строка") Тогда
		
		Если ЗначениеЗаполнено(Алгоритм) Тогда
			РазделительКода = Символы.ПС + Символы.ПС + Символы.ПС;
		Иначе
			РазделительКода = "";
		КонецЕсли;
		
		Алгоритм = Алгоритм + РазделительКода + ТекстМакета;
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСмайликВыбор(ТекстМакета, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ТекстМакета) = Тип("Строка") Тогда
		Элементы.ТекстФайла.ВыделенныйТекст = ТекстМакета;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Смайлик(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьСмайликВыбор", ЭтаФорма);
	ОткрытьФорму("Справочник.TelegramEmoji.Форма.Emoji",,ЭтаФорма,,,,ОписаниеОповещения);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьСтолбцаЗначениеТаблицыПараметры()
	
	ТекущиеДанные = Элементы.Параметры.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПараметрыЗначение.Доступность = ЗначениеЗаполнено(ТекущиеДанные.Действие)
		И ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.TelegramДействияСПараметром.Установить");
		
КонецПроцедуры

#КонецОбласти