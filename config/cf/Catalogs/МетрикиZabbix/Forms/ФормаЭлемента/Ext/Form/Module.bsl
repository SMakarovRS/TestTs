// Создает конструктор запроса и открывает его на форме
&НаКлиенте
Процедура КонструкторЗапроса(Команда)
	
	Конструктор = Новый КонструкторЗапроса;
	Конструктор.Текст = Объект.ТекстЗапроса;
	Оповещение = Новый ОписаниеОповещения("ОткрытьКонструкторЗапросаЗавершение", ЭтотОбъект);
	Конструктор.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапросаЗавершение(Текст, ДополнительныеПараметры) Экспорт
	
	Если НЕ Текст = Неопределено Тогда
		Объект.ТекстЗапроса = Текст;
	КонецЕсли;
	
КонецПроцедуры

// Создание формы на сервере, загрузка параметров списочного типа. 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Так как значения списочных параметров после записи не могут быть отображены на форме,
	// чтобы избежать их перезаписи кнопка "Записать" не отображается. Запись происходит при нажатии кнопки "Записать и закрыть".  
	Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаЗаписать.Видимость = Ложь; 

	                                             
	ЗначенияСписочныхПараметров = Объект.ЗначенияСписочныхПараметров;
	ПараметрыЗапроса = Объект.ПараметрыЗапроса;
	
	Для Каждого Параметр ИЗ ПараметрыЗапроса ЦИКЛ
		
		Если Параметр.ЭтоСписок Тогда
			СправочникОбъект = РеквизитФормыВЗначение("Объект");
			СписокЗначений = СправочникОбъект.СформироватьСписокЗначений(Параметр.Имя);
			Параметр.ЗначениеНаФорме = СписокЗначений;
		Иначе
			Параметр.ЗначениеНаФорме = Параметр.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ПараметрыЗаписи) 
	
	Метрика = Справочники.МетрикиZabbix.НайтиПоРеквизиту("КлючМетрики", Объект.КлючМетрики);
	Если  НЕ Метрика = Справочники.МетрикиZabbix.ПустаяСсылка() И Метрика.Код <> Объект.Код Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Метрика с данным ключем уже существует в информационной базе!";
		Сообщение.Сообщить();
	КонецЕсли;
	
	ЗначениеСписочныхПараметров = Объект.ЗначенияСписочныхПараметров;
	ПараметрыЗапроса = Объект.ПараметрыЗапроса;
	ЗначениеСписочныхПараметров.Очистить();
	                   
	Для Каждого Параметр ИЗ ПараметрыЗапроса ЦИКЛ
		Если Параметр.ЭтоСписок Тогда
			СписокЗначений = Параметр.ЗначениеНаФорме;
			ТипЗначения = ТипЗнч(СписокЗначений);
			Если ТипЗначения <> Тип("СписокЗначений") Тогда
				Отказ = Истина;
				СтрокаОшибки = СтрШаблон("Значение параметра %1 не является списком", Параметр.Имя);
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрокаОшибки;
				Сообщение.Сообщить();
				Продолжить;
			КонецЕсли;
			Для Каждого СписочноеЗначение ИЗ СписокЗначений Цикл
				СтрТч = ЗначениеСписочныхПараметров.Добавить();
				СтрТч.ИмяПараметра = Параметр.Имя;
				СтрТч.Значение = СписочноеЗначение.Значение;
			КонецЦикла;
		Иначе
			Параметр.Имя = Параметр.Имя;
			Параметр.Значение = Параметр.ЗначениеНаФорме;	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
// Запись параметров списочного типа в табличную часть "ЗначениеСписочныхПараметров"
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПередЗаписьюНаСервере(Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

// При изменении параметра на СписокЗначений удаляет предыдущее несписочное значение.
&НаКлиенте
Процедура ПараметрыЭтоСписокПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.Параметры.ТекущиеДанные;
	Если СтрокаТЧ.ЭтоСписок И СтрокаТЧ.Значение <> Неопределено  Тогда
		 СтрокаТЧ.Значение = Неопределено;
		 СтрокаТЧ.Выражение = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПараметрыИзЗапроса(Команда)
	
	ПолучитьПараметрыИзЗапросаНаСервере();
	
КонецПроцедуры

// Получение параметров из текста запроса 
&НаСервере
Процедура ПолучитьПараметрыИзЗапросаНаСервере()
	
    ТекстЗапроса = Объект.ТекстЗапроса;
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		НайденныеПараметры = Запрос.НайтиПараметры();
		Для Каждого Параметр Из НайденныеПараметры Цикл
			 СтрокаТЧ = Объект.ПараметрыЗапроса.Добавить();
			 СтрокаТЧ.Имя = Параметр.Имя;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры



