
#Область ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВременныйФайл = Неопределено;	
	
	ЭтотОбъект.Выравнивание 	      = Параметры.Выравнивание;
	ЭтотОбъект.Идентификатор	      = Параметры.Идентификатор;
	ЭтотОбъект.Имя				      = Параметры.Имя;
	ЭтотОбъект.Подпись			      = Параметры.Подпись;
	ЭтотОбъект.СтатьяБазыЗнаний       = Параметры.СтатьяБазыЗнаний;
	ЭтотОбъект.ПрисоединенныйФайл     = Параметры.Файл;	
	ЭтотОбъект.ИдентификаторВладельца = Параметры.Идентификатор;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ПрисоединенныйФайл) Тогда		
		Попытка
			ВременныйФайл  = ПолучитьИмяВременногоФайла("mxl");
			ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ЭтотОбъект.ПрисоединенныйФайл);
			ДвоичныеДанные.Записать(ВременныйФайл);
			ТабличныйДокумент.Прочитать(ВременныйФайл); 				
		Исключение
		КонецПопытки;
		Попытка
			УдалитьФайлы(ВременныйФайл);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	ЭтотОбъект.Выравнивание = 2;
	Элементы.ГруппаВыравниваниеОбтекание.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьПометкуКнопокВыравнивание();
	ОбновитьВстраиваемыйТекст();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Имя");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТабличныйДокументПриАктивизацииОбласти(Элемент)
	ОбновитьПометкиКнопокКоманднойПанели();
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	ОбновитьВстраиваемыйТекст();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьФайл(Команда)
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлВоВложенияПриПомещенииФайлов", ЭтотОбъект);	
	ПараметрыЗагрузки  = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
  	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОписаниеОповещения, ПараметрыЗагрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлВоВложенияПриПомещенииФайлов(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ОткрываемыйФайл    = Новый Файл(ПомещенныеФайлы.Имя);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПроверкиСуществованияФайла", ЭтотОбъект,
		Новый Структура("ОткрываемыйФайл, ОписаниеФайла", ОткрываемыйФайл, ПомещенныеФайлы));
	ОткрываемыйФайл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПроверкиСуществованияФайла(Существует, ДополнительныеПараметры) Экспорт
	
	Если Не Существует Тогда
		Возврат;
	КонецЕсли;
	
	ОткрываемыйФайл = ДополнительныеПараметры.ОткрываемыйФайл;
	ОписаниеФайла   = ДополнительныеПараметры.ОписаниеФайла;
	Имя             = ОткрываемыйФайл.ИмяБезРасширения;
	Расширение      = ОткрываемыйФайл.Расширение;		
	Имя			    = УправлениеITОтделом8УФКлиентСервер.Транслит(Имя);				
	Адрес 		    = ОписаниеФайла.Хранение;
	ЗагрузитьТабличныйДокументНаСервере(Адрес);		
	ЭтотОбъект.Модифицированность = Истина;
	ЭтотОбъект.ОбновитьОтображениеДанных();	
	ОткрываемыйФайл = Неопределено;
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаписатьФайл(Команда)
	
	ПараметрыДиалога   = Новый Структура;
	ПараметрыДиалога.Вставить("Заголовок", НСтр("ru = 'Выбор таблицы'"));
	ПараметрыДиалога.Вставить("Режим", РежимДиалогаВыбораФайла.Открытие);
	ПараметрыДиалога.Вставить("МножественныйВыбор", Ложь);
	ПараметрыДиалога.Вставить("Фильтр", НСтр("ru = 'Табличный документ(*.mxl)|*.mxl'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СохранитьФайлТаблицыРасширениеПредложено", ЭтотОбъект);	
	ТекстСообщения = НСтр("ru = 'Для продолжения необходимо установить расширение работы с файлами.'");
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлТаблицыРасширениеПредложено(РасширениеРаботыСФайламиПодключено, ДополнительныеПараметры) Экспорт
	
	Если РасширениеРаботыСФайламиПодключено Тогда
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогВыбораФайла.Фильтр				= НСтр("ru = 'Табличный документ(*.mxl)|*.mxl'");
		ДиалогВыбораФайла.МножественныйВыбор	= Ложь;
		ДиалогВыбораФайла.Заголовок				= НСтр("ru = 'Выбор таблицы'");
		ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Ложь;
		ДиалогВыбораФайла.ПолноеИмяФайла        = ЭтотОбъект.Имя;
		
		Если ДиалогВыбораФайла.Выбрать() Тогда
			ТабличныйДокумент.Записать(ДиалогВыбораФайла.ПолноеИмяФайла, ТипФайлаТабличногоДокумента.MXL);
		КонецЕсли;
		
	Иначе		
		АдресХранилища = ЗаписатьФайлТабличныйДокументНаСервере();
		Если АдресХранилища <> Неопределено Тогда
			ИмяФайла = ?(ПустаяСтрока(Имя), "tabl", Имя) + ".mxl";
			ПолучитьФайл(АдресХранилища, Имя, Истина);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьФайлТабличныйДокументНаСервере()
	
	Попытка
		ВременныйФайл  = ПолучитьИмяВременногоФайла("mxl");
		ТабличныйДокумент.Записать(ВременныйФайл, ТипФайлаТабличногоДокумента.MXL);
		АдресХранилища = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ВременныйФайл), 
			ЭтотОбъект.УникальныйИдентификатор);
		Попытка
			УдалитьФайлы(ВременныйФайл);
		Исключение
		КонецПопытки;
		
		Возврат АдресХранилища;
		
	Исключение
		
		Возврат Неопределено;
		
	КонецПопытки;
	
КонецФункции	

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗакрытия = ЗаписатьВФорме(Истина);
	Если ПараметрыЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЭтаФорма.Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьИЗакрыть(Команда)
	
	ПараметрыЗакрытия = ЗаписатьВФорме(Ложь);
	Если ПараметрыЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	УправлениеITОтделом8УФКлиент.УстановитьТекстВБуферОбмена(ВстраиваемыйТекст);
	ЭтаФорма.Закрыть(ПараметрыЗакрытия);	
	
КонецПроцедуры

&НаКлиенте
Процедура Просмотр(Команда)
	
	СтруктураПредставления = ПолучитьПредставлениеHTMLНаСервере(ТабличныйДокумент);
	
	ТекстТаблицы = "<html>
	|" + БазаЗнанийCSSКлиентСервер.ПолучитьТаблицуСтилей() + "
	|<style>
	|" + СтруктураПредставления.ТаблицаСтилей + "
	|</style>
	|<body>
	|	<div class='tableblock' %1>
	|		<div>
	|			" + СтруктураПредставления.ТекстТаблицы + "
	|		</div>
	|	" + ?(ПустаяСтрока(Подпись), "", "<br>" + Подпись) + "
	|	</div>
	|" + НСтр("ru = 'Здесь будет размещен текст статьи. Его положение относительно таблицы зависит от параметров выравнивания.'") + "
	|</body>
	|</html>";
	
	Строка_1 = ""; //"style='" + БазаЗнанийКлиентСерверПовтИсп.ТекстHTML_Выравнивание(Выравнивание) + "'";
	
	ТекстТаблицы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстТаблицы,
		Строка_1);
	
	ПараметрыФормы = Новый Структура("СтрокаHTML", ТекстТаблицы);
	
	ОткрытьФорму("Справочник.СтатьиБазыЗнаний.Форма.ПросмотрHTML", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьПримечание(Команда)
	ТекущаяОбласть	= Элементы.ТабличныйДокумент.ТекущаяОбласть;
	Примечание		= ТекущаяОбласть.Примечание.Текст;
	
	ДопПараметры = Новый Структура("Верх, Низ, Лево, Право",
		ТекущаяОбласть.Верх,
		ТекущаяОбласть.Низ,
		ТекущаяОбласть.Лево,
		ТекущаяОбласть.Право);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОкончанииВводаПримечания", ЭтотОбъект, ДопПараметры);
	
	ПоказатьВводСтроки(ОписаниеОповещения, Примечание, НСтр("ru = 'Примечание'"), , Истина);
КонецПроцедуры

&НаКлиенте
Процедура Зачеркивание(Команда)
	
	УстанавливаемоеЗначение = Неопределено;
	Для Каждого Область Из СписокОбластейДляИзмененияШрифта() Цикл
		Если УстанавливаемоеЗначение = Неопределено Тогда
			УстанавливаемоеЗначение = Не Область.Шрифт.Зачеркивание;
		КонецЕсли;
		Область.Шрифт = Новый Шрифт(Область.Шрифт,,,,,,УстанавливаемоеЗначение);
	КонецЦикла;
	
	ОбновитьПометкиКнопокКоманднойПанели();
	
КонецПроцедуры

&НаКлиенте
Процедура Объединить(Команда)
	
	Область = Элементы.ТабличныйДокумент.ТекущаяОбласть;
	Область.Объединить();
	
	ОбновитьПометкиКнопокКоманднойПанели();
	
КонецПроцедуры

&НаКлиенте
Процедура Разъединить(Команда)
	
	Область = Элементы.ТабличныйДокумент.ТекущаяОбласть;
	Область.Разъединить();
	
	ОбновитьПометкиКнопокКоманднойПанели();
	
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьРазмерШрифта(Команда)
	
	Для Каждого Область Из СписокОбластейДляИзмененияШрифта() Цикл
		Размер = Область.Шрифт.Размер;
		Размер = Размер + ШагИзмененияРазмераШрифтаУвеличение(Размер);
		Область.Шрифт = Новый Шрифт(Область.Шрифт,,Размер);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшитьРазмерШрифта(Команда)
	
	Для Каждого Область Из СписокОбластейДляИзмененияШрифта() Цикл
		Размер = Область.Шрифт.Размер;
		Размер = Размер - ШагИзмененияРазмераШрифтаУменьшение(Размер);
		Если Размер < 1 Тогда
			Размер = 1;
		КонецЕсли;
		Область.Шрифт = Новый Шрифт(Область.Шрифт,,Размер);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыравниваниеПоВерхнемуКраю(Команда)
	
	ТекущаяОбласть	= Элементы.ТабличныйДокумент.ТекущаяОбласть;
	ТекущаяОбласть.ВертикальноеПоложение = ВертикальноеПоложение.Верх;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыравниваниеПоСередине(Команда)
	
	ТекущаяОбласть	= Элементы.ТабличныйДокумент.ТекущаяОбласть;
	ТекущаяОбласть.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыравниваниеПоНижнемуКраю(Команда)
	
	ТекущаяОбласть	= Элементы.ТабличныйДокумент.ТекущаяОбласть;
	ТекущаяОбласть.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзменениеВыравнивание(Команда)
	
	Если Команда.Имя = "КартинкаСлеваТекстВокруг" Тогда
		ЭтотОбъект.Выравнивание		= 0;
	ИначеЕсли Команда.Имя = "КартинкаПоЦентруТекстСверхуСнизу" Тогда
		ЭтотОбъект.Выравнивание		= 2;
	ИначеЕсли Команда.Имя = "КартинкаСправаТекстВокруг" Тогда
		ЭтотОбъект.Выравнивание		= 1;
	КонецЕсли;
	
	УстановитьПометкуКнопокВыравнивание();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ФОРМОЙ

&НаКлиенте
Процедура УстановитьПометкуКнопокВыравнивание()
	
	Элементы.КартинкаСлеваТекстВокруг.Пометка			= (ЭтотОбъект.Выравнивание = 0);
	Элементы.КартинкаПоЦентруТекстСверхуСнизу.Пометка	= (ЭтотОбъект.Выравнивание = 2);
	Элементы.КартинкаСправаТекстВокруг.Пометка			= (ЭтотОбъект.Выравнивание = 1);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ МЕТОДЫ

&НаСервереБезКонтекста
Функция ПолучитьПредставлениеHTMLНаСервере(Документ)
	
	Возврат Справочники.СтатьиБазыЗнаний.ПолучитьПредставлениеТаблицыВHTML(Документ);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьТабличныйДокументНаСервере(АдресВХранилище)
	
	Попытка
		ДвоичныеДанные	= ПолучитьИзВременногоХранилища(АдресВХранилище);
		ИмяФайла		= ПолучитьИмяВременногоФайла("mxl");
		ДвоичныеДанные.Записать(ИмяФайла);	
		ЭтотОбъект.ТабличныйДокумент.Прочитать(ИмяФайла);
		Попытка
			УдалитьФайлы(ИмяФайла);
		Исключение
		КонецПопытки;	
	Исключение
		Сообщить(СтрШаблон(Нстр("ru = 'Не удалось загрузить табличный документ по причине: %1'"), ОписаниеОшибки()));
	КонецПопытки;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТабличныйДокументНаСервере()
	
	Попытка
		ВременныйФайл        = ПолучитьИмяВременногоФайла("mxl");
		ТабличныйДокумент.Записать(ВременныйФайл, ТипФайлаТабличногоДокумента.MXL);
		ДвоичныеДанные       = Новый ДвоичныеДанные(ВременныйФайл);
		ПараметрыФайла       = Новый Структура;
		АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
		Если ЗначениеЗаполнено(ЭтотОбъект.ПрисоединенныйФайл) Тогда
			ПараметрыФайла.Вставить("АдресФайлаВоВременномХранилище", АдресФайлаВХранилище);
			ПараметрыФайла.Вставить("АдресВременногоХранилищаТекста", Неопределено);
			ПараметрыФайла.Вставить("ДатаМодификацииУниверсальная", ТекущаяДатаСеанса());
			РаботаСФайлами.ОбновитьФайл(ЭтотОбъект.ПрисоединенныйФайл, ПараметрыФайла);
		Иначе
			ПараметрыФайла.Вставить("Автор",                      Пользователи.ТекущийПользователь());
			ПараметрыФайла.Вставить("ВладелецФайлов",             ЭтотОбъект.СтатьяБазыЗнаний);
			ПараметрыФайла.Вставить("ИмяБезРасширения",           Имя);
			ПараметрыФайла.Вставить("РасширениеБезТочки",         "mxl");
			ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное",ТекущаяДатаСеанса());
			ЭтотОбъект.ПрисоединенныйФайл = РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресФайлаВХранилище); 
		КонецЕсли;	
	Исключение
	КонецПопытки;	
	Попытка
		УдалитьФайлы(ВременныйФайл);
	Исключение
	КонецПопытки;	
	
	СтруктураДок	  = Справочники.СтатьиБазыЗнаний.ПолучитьПредставлениеТаблицыВHTML(ТабличныйДокумент);	
	ТаблицаСтилейHTML = СтруктураДок.ТаблицаСтилей;
	ТекстТаблицыHTML  = СтруктураДок.ТекстТаблицы;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОкончанииВводаПримечания(Результат, ДопПараметры) Экспорт 
	
	ТекущаяОбласть = ТабличныйДокумент.Область(ДопПараметры.Верх, ДопПараметры.Лево, ДопПараметры.Низ, 
		ДопПараметры.Право);
	ТекущаяОбласть.Примечание.Текст = Результат;
	
КонецПроцедуры

&НаКлиенте
Функция ШагИзмененияРазмераШрифтаУвеличение(Размер)
	Если Размер < 10 Тогда
		Возврат 1;
	ИначеЕсли 10 <= Размер И Размер < 20 Тогда
		Возврат 2;
	ИначеЕсли 20 <= Размер И Размер < 48 Тогда
		Возврат 4;
	ИначеЕсли 48 <= Размер И Размер < 72 Тогда
		Возврат 6;
	ИначеЕсли 72 <= Размер И Размер < 96 Тогда
		Возврат 8;
	Иначе
		Возврат Окр(Размер / 10);
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ШагИзмененияРазмераШрифтаУменьшение(Размер)
	Если Размер <= 11 Тогда
		Возврат 1;
	ИначеЕсли 11 < Размер И Размер <= 23 Тогда
		Возврат 2;
	ИначеЕсли 23 < Размер И Размер <= 53 Тогда
		Возврат 4;
	ИначеЕсли 53 < Размер И Размер <= 79 Тогда
		Возврат 6;
	ИначеЕсли 79 < Размер И Размер <= 105 Тогда
		Возврат 8;
	Иначе
		Возврат Окр(Размер / 11);
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция СписокОбластейДляИзмененияШрифта()
	
	Результат = Новый Массив;
	
	Для Каждого ОбрабатываемаяОбласть Из Элементы.ТабличныйДокумент.ПолучитьВыделенныеОбласти() Цикл
		Если ОбрабатываемаяОбласть.Шрифт <> Неопределено Тогда
			Результат.Добавить(ОбрабатываемаяОбласть);
			Продолжить;
		КонецЕсли;
		
		ОбрабатываемаяОбластьВерх = ОбрабатываемаяОбласть.Верх;
		ОбрабатываемаяОбластьНиз = ОбрабатываемаяОбласть.Низ;
		ОбрабатываемаяОбластьЛево = ОбрабатываемаяОбласть.Лево;
		ОбрабатываемаяОбластьПраво = ОбрабатываемаяОбласть.Право;
		
		Если ОбрабатываемаяОбластьВерх = 0 Тогда
			ОбрабатываемаяОбластьВерх = 1;
		КонецЕсли;
		
		Если ОбрабатываемаяОбластьНиз = 0 Тогда
			ОбрабатываемаяОбластьНиз = ТабличныйДокумент.ВысотаТаблицы;
		КонецЕсли;
		
		Если ОбрабатываемаяОбластьЛево = 0 Тогда
			ОбрабатываемаяОбластьЛево = 1;
		КонецЕсли;
		
		Если ОбрабатываемаяОбластьПраво = 0 Тогда
			ОбрабатываемаяОбластьПраво = ТабличныйДокумент.ШиринаТаблицы;
		КонецЕсли;
		
		Если ОбрабатываемаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Колонки Тогда
			ОбрабатываемаяОбластьВерх = ОбрабатываемаяОбласть.Низ;
			ОбрабатываемаяОбластьНиз = ТабличныйДокумент.ВысотаТаблицы;
		КонецЕсли;
			
		Для НомерКолонки = ОбрабатываемаяОбластьЛево По ОбрабатываемаяОбластьПраво Цикл
			ШиринаКолонки = Неопределено;
			Для НомерСтроки = ОбрабатываемаяОбластьВерх По ОбрабатываемаяОбластьНиз Цикл
				Ячейка = ТабличныйДокумент.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
				Если ОбрабатываемаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Колонки Тогда
					Если ШиринаКолонки = Неопределено Тогда
						ШиринаКолонки = Ячейка.ШиринаКолонки;
					КонецЕсли;
					Если Ячейка.ШиринаКолонки <> ШиринаКолонки Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				Если Ячейка.Шрифт <> Неопределено Тогда
					Результат.Добавить(Ячейка);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПометкиКнопокКоманднойПанели();
	
	#Если Не ВебКлиент Тогда
		
	Область = Элементы.ТабличныйДокумент.ТекущаяОбласть;
	Если ТипЗнч(Область) <> Тип("ОбластьЯчеекТабличногоДокумента") Тогда
		Возврат;
	КонецЕсли;
	
	// Шрифт
	Шрифт = Область.Шрифт;
	Элементы.Жирный.Пометка = Шрифт <> Неопределено И Шрифт.Жирный = Истина;
	Элементы.Наклонный.Пометка = Шрифт <> Неопределено И Шрифт.Наклонный = Истина;
	Элементы.Подчеркивание.Пометка = Шрифт <> Неопределено И Шрифт.Подчеркивание = Истина;
	Элементы.Зачеркивание.Пометка = Шрифт <> Неопределено И Шрифт.Зачеркивание = Истина;
	
	// Горизонтальное положение
	Элементы.ВыровнятьВлево.Пометка = Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
	Элементы.ВыровнятьПоЦентру.Пометка = Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
	Элементы.ВыровнятьВправо.Пометка = Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
	Элементы.ВыровнятьПоШирине.Пометка = Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.ПоШирине;
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Функция ЗаписатьВФорме(Знач ВставкаВТекст = Истина)
	
	Результат = ЭтотОбъект.ПроверитьЗаполнение();
	Если НЕ Результат Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = БазаЗнанийКлиентСервер.ПроверитьПравильностьЗаполненияИмени(ЭтотОбъект.Имя);
	Если НЕ Результат Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Имя может содержать только буквы и цифры, без пробелов и начинаться с буквы.'"));
		Возврат Неопределено;
	КонецЕсли;
	
	Если НЕ Параметры.Имена.Найти(Имя) = Неопределено Тогда
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Таблица с именем ""%1"" уже существует. Задайте другое имя.'"),
			Имя);
			
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
		Возврат Неопределено;
	КонецЕсли;
	
	ЗаписатьТабличныйДокументНаСервере();
	
	ПараметрыЗакрытия = Новый Структура;	
	ПараметрыЗакрытия.Вставить("Выравнивание"		, ЭтотОбъект.Выравнивание);
	ПараметрыЗакрытия.Вставить("Имя"				, ЭтотОбъект.Имя);
	ПараметрыЗакрытия.Вставить("Подпись"			, ЭтотОбъект.Подпись);
	ПараметрыЗакрытия.Вставить("ТаблицаСтилейHTML"	, ЭтотОбъект.ТаблицаСтилейHTML);
	ПараметрыЗакрытия.Вставить("ТекстТаблицыHTML"	, ЭтотОбъект.ТекстТаблицыHTML);
	ПараметрыЗакрытия.Вставить("Модифицированность"	, ЭтотОбъект.Модифицированность);
	ПараметрыЗакрытия.Вставить("Файл"				, ЭтотОбъект.ПрисоединенныйФайл);
	ПараметрыЗакрытия.Вставить("ВставкаВТекст"		, ВставкаВТекст);
	
	Возврат ПараметрыЗакрытия;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьВстраиваемыйТекст()
	
	ВстраиваемыйТекст = ?(ПустаяСтрока(Имя), "", "[table='" + Имя + "']");
	
КонецПроцедуры

#КонецОбласти