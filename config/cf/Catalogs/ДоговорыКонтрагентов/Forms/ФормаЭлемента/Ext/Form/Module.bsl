
#Область ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Если Объект.Ссылка.Пустая() Тогда
		
		ЗначениеНастройки = УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ТекущийПользователь, "ОсновнаяОрганизация");
			
		Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
			Если Объект.Организация <> ЗначениеНастройки Тогда
				Объект.Организация = ЗначениеНастройки;
			КонецЕсли;
		Иначе
			Объект.Организация = УправлениеITОтделом8УФПовтИсп.ПолучитьОсновнуюОрганизацию();
		КонецЕсли;
		
		Объект.ВалютаРасчетов	= УправлениеITОтделом8УФПовтИсп.ПолучитьНациональнуюВалюту();
		Объект.Наименование		= НСтр("ru = 'Основной договор'");
		Объект.ВидДоговора		= Перечисления.ВидыДоговоров.СПоставщиком;
		Объект.Ответственный	= ТекущийПользователь;
		
	КонецЕсли;
		
	Элементы.РасчетыВУсловныхЕдиницах.Видимость = Истина;
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
			
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
    ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	// Учет остатков контрагентов.
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("Организация");
	УправлениеITОтделом8УФ.УстановитьОграничениеТипаДляЭлементовФормы(ЭтаФорма, МассивЭлементов);
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
// Процедура обработчик события ОбработкаОповещения.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры // ОбработкаОповещения()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
    УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
    ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	//@skip-warning
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма") 
		И ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ФормаВыбораОрганизацииКонтрагента"
		И ИсточникВыбора.ВладелецФормы = ЭтаФорма Тогда
		УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикОбработкаВыбораФормы(ЭтаФорма, 
		 				"Организация",
						Объект.Организация,
						ВыбранноеЗначение,
						Новый ОписаниеОповещения("ПослеОбработкиВыбора", ЭтотОбъект));	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Валюта расчетов.
//
Процедура ВалютаРасчетовПриИзменении(Элемент)
	
	СформироватьНаименование();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры // ВалютаРасчетовПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода НомерДоговора.
//
Процедура НомерДоговораПриИзменении(Элемент)
	
	СформироватьНаименование();
	
КонецПроцедуры // НомерДоговораПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода ДатаДоговора.
//
Процедура ДатаДоговораПриИзменении(Элемент)
	
	СформироватьНаименование();
	ВыполнитьРасчетДат();
	
КонецПроцедуры // ДатаДоговораПриИзменении()

&НаКлиенте
Процедура СрокОплатыПриИзменении(Элемент)
	
	ВыполнитьРасчетДат();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаПриИзменении(Элемент)
	
	ВыполнитьРасчетДат();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокПоставкиПриИзменении(Элемент)
	
	ВыполнитьРасчетДат();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАвтосозданиеПервичныхДокументовПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПервичныхДокументовПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ПериодичностьПервичныхДокументов) Тогда
		
		Если Объект.ПериодичностьПервичныхДокументов = 
			ПредопределенноеЗначение("Перечисление.ПериодичностьПервичныхДокументов.Прочая")
			ИЛИ Объект.ПериодичностьПервичныхДокументов = 
				ПредопределенноеЗначение("Перечисление.ПериодичностьПервичныхДокументов.Разовая") Тогда
			Объект.ИспользоватьАвтосозданиеПервичныхДокументов = Ложь;	
		КонецЕсли;
		
	Иначе
		Объект.ИспользоватьАвтосозданиеПервичныхДокументов = Ложь;
		
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьРасчетДат()
	
	Если Не ЗначениеЗаполнено(Объект.ДатаДоговора) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.СпособРасчета) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.Организация) 
		И ТипЗнч(Объект.Организация) = Тип("СправочникСсылка.Организации")
		И ЗначениеЗаполнено(Объект.Организация.График) Тогда
		мКалендарь = Объект.Организация.График;
		
	Иначе		
		Возврат;		
	КонецЕсли;	
	
	Если Объект.СпособРасчета = Перечисления.СпособыРасчета.Аванс Тогда
		
		Если Объект.СрокОплаты = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Попытка
			Объект.КрайняяДатаОплаты = КалендарныеГрафики.ДатаПоКалендарю(мКалендарь, Объект.ДатаДоговора, 
				Объект.СрокОплаты);
		Исключение
			ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()), мКалендарь);
		КонецПопытки;	
		
	КонецЕсли;
	
	Если Объект.СпособРасчета = Перечисления.СпособыРасчета.Постоплата Тогда
		
		Если Объект.СрокПоставки = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Попытка
			Объект.КрайняяДатаПоставки = КалендарныеГрафики.ДатаПоКалендарю(мКалендарь, Объект.ДатаДоговора, 
				Объект.СрокПоставки);
		Исключение
			ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()), мКалендарь);
		КонецПопытки;
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьВидимостьДоступность()
			
	Если ЗначениеЗаполнено(Объект.ПериодичностьПервичныхДокументов) Тогда
		
		Если Объект.ПериодичностьПервичныхДокументов = Перечисления.ПериодичностьПервичныхДокументов.Ежегодная
			ИЛИ Объект.ПериодичностьПервичныхДокументов = Перечисления.ПериодичностьПервичныхДокументов.Ежеквартальная
			ИЛИ Объект.ПериодичностьПервичныхДокументов = Перечисления.ПериодичностьПервичныхДокументов.Ежемесячная Тогда
			Элементы.ИспользоватьАвтосозданиеПервичныхДокументов.Видимость = Истина;
		Иначе
			Элементы.ИспользоватьАвтосозданиеПервичныхДокументов.Видимость = Ложь;
		КонецЕсли;	
			
	Иначе
		Элементы.ИспользоватьАвтосозданиеПервичныхДокументов.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.СписокШаблонов.Видимость = 
		Объект.ИспользоватьАвтосозданиеПервичныхДокументов;
	
КонецПроцедуры	

#Область БСП

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МЕХАНИЗМА СВОЙСТВ
// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, 
	СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

//@skip-warning
&НаСервере
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// Обработчик подсистемы запрета редактирования реквизитов объектов.
//@skip-warning
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиПрочие

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
// Процедура составляет наименование договора из номера и даты договора.
//
Процедура СформироватьНаименование()
	
	ТекстНаименования = НСтр("ru = '№ %НомерДоговора% от %ДатаДоговора% (%ВалютаРасчетов%)'");
	ТекстНаименования = СтрЗаменить(ТекстНаименования, "%НомерДоговора%", СокрЛП(Объект.НомерДоговора));
	ТекстНаименования = СтрЗаменить(ТекстНаименования, "%ДатаДоговора%", 
		СокрЛП(Строка(Формат(Объект.ДатаДоговора, "ДФ=dd.MM.yyyy"))));
	ТекстНаименования = СтрЗаменить(ТекстНаименования, "%ВалютаРасчетов%", СокрЛП(Строка(Объект.ВалютаРасчетов)));
	
	Объект.Наименование = ТекстНаименования;
	
КонецПроцедуры // СформироватьНаименование()

&НаКлиенте
// Процедура устанавливает доступность элементов формы.
//
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.РасчетыВУсловныхЕдиницах.Видимость = Истина;
	
КонецПроцедуры // УстановитьДоступностьЭлементов()

#Область УчетОстатковКонтрагентов

//@skip-warning
&НаКлиенте
Процедура Подключаемый_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
			
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикНачалоВыбора(ЭтаФорма, Объект.Организация, СтандартнаяОбработка);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, 
	СтандартнаяОбработка)
		
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикАвтоПодбор(ЭтаФорма, 
				"Организация",
				Текст, 
				ДанныеВыбора,
				Ожидание,
				СтандартнаяОбработка);
				
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_Очистка(Элемент, СтандартнаяОбработка)	
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)	
		
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикОбработкаВыбора(ЭтаФорма, 
				"Организация", 
				Объект.Организация,
				Новый ОписаниеОповещения("ПослеОбработкиВыбора", ЭтотОбъект),
				ВыбранноеЗначение,
				СтандартнаяОбработка);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ПослеОбработкиВыбора(Результат, ДополнительныеПараметры) Экспорт	
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#КонецОбласти
