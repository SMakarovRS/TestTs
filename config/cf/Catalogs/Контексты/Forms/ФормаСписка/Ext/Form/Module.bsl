
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ;

	ЭлементОтбора					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Пользователь");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ПравоеЗначение	= Пользователи.ТекущийПользователь();
	ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;

	ЭлементОтбора					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Видимость.Пользователь");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ПравоеЗначение	= Пользователи.ТекущийПользователь();
	ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ОбновитьСписокДочернихКонтекстов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаметкиПриИзменении(Элемент)
	
	ПриИзмененииРеквизита("Заметки", Заметки);
	
КонецПроцедуры

&НаКлиенте
Процедура СпрятатьКонтекстПриВыбореВДелеПриИзменении(Элемент)
	
	ПриИзмененииРеквизита("СпрятатьКонтекстПриВыбореВДеле", СпрятатьКонтекстПриВыбореВДеле);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОбновитьДанныеСтраниц(ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДочерниеКонтексты

&НаКлиенте
Процедура ДочерниеКонтекстыФлагПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Массив = Новый Массив;
		Для Каждого Строки Из ДочерниеКонтексты Цикл
			Если Строки.Флаг = Истина Тогда
				Массив.Добавить(Строки.Контекст);
			КонецЕсли;
		КонецЦикла;
		
		ИзменитьДочерниеКонтексты(ТекущиеДанные.Ссылка, Массив);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеСтраниц(Знач Контекст)
	
	КоличествоКонтекстов = 0;
	Для Каждого Строки Из ДочерниеКонтексты Цикл
		Строки.Флаг = Ложь;
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ИЗ
		|	Справочник.Контексты КАК Контексты
		|ГДЕ
		|	Контексты.Ссылка = &Контекст";
	
	Запрос.УстановитьПараметр("Контекст", Контекст);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Заметки = Выборка.Заметки;
		СпрятатьКонтекстПриВыбореВДеле = Выборка.СпрятатьКонтекстПриВыбореВДеле;
				
		ВыборкаДочерние = Выборка.ДочерниеКонтексты.Выбрать();
		Пока ВыборкаДочерние.Следующий() Цикл
			
			НайденныеСтроки = ДочерниеКонтексты.НайтиСтроки(Новый Структура("Контекст", ВыборкаДочерние.Контекст));
			Если НайденныеСтроки.Количество() > 0 Тогда
				НайденныеСтроки[0].Флаг = Истина;
				КоличествоКонтекстов = КоличествоКонтекстов + 1;
			КонецЕсли
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокДочернихКонтекстов()
	
	ДочерниеКонтексты.Очистить();
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Контексты.Ссылка КАК Контекст,
		|	ЛОЖЬ КАК Флаг
		|ИЗ
		|	Справочник.Контексты КАК Контексты
		|ГДЕ
		|	Контексты.ПометкаУдаления = ЛОЖЬ
		|	И (Контексты.Пользователь = &Пользователь
		|			ИЛИ Контексты.Ссылка В
		|				(ВЫБРАТЬ
		|					КонтекстыВидимость.Ссылка КАК Ссылка
		|				ИЗ
		|					Справочник.Контексты.Видимость КАК КонтекстыВидимость
		|				ГДЕ
		|					КонтекстыВидимость.Пользователь = &Пользователь))
		|	И Контексты.Ссылка <> &ТекущийКонтекст
		|
		|УПОРЯДОЧИТЬ ПО
		|	Контексты.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтекстыДочерниеКонтексты.Контекст КАК Контекст
		|ИЗ
		|	Справочник.Контексты.ДочерниеКонтексты КАК КонтекстыДочерниеКонтексты";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("ТекущийКонтекст", );
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ДочерниеКонтексты.Добавить(), Выборка);
		
	КонецЦикла;	
	
	Выборка = Пакет[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НайденныеСтроки = ДочерниеКонтексты.НайтиСтроки(Новый Структура("Контекст", Выборка.Контекст));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Флаг = Истина;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	ОбновитьСписокДочернихКонтекстов();
	СписокПриАктивизацииСтроки(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизита(Знач ИмяРеквизита, Знач Значение)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ИзменитьРеквизитыДела(ТекущиеДанные.Ссылка, ИмяРеквизита, Значение);
						
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьРеквизитыДела(Знач Контекст, Знач ИмяРеквизита, Знач Значение)
	
	КонтекстОбъект 					= Контекст.ПолучитьОбъект();
	КонтекстОбъект[ИмяРеквизита] 	= Значение;
	КонтекстОбъект.Записать();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьДочерниеКонтексты(Знач Контекст, Знач МассивДочерних)
	
	КонтекстОбъект 					= Контекст.ПолучитьОбъект();
	КонтекстОбъект.ДочерниеКонтексты.Очистить();
	Для Каждого Эл Из МассивДочерних Цикл
		НоваяСтрока = КонтекстОбъект.ДочерниеКонтексты.Добавить();
		НоваяСтрока.Контекст = Эл;
	КонецЦикла;
	КонтекстОбъект.Записать();
	
КонецПроцедуры

#КонецОбласти