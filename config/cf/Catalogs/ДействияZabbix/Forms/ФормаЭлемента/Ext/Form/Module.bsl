
// Создание формы на сервере, загрузка параметров списочного типа. 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Так как значения списочных параметров после записи не могут быть отображены на форме,
	// чтобы избежать их перезаписи кнопка "Записать" не отображается. Запись происходит при нажатии кнопки "Записать и закрыть".  
	Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаЗаписать.Видимость = Ложь;
	
	ЗначенияСписочныхПараметров = Объект.ЗначенияСписочныхПараметров;
	ПараметрыЗапроса = Объект.ПараметрыЗапроса;
	
	Для Каждого Параметр ИЗ ПараметрыЗапроса ЦИКЛ
		
		Если Параметр.ЭтоСписок Тогда
			СправочникОбъект = РеквизитФормыВЗначение("Объект");
			СписокЗначений = СправочникОбъект.СформироватьСписокЗначений(Параметр.Имя);
			Параметр.ЗначениеНаФорме = СписокЗначений;
		Иначе
			Параметр.ЗначениеНаФорме = Параметр.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ПараметрыЗаписи)

	Действие = Справочники.ДействияZabbix.НайтиПоРеквизиту("КлючДействия", Объект.КлючДействия);
	Если  НЕ Действие = Справочники.ДействияZabbix.ПустаяСсылка() И Действие.Код <> Объект.Код Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Действие с данным ключем уже существует в информационной базе!";
		Сообщение.Сообщить();
	КонецЕсли;

	ЗначениеСписочныхПараметров = Объект.ЗначенияСписочныхПараметров;
	ПараметрыЗапроса = Объект.ПараметрыЗапроса;
	ЗначениеСписочныхПараметров.Очистить();
	
	Для Каждого Параметр ИЗ ПараметрыЗапроса ЦИКЛ
		Если Параметр.ЭтоСписок Тогда
			СписокЗначений = Параметр.ЗначениеНаФорме;
			ТипЗначения = ТипЗнч(СписокЗначений);
			Если ТипЗначения <> Тип("СписокЗначений") Тогда
				Отказ = Истина;
				СтрокаОшибки = СтрШаблон("Значение параметра %1 не является списком", Параметр.Имя);
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрокаОшибки;
				Сообщение.Сообщить();
				Продолжить;;
			КонецЕсли;
			Для Каждого СписочноеЗначение ИЗ СписокЗначений Цикл
				СтрТч = ЗначениеСписочныхПараметров.Добавить();
				СтрТч.ИмяПараметра = Параметр.Имя;
				СтрТч.Значение = СписочноеЗначение.Значение;
			КонецЦикла;
		Иначе
			Параметр.Имя = Параметр.Имя;
			Параметр.Значение = Параметр.ЗначениеНаФорме;	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Запись параметров списочного типа в табличную часть "ЗначениеСписочныхПараметров".
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПередЗаписьюНаСервере(Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

// При изменении параметра на СписокЗначений удаляет предыдущее присвоенное ему несписочное значение.
&НаКлиенте
Процедура ПараметрыЭтоСписокПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.Параметры.ТекущиеДанные;
	Если СтрокаТЧ.ЭтоСписок И СтрокаТЧ.Значение <> Неопределено  Тогда
		 СтрокаТЧ.Значение = Неопределено;
		 СтрокаТЧ.Выражение = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПараметрыИзТекста(Команда)
	
	ПолучитьПараметрыИзТекстаНаСервере();
	
КонецПроцедуры

// Получение параметров из текста запроса 
&НаСервере
Процедура ПолучитьПараметрыИзТекстаНаСервере()
	
	RegExp = Новый COMОбъект("VBScript.RegExp");
	RegExp.MultiLine = Истина;
	RegExp.Global = Истина;
	RegExp.IgnoreCase = Ложь;
	
	Текст = Объект.ИсполняемыйКод;
	RegExp.Pattern = "\[(.*?)\]";
	Matches = RegExp.Execute(Объект.ИсполняемыйКод);
	Для Счетчик = 0 По Matches.Count - 1 Цикл
		Match = Matches.Item(Счетчик);
		СтрокаRegExp = Match.Value;
		СтрокаRegExp = СтрЗаменить(СтрокаRegExp, "[", "");
		СтрокаRegExp = СтрЗаменить(СтрокаRegExp, "]", "");
		СтрокаТЧ = Объект.ПараметрыЗапроса.Добавить();
		СтрокаТЧ.Имя = СтрокаRegExp;	
	КонецЦикла;
	
КонецПроцедуры





