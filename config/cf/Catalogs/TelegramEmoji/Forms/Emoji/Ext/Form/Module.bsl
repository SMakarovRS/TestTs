
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ОбновитьСписокГрупп();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    ПерваяГруппаЗагружена = ОбновитьHTML(ПерваяГруппа);
    Если Не ПерваяГруппаЗагружена Тогда
        ПоказатьВопрос(Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект), 
            НСтр("ru = 'Библиотека emoji-картинок не загружена. Загрузить ее из интернета (это может занять долгое время)?'"), 
            РежимДиалогаВопрос.ДаНет);
    КонецЕсли; 
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        ЗагрузитьПредопределенныеНаСервере();
        ОбновитьСписокГрупп();
        ОбновитьHTML(ПерваяГруппа);
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ХТМЛПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Попытка
		Картинка = ДанныеСобытия.Element.id;
		Если ЗначениеЗаполнено(Картинка) Тогда
			ТекстовоеПредставление = СтрШаблон(НСтр("ru = '&#%1;'"), ДанныеСобытия.Element.id);
			Закрыть(ТекстовоеПредставление);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьСтраницу(Команда)
	
	Родитель = ПолучитьРодителяПоИмениКоманды(Команда.Имя);
	ОбновитьHTML(Родитель);
		
КонецПроцедуры

&НаСервере
// Функция возвращает структуру этапа по переданной текстовой строке.
//
// Параметры:
//	КомандаИмя - строка (имя команды).
//
// Возвращаемое значение:
//	Структура - структура, содержащая реквизиты этапа.
//
Функция ПолучитьРодителяПоИмениКоманды(Знач КомандаИмя)
	
	УИД	= Сред(КомандаИмя, СтрНайти(КомандаИмя, "_") + 1);
	УИД	= Лев(УИД, 8) + "-" + Сред(УИД, 9, 4) + "-" + Сред(УИД, 13, 4) + "-" + Сред(УИД, 17, 4) + "-" + Сред(УИД, 21);
	Возврат Справочники.TelegramEmoji.ПолучитьСсылку(Новый УникальныйИдентификатор(УИД));
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьПредопределенные(Команда)
    
    ЗагрузитьПредопределенныеНаСервере();
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписокГрупп()
    
	ПерваяГруппа = Справочники.TelegramEmoji.ПустаяСсылка();
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	TelegramEmoji.Ссылка КАК Ссылка,
		|	TelegramEmoji.Код КАК Код
		|ИЗ
		|	Справочник.TelegramEmoji КАК TelegramEmoji
		|ГДЕ
		|	TelegramEmoji.ЭтоГруппа = ИСТИНА
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Группа 		    = Выборка.Ссылка;
		ИмяКоманды 	    = "УстановитьСтраницу_" + СтрЗаменить(Группа.УникальныйИдентификатор(), "-", "");
			
		Кнопка          = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы.ГруппаСтраницы);
		Кнопка.Заголовок= Выборка.Код;
		КомандаЭтапа 	= Команды.Найти(ИмяКоманды);
		
		Если КомандаЭтапа = Неопределено Тогда
			
			КомандаЭтапа				= Команды.Добавить(ИмяКоманды);
			КомандаЭтапа.Действие		= "УстановитьСтраницу";
			КомандаЭтапа.Заголовок		= СтрЗаменить(Выборка.Код, " ", Символы.НПП);
			
		КонецЕсли;
		
		Кнопка.ИмяКоманды 	= ИмяКоманды;
		
		Если НЕ ЗначениеЗаполнено(ПерваяГруппа) Тогда
			ПерваяГруппа = Выборка.Ссылка;
		КонецЕсли;
		
    КонецЦикла;
    
КонецПроцедуры

&НаСервере
Функция ОбновитьHTML(Группа)
    
    Если НЕ ЗначениеЗаполнено(Группа) Тогда
    	Возврат Ложь;
    КонецЕсли; 
    
	Ширина = 64;
	Высота = 64;
	МаксимальноеКоличествоВСтроке = 10;
	ХТМЛ = "<html><body><table>";
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	TelegramEmoji.Код КАК Код,
		|	TelegramEmoji.Изображение КАК Изображение
		|ИЗ
		|	Справочник.TelegramEmoji КАК TelegramEmoji
		|ГДЕ
		|	TelegramEmoji.Родитель = &Группа
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код";
	Запрос.УстановитьПараметр("Группа", Группа);
	
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоВСтроке = 0;
    Пока Выборка.Следующий() Цикл
        
		Если КоличествоВСтроке = 0 Тогда
			ХТМЛ = ХТМЛ + "<tr>";
		КонецЕсли;		        		
		ДвоичныеДанные      = Выборка.Изображение.Получить();
		ДанныеСтрокой       = Base64Строка(ДвоичныеДанные);
		ИзображениеСтрокой  = "data:image/png;base64," + ДанныеСтрокой;
        Подсказка           = СтрШаблон(НСтр("ru = '%1 (%2)'"), ЗаданияСервер.ЧислоDecToHex(Выборка.Код), 
            Формат(Выборка.Код, "ЧРД=; ЧРГ=; ЧН=0; ЧГ="));
		
		ХТМЛ = ХТМЛ + "<td>" + СтрШаблон("<img src='%1' width='%2' height='%3' id='%4' alt='%5' title='%5'>",
			ИзображениеСтрокой, Ширина, Высота, Формат(Выборка.Код, "ЧРД=; ЧРГ=; ЧН=0; ЧГ="), Подсказка)
            + "</td>";
            
        КоличествоВСтроке = КоличествоВСтроке + 1;
		Если КоличествоВСтроке = МаксимальноеКоличествоВСтроке Тогда
			ХТМЛ = ХТМЛ + "</tr>";
			КоличествоВСтроке = 0;
        КонецЕсли;        
		
    КонецЦикла;
    
    Если КоличествоВСтроке > 0 Тогда
    	ХТМЛ = ХТМЛ + "</tr>";
    КонецЕсли; 
    
	ХТМЛ = ХТМЛ + "</table></body></html>";
    
    Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПредопределенныеНаСервере()
    
    Справочники.TelegramEmoji.ЗаполнитьEmojiПриПервоначальномЗаполнении();
    
КонецПроцедуры

#КонецОбласти