
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(СписокВиджетов, "Владелец", Объект.Ссылка);		
		
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМетрики") <> Истина Тогда
		РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(СписокВиджетов, "Вид",
			Перечисления.ВидыВиджетов.Метрика, , ВидСравненияКомпоновкиДанных.НеРавно);
	КонецЕсли;		
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Виджет_Запись" Тогда		
		
		Если Параметр <> Неопределено
			И Параметр.Свойство("РабочийСтолСсылка")
			И Объект.Ссылка = Параметр.РабочийСтолСсылка Тогда
			РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(СписокВиджетов, "Владелец", Объект.Ссылка);
				
			Элементы.СписокВиджетов.Обновить();
			
			Если НЕ Источник = Неопределено
				И ТипЗнч(Источник) = Тип("СправочникСсылка.Виджеты")
				И ЗначениеЗаполнено(Источник) Тогда				
				Элементы.СписокВиджетов.ТекущаяСтрока = Источник;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокВиджетовПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКомандКонтекстногоМеню();	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВиджетовПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Копирование Тогда 
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;
		
	КонецЕсли;	
	
	ПереносимыйЭлемент 	= ПараметрыПеретаскивания.Значение;
	НовыйРодитель 		= Строка;
	
	Если НЕ ПроверитьВозможностьПереноса(ПереносимыйЭлемент, НовыйРодитель) Тогда
        ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отобразить(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("РабочийСтолСсылка", Объект.Ссылка);
		ОткрытьФорму("Обработка.РабочийСтол.Форма.ФормаРабочегоСтола", ПараметрыФормы);
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Данные еще не записаны. Для продолжения необходимо записать данные.'"));
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ТекущиеДанные = Элементы.СписокВиджетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущийВиджет = ТекущиеДанные.Ссылка;
	Если ЗначениеЗаполнено(ТекущийВиджет) Тогда
		ПереместитьтВверхВнизНаСервере(ТекущийВиджет, "Вверх");
	КонецЕсли;	
	
	Элементы.СписокВиджетов.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеремеситьВниз(Команда)
	
	ТекущиеДанные = Элементы.СписокВиджетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущийВиджет = ТекущиеДанные.Ссылка;
	Если ЗначениеЗаполнено(ТекущийВиджет) Тогда
		ПереместитьтВверхВнизНаСервере(ТекущийВиджет, "Вниз");
	КонецЕсли;	
	
	Элементы.СписокВиджетов.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДекорацияКартинка(Команда)
	
	ОбработатьКомандуМеню("ДекорацияКартинка");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДекорацияНадпись(Команда)
	
	ОбработатьКомандуМеню("ДекорацияНадпись");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбычнаяГруппа(Команда)
		
	ОбработатьКомандуМеню("ГруппаОбычнаяГруппа");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбычнаяГруппаБезОтображения(Команда)
	
	ОбработатьКомандуМеню("ГруппаОбычнаяГруппаБезОтображения");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтраница(Команда)
	
	ОбработатьКомандуМеню("ГруппаСтраница");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтраницы(Команда)
	
	ОбработатьКомандуМеню("ГруппаСтраницы");
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьГруппу(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Данные еще не записаны. Для продолжения необходимо записать данные'"));
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.СписокВиджетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ДопПараметры 		= Новый Структура("ВиджетСсылка", ТекущиеДанные.Ссылка);
		ОписаниеОповещения 	= Новый ОписаниеОповещения("ПослеВопросаСкопироватьГруппу", ЭтотОбъект, ДопПараметры);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Текущий элемент и все его подчиненные элементы будут скопированы.
			|Это может занять некоторое время. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКнопку(Команда)
	
	ОбработатьКомандуМеню("Кнопка");
	
КонецПроцедуры

&НаКлиенте
Процедура МетрикаНадпись(Команда)
	
	ОбработатьКомандуМеню("МетрикаНадпись");
	
КонецПроцедуры

&НаКлиенте
Процедура МетрикаНадписьСОформлением(Команда)
	
	ОбработатьКомандуМеню("МетрикаНадписьСУсловнымОформлением");
	
КонецПроцедуры

&НаКлиенте
Процедура МетрикаДиаграмма(Команда)
	
	ОбработатьКомандуМеню("МетрикаДиаграмма");
	
КонецПроцедуры

#КонецОбласти	

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеВопросаСкопироватьГруппу(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СкопироватьГруппуЭлементовНаСервере(ДополнительныеПараметры.ВиджетСсылка);
	Элементы.СписокВиджетов.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьГруппуЭлементовНаСервере(Знач ВиджетСсылка)
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Виджеты.Ссылка КАК Ссылка,
		|	Виджеты.Родитель КАК Родитель
		|ИЗ
		|	Справочник.Виджеты КАК Виджеты
		|ГДЕ
		|	НЕ Виджеты.ПометкаУдаления
		|	И Виджеты.Ссылка В ИЕРАРХИИ(&Ссылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("Ссылка", ВиджетСсылка);	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Предок = ?(ЗначениеЗаполнено(ВиджетСсылка.Родитель), ВиджетСсылка.Родитель, Справочники.Виджеты.ПустаяСсылка());
	СоответствиеРодителей = Новый Соответствие;
	СоответствиеРодителей.Вставить(ВиджетСсылка.Родитель, Предок);
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Пока Выборка.Следующий() Цикл
		
		ТекСпр = Выборка.Ссылка.ПолучитьОбъект();
		НовыйВиджет 			= ТекСпр.Скопировать();
		НовыйВиджет.Родитель 	= СоответствиеРодителей[Выборка.Родитель];	 
		НовыйВиджет.Записать();
		
		Если ЗначениеЗаполнено(Выборка.Родитель) Тогда
			СоответствиеРодителей.Вставить(Выборка.Ссылка, НовыйВиджет.Ссылка);
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбработатьКомандуМеню(Знач ИмяКоманды)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Данные еще не записаны. Для продолжения необходимо записать данные'"));
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные 		= Элементы.СписокВиджетов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		РодительЭлемента = ПредопределенноеЗначение("Справочник.Виджеты.ПустаяСсылка");
	Иначе
		РодительЭлемента = РодительЭлементаФормы(ИмяКоманды, ТекущиеДанные);
	КонецЕсли;	
	
	Модифицированность 	= Истина;	
	ФормаПараметры 		= Новый Структура;
	ФормаПараметры.Вставить("ВидВиджета", ИмяКоманды);
	ФормаПараметры.Вставить("Родитель", РодительЭлемента);
	ФормаПараметры.Вставить("Владелец", Объект.Ссылка);
	ОткрытьФорму("Справочник.Виджеты.ФормаОбъекта", ФормаПараметры,, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Функция РодительЭлементаФормы(Знач ДобавляемыйЭлемент, Знач ТекущиеДанные)
		
	Если ТекущиеДанные.Вид = ПредопределенноеЗначение("Перечисление.ВидыВиджетов.Страницы") Тогда
		
		Если ДобавляемыйЭлемент = "ГруппаСтраница" Тогда
			Возврат ТекущиеДанные.Ссылка;
		Иначе
			Возврат ТекущиеДанные.Родитель;
		КонецЕсли;
		
	ИначеЕсли ТекущиеДанные.Вид = ПредопределенноеЗначение("Перечисление.ВидыВиджетов.Декорация")
		ИЛИ ТекущиеДанные.Вид = ПредопределенноеЗначение("Перечисление.ВидыВиджетов.Кнопка")
		ИЛИ ТекущиеДанные.Вид = ПредопределенноеЗначение("Перечисление.ВидыВиджетов.Метрика") Тогда
		
		Возврат ТекущиеДанные.Родитель;
		
	Иначе
		Возврат ТекущиеДанные.Ссылка;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПереместитьтВверхВнизНаСервере(Знач ТекущийЭлементСсылка, Знач Направление)
	
	НастройкаПорядкаЭлементовСлужебный.ПереместитьЭлемент(Элементы.СписокВиджетов, ТекущийЭлементСсылка, Направление); 
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандКонтекстногоМеню()
	
	ТекущиеДанные = Элементы.СписокВиджетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено 
		ИЛИ ТекущиеДанные.Вид <> ПредопределенноеЗначение("Перечисление.ВидыВиджетов.Страницы") Тогда
		Элементы.СписокВиджетовДобавитьСтраница.Видимость				= Ложь;
		Элементы.СписокВиджетовКонтекстноеМенюДобавитьСтраница.Видимость= Ложь;
	ИначеЕсли ТекущиеДанные.Вид  = ПредопределенноеЗначение("Перечисление.ВидыВиджетов.Страницы") Тогда
		Элементы.СписокВиджетовДобавитьСтраница.Видимость				= Истина;
		Элементы.СписокВиджетовКонтекстноеМенюДобавитьСтраница.Видимость= Истина;
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Функция ПроверитьВозможностьПереноса(Знач ПереносимыйЭлемент, Знач НовыйРодитель)
	
	ПереносимыйЭлементВид   = ПереносимыйЭлемент.Вид;
	
	Если Не ЗначениеЗаполнено(НовыйРодитель) Тогда
		
		Если ПереносимыйЭлементВид = Перечисления.ВидыВиджетов.Страница Тогда
			Возврат Ложь;
		Иначе	
			Возврат	Истина;
		КонецЕсли;
		
	КонецЕсли;	
	
	НовыйРодительВид 		= НовыйРодитель.Вид;
	
	Если НовыйРодительВид = Перечисления.ВидыВиджетов.Страницы Тогда		
		
		Если ПереносимыйЭлементВид = Перечисления.ВидыВиджетов.Страница Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли НовыйРодительВид = Перечисления.ВидыВиджетов.Декорация
		ИЛИ НовыйРодительВид = Перечисления.ВидыВиджетов.Кнопка
		ИЛИ НовыйРодительВид = Перечисления.ВидыВиджетов.Метрика Тогда
		
		Возврат Ложь;
		
	КонецЕсли;	
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти