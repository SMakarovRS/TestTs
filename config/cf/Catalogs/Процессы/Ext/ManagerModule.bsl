#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Заполняет предопределенные процессы.
//
// Параметры:
//   МассивЗаполнения - Массив - массив, который передан для перезаполнения, 
//		содержит ссылки на справочник Процессы, если Неопределено, значит полное перезаполнение.
//
Процедура ЗаполнитьПроцессыПриПервоначальномЗаполнении(Знач МассивЗаполнения = Неопределено) Экспорт
	
	ИТОтдел = Справочники.ГруппыПользователей.НайтиПоНаименованию(НСтр("ru = 'IT-отдел'"));
	Если НЕ ЗначениеЗаполнено(ИТОтдел) Тогда
		ИТОтдел = Справочники.ГруппыПользователей.СоздатьЭлемент();
		ИТОтдел.Наименование = НСтр("ru = 'IT-отдел'");
		ИТОтдел.Записать();
		ИТОтдел = ИТОтдел.Ссылка;
	КонецЕсли;
	
	// Описываем стуктуру.
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Объект");
	ТЗ.Колонки.Добавить("Наименование");
	ТЗ.Колонки.Добавить("Комментарий");
	ТЗ.Колонки.Добавить("ТипПроцесса");
	
	// ТЧ.
	ТЗ.Колонки.Добавить("Этапы");
	ТЗ.Колонки.Добавить("ЭтапыПроцесса");
	ТЗ.Колонки.Добавить("Исполнители");
	ТЗ.Колонки.Добавить("ИсполнителиЭтапов");
	
	
	ВД = Справочники.Процессы;
	ЭП = Справочники.ЭтапыПроцессов;
	ПустойЭтап = ЭП.ПустаяСсылка();	
	
	//*********************************
	// Задача
	НоваяСтрока = ДобавитьВТаблицуЗначений(ТЗ,	ВД.Задача,			"Задача", НСтр("ru = 'Простая задача'"), Справочники.ТипыПроцессов.ЗапросНаУслугу);
	
	// Добавляем колонки.
	ДобавитьКолонкиВЭтапы(НоваяСтрока.Этапы);
	ДобавитьКолонкиВЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса);
	ДобавитьКолонкиВИсполнители(НоваяСтрока.Исполнители);
	ДобавитьКолонкиВИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов);
	
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Новый);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Выполнено);	
	
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ПустойЭтап, 		ЭП.Новый);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 			ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 			ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнение, 	ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнено, 		ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнено,		ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Возобновлено, 	ЭП.Выполнение);
	
	ДобавитьВТаблицуЗначенийИсполнители(НоваяСтрока.Исполнители, ИТОтдел);
	
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Новый, 			ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Выполнение, 	ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Выполнено, 		ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Возобновлено, 	ИТОтдел);
	
	//*********************************
	// ЗадачаНаИзменениеПрограммногоПродукта. 
	НоваяСтрока = ДобавитьВТаблицуЗначений(ТЗ,	ВД.ЗадачаНаИзменениеПрограммногоПродукта,	НСтр("ru = 'Задача на изменение программного продукта'"), НСтр("ru = 'Используется при внесении изменений в программный продукт'"), Справочники.ТипыПроцессов.ЗапросНаИзменение);
	
	// Добавляем колонки.
	ДобавитьКолонкиВЭтапы(НоваяСтрока.Этапы);
	ДобавитьКолонкиВЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса);
	ДобавитьКолонкиВИсполнители(НоваяСтрока.Исполнители);
	ДобавитьКолонкиВИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов);	

	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Новый);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.НазначениеОтветственных);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Выполнение);	
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Проверка);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Отложено);	
	
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ПустойЭтап, 				ЭП.Новый);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 					ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 					ЭП.НазначениеОтветственных);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.НазначениеОтветственных,ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнение, 			ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнение, 			ЭП.Проверка);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Проверка, 				ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 					ЭП.Отложено);	
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнено, 				ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Отложено, 				ЭП.НазначениеОтветственных);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Отложено, 				ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.НазначениеОтветственных,ЭП.Отложено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.НазначениеОтветственных,ЭП.Отменено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнено, 				ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Возобновлено, 			ЭП.Выполнение);
	
	ДобавитьВТаблицуЗначенийИсполнители(НоваяСтрока.Исполнители, ИТОтдел);
	
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Новый, 						ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Выполнение, 				ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Выполнено, 					ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.НазначениеОтветственных, 	ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Отложено, 					ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Проверка, 					ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Отменено, 					ИТОтдел);	
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Возобновлено, 				ИТОтдел);
	
	//*********************************
	// Поручение.
	НоваяСтрока = ДобавитьВТаблицуЗначений(ТЗ,	ВД.Поручение,		НСтр("ru = 'Поручение'"), 	НСтр("ru = 'Поручение от пользователя, которое может быть выполнено сразу'"), Справочники.ТипыПроцессов.Инцидент);
	
	// Добавляем колонки.
	ДобавитьКолонкиВЭтапы(НоваяСтрока.Этапы);
	ДобавитьКолонкиВЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса);
	ДобавитьКолонкиВИсполнители(НоваяСтрока.Исполнители);
	ДобавитьКолонкиВИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов);	
	
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Новый);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Проверка);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Выполнено);	
	
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ПустойЭтап, 	ЭП.Новый);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 		ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 		ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнение, ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнение, ЭП.Проверка);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Проверка, 	ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнено,	ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнено,	ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Возобновлено, ЭП.Выполнение);
	
	ДобавитьВТаблицуЗначенийИсполнители(НоваяСтрока.Исполнители, ИТОтдел);
	
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Новый, 		ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Выполнение, ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Проверка, 	ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Выполнено, 	ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Возобновлено, ИТОтдел);
	
	//*********************************
	// Обращение.
	НоваяСтрока = ДобавитьВТаблицуЗначений(ТЗ,	ВД.Обращение,		НСтр("ru = 'Обращение'"), 	НСтр("ru = 'Возникает при обращении в службу технической поддержки'"), Справочники.ТипыПроцессов.ЗапросНаИзменение);
	
	// Добавляем колонки.
	ДобавитьКолонкиВЭтапы(НоваяСтрока.Этапы);
	ДобавитьКолонкиВЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса);
	ДобавитьКолонкиВИсполнители(НоваяСтрока.Исполнители);
	ДобавитьКолонкиВИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов);	

	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Новый);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Регистрация);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Отменено);	
	
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ПустойЭтап, ЭП.Новый);
		
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 			ЭП.Регистрация);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Регистрация, 	ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Регистрация, 	ЭП.Отменено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнение, 	ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнено, 		ЭП.Выполнение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнено, 		ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Возобновлено, 	ЭП.Выполнение);
	
	ДобавитьВТаблицуЗначенийИсполнители(НоваяСтрока.Исполнители, ИТОтдел);
	
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Новый, 		ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Выполнение, ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Регистрация,ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Выполнено,	ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Отменено, 	ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Возобновлено, ИТОтдел);
	
	//*********************************
	// Согласование доступа.
	НоваяСтрока = ДобавитьВТаблицуЗначений(ТЗ,	ВД.СогласованиеДоступа,		НСтр("ru = 'Согласование доступа к программам и информационным ресурсам'"), НСтр("ru = 'Используется при согласовании доступа к программам и информационным ресурсам'"), Справочники.ТипыПроцессов.ЗапросНаДоступ);
	
	// Добавляем колонки.
	ДобавитьКолонкиВЭтапы(НоваяСтрока.Этапы);
	ДобавитьКолонкиВЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса);
	ДобавитьКолонкиВИсполнители(НоваяСтрока.Исполнители);
	ДобавитьКолонкиВИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов);	

	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Новый);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Согласование);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Разрешение);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Отказано);	
	
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ПустойЭтап, ЭП.Новый);
		
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 			ЭП.Согласование);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Согласование, 	ЭП.Разрешение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Согласование, 	ЭП.Отказано);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Разрешение, 	ЭП.Согласование);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Отказано, 		ЭП.Согласование);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Разрешение, 	ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Возобновлено, 	ЭП.Согласование);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Разрешение, 	ЭП.Отказано);
	
	ДобавитьВТаблицуЗначенийИсполнители(НоваяСтрока.Исполнители, ИТОтдел);
	
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Новый, 			ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Согласование, 	ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Разрешение, 	ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Отказано, 		ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Возобновлено, 	ИТОтдел);
	
	//*********************************
	// ЖалобаПользователя.
	НоваяСтрока = ДобавитьВТаблицуЗначений(ТЗ,	ВД.ЖалобаПользователя, НСтр("ru = 'Жалоба пользователя'"),	НСтр("ru = 'Используется для подачи жалобы на сотрудников IT-отдела'"), Справочники.ТипыПроцессов.Инцидент);
	
	// Добавляем колонки.
	ДобавитьКолонкиВЭтапы(НоваяСтрока.Этапы);
	ДобавитьКолонкиВЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса);
	ДобавитьКолонкиВИсполнители(НоваяСтрока.Исполнители);
	ДобавитьКолонкиВИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов);	

	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Новый);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Рассмотрение);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапы(НоваяСтрока.Этапы, ЭП.Выполнено);	
	
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ПустойЭтап, ЭП.Новый);
		
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Новый, 			ЭП.Рассмотрение);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Рассмотрение, 	ЭП.Выполнено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Выполнено, 		ЭП.Возобновлено);
	ДобавитьВТаблицуЗначенийЭтапыПроцесса(НоваяСтрока.ЭтапыПроцесса, ЭП.Возобновлено, 	ЭП.Рассмотрение);
	
	ДобавитьВТаблицуЗначенийИсполнители(НоваяСтрока.Исполнители, ИТОтдел);
	
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Новый, 			ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Рассмотрение, 	ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Выполнено, 		ИТОтдел);
	ДобавитьВТаблицуЗначенийИсполнителиЭтапов(НоваяСтрока.ИсполнителиЭтапов, ЭП.Возобновлено, 	ИТОтдел);
	
	// Записываем.
	Для Каждого Строки Из ТЗ Цикл		
		
		// Пропускаем, если перезаполнение по элементам не массива.
		Если МассивЗаполнения <> Неопределено Тогда
			Если МассивЗаполнения.Найти(Строки.Объект) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Объект = Строки.Объект.ПолучитьОбъект();
				
		// Реквизиты.
		ЗаполнитьЗначенияСвойств(Объект, Строки);
		Если Объект.АвтоматическоеВыполнениеЗаданияЧасов = 0 Тогда
			Объект.АвтоматическоеВыполнениеЗаданияЧасов = 168;
		КонецЕсли;
				
		// Табличная часть "Этапы".
		Объект.Этапы.Очистить();
		Для каждого Строки2 Из Строки.Этапы Цикл
			НоваяСтрока = Объект.Этапы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строки2);
		КонецЦикла;
		
		// Табличная часть "ЭтапыПроцесса".
		Объект.ЭтапыПроцесса.Очистить();
		Для каждого Строки2 Из Строки.ЭтапыПроцесса Цикл
			НоваяСтрока = Объект.ЭтапыПроцесса.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строки2);
		КонецЦикла;
		
		// Табличная часть "Исполнители".
		Объект.Исполнители.Очистить();
		Для каждого Строки2 Из Строки.Исполнители Цикл
			НоваяСтрока = Объект.Исполнители.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строки2);
		КонецЦикла;
		
		// Табличная часть "ИсполнителиЭтапов".
		Объект.ИсполнителиЭтапов.Очистить();
		Для каждого Строки2 Из Строки.ИсполнителиЭтапов Цикл
			НоваяСтрока = Объект.ИсполнителиЭтапов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строки2);
		КонецЦикла;
		
		Объект.Записать();
		
	КонецЦикла;

	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#Область ПравилаСобытий

// Функция - Все условия правил событий для объекта.
// 
// Возвращаемое значение:
//  Соответствие - соответствие с условиями.
//
Функция УсловияПравилаСобытий() Экспорт
	
	СоответствиеИзменениеОбъекта     = Новый Соответствие;	
	СоответствиеПериодическоеСобытие = Новый Соответствие;
	
	СоответствиеРасчетМетрик = Новый Соответствие;
	СоответствиеРасчетМетрик.Вставить("ПроцессыРасчетМетрикЗаписьЭлемента", НСтр("ru = 'Запись элемента'"));

	Соответствие = Новый Соответствие;
	Соответствие.Вставить("СоответствиеИзменениеОбъекта", 	  СоответствиеИзменениеОбъекта);
	Соответствие.Вставить("СоответствиеПериодическоеСобытие", СоответствиеПериодическоеСобытие);
	Соответствие.Вставить("СоответствиеРасчетМетрик", 		  СоответствиеРасчетМетрик);
	
	Возврат Соответствие;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДобавитьВТаблицуЗначений(ТЗ, Объект, Наименование, Комментарий, ТипПроцесса = Неопределено)
	
	НоваяСтрока 				= ТЗ.Добавить();
	НоваяСтрока.Объект		 	= Объект;
	НоваяСтрока.Наименование 	= Наименование;
	НоваяСтрока.Комментарий		= Комментарий;
	НоваяСтрока.ТипПроцесса		= ?(ТипПроцесса = Неопределено, Справочники.ТипыПроцессов.Инцидент, ТипПроцесса);
	
	Возврат НоваяСтрока;
	
КонецФункции

Процедура ДобавитьКолонкиВЭтапы(Этапы)
	
	Этапы = Новый ТаблицаЗначений;
	Этапы.Колонки.Добавить("Этап");
	
КонецПроцедуры

Процедура ДобавитьКолонкиВЭтапыПроцесса(Этапы)
	
	Этапы = Новый ТаблицаЗначений;
	Этапы.Колонки.Добавить("НачальныйЭтап");
	Этапы.Колонки.Добавить("КонечныйЭтап");
	Этапы.Колонки.Добавить("ИсполнительПоУмолчанию");
	Этапы.Колонки.Добавить("ШаблонОповещенияНаблюдателей");
	Этапы.Колонки.Добавить("ШаблонОповещенияИнициатора");
	Этапы.Колонки.Добавить("ШаблонОповещенияТекущегоИсполнителя");
	Этапы.Колонки.Добавить("ТребоватьПриПереводеНаСледующийЭтапИсполнителя");
	Этапы.Колонки.Добавить("УдалитьПереноситьИсполнителяИзПредыдущегоЭтапа");
	
КонецПроцедуры

Процедура ДобавитьКолонкиВИсполнители(Исполнители)
	
	Исполнители = Новый ТаблицаЗначений;
	Исполнители.Колонки.Добавить("Исполнитель");
	
КонецПроцедуры

Процедура ДобавитьКолонкиВИсполнителиЭтапов(Исполнители)
	
	Исполнители = Новый ТаблицаЗначений;
	Исполнители.Колонки.Добавить("Этап");
	Исполнители.Колонки.Добавить("Исполнитель");
	
КонецПроцедуры

Процедура ДобавитьВТаблицуЗначенийЭтапыПроцесса(ТЗ, НачальныйЭтап, КонечныйЭтап)
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.НачальныйЭтап									= НачальныйЭтап;
	НоваяСтрока.КонечныйЭтап									= КонечныйЭтап;
	
КонецПроцедуры

Процедура ДобавитьВТаблицуЗначенийЭтапы(ТЗ, Этап)
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.Этап 					= Этап;
		
КонецПроцедуры

Процедура ДобавитьВТаблицуЗначенийИсполнители(ТЗ, Исполнитель)
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.Исполнитель 			= Исполнитель;
		
КонецПроцедуры

Процедура ДобавитьВТаблицуЗначенийИсполнителиЭтапов(ТЗ, Этап, Исполнитель)
	
	НоваяСтрока = ТЗ.Добавить();
	НоваяСтрока.Этап					= Этап;
	НоваяСтрока.Исполнитель 			= Исполнитель;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли