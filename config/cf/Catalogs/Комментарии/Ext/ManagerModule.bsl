#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Комментарии

////////////////////////////////////////////////////////////////////////////////
// ПУБЛИЧНЫЕ ОБРАБОТЧИКИ

// Возвращает значение родителя по пункту.
//
// Параметры
//	КомментарийСсылка - Тип: СправочникСсылка.Комментарии
//
// Возвращаемое значение
//	Массив. СправочникСсылка.Комментарии
//
Функция ПолучитьПодчиненныеКомментарии(Знач КомментарийСсылка) Экспорт
	
	Если КомментарийСсылка.Пустая() Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", КомментарийСсылка);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(СвязьКомментариев.Ссылка, ЗНАЧЕНИЕ(Справочник.Комментарии.ПустаяСсылка)) КАК Ссылка
		|ИЗ
		|	РегистрСведений.СвязьКомментариев КАК СвязьКомментариев
		|ГДЕ
		|	СвязьКомментариев.Родитель = &Родитель
		|	И НЕ СвязьКомментариев.Ссылка.ПометкаУдаления";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Возвращает значение родителя по пункту.
//
// Параметры
//	КомментарийСсылка - Тип: СправочникСсылка.Комментарии
//
// Возвращаемое значение
//	СправочникСсылка.Комментарии
//
Функция ПолучитьЗначениеРодитель(Знач КомментарийСсылка) Экспорт
	
	Если КомментарийСсылка.Пустая() Тогда
		Возврат Справочники.Комментарии.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", КомментарийСсылка);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(СвязьКомментариев.Родитель, ЗНАЧЕНИЕ(Справочник.Комментарии.ПустаяСсылка)) КАК Родитель
		|ИЗ
		|	РегистрСведений.СвязьКомментариев КАК СвязьКомментариев
		|ГДЕ
		|	СвязьКомментариев.Ссылка = &Ссылка
		|	И НЕ СвязьКомментариев.Родитель.ПометкаУдаления";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Комментарии.ПустаяСсылка();
	Иначе 
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Родитель;
	КонецЕсли;
	
КонецФункции

// Добавляет комментарий, при этом используя имеющиеся помеченные на удаление.
//
// Возвращаемое значение
//	СправочникОбъект.Комментарии.
//
Функция СоздатьКомментарий() Экспорт
	
	УдаленныйКомментарий = ПолучитьПомеченныйНаУдаление();
	Если ЗначениеЗаполнено(УдаленныйКомментарий) Тогда
		ОчиститьСвязиПоКомментарию(УдаленныйКомментарий);
		ЭлементОбъект = УдаленныйКомментарий.ПолучитьОбъект();
	Иначе 
		ЭлементОбъект = Справочники.Комментарии.СоздатьЭлемент();
	КонецЕсли;
	
	Возврат ЭлементОбъект;
	
КонецФункции

// Удаляет выбранный комментарий, при этом переподчиняет пункты вышестоящему родителю.
//
// Параметры
//	КомментарийСсылка - Тип: СправочникСсылка.Комментарии.
//
Процедура УдалитьКомментарий(Знач КомментарийСсылка) Экспорт
	
	РодительСсылки		= ПолучитьЗначениеРодитель(КомментарийСсылка);
	ПодчиненныеСсылки	= ПолучитьПодчиненныеКомментарии(КомментарийСсылка);
	Для Каждого ЭлементСсылка Из ПодчиненныеСсылки Цикл
		РегистрыСведений.СвязьКомментариев.УстановитьСвязь(РодительСсылки, ЭлементСсылка);
	КонецЦикла;
	
	ВладелецКомментария	= КомментарийСсылка.ВладелецКомментария;
	
	ЭлементОбъект = КомментарийСсылка.ПолучитьОбъект();
	ЭлементОбъект.Удалить();
	
	Если ТипЗнч(ВладелецКомментария) = Тип("СправочникСсылка.СтатьиБазыЗнаний") Тогда
		ПараметрыВыполнения = Новый Структура("Статья", ВладелецКомментария);
		
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(ПараметрыВыполнения);
		
		ФоновыеЗадания.Выполнить(
			"БазаЗнаний.ОбновитьКоличествоКомментариев",
			МассивПараметров, ,
			НСтр("ru = 'Обновление количества комментариев'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПравилаСобытий

// Функция - Все условия правил событий для объекта.
// 
// Возвращаемое значение:
//  Соответствие - соответствие с условиями.
//
Функция УсловияПравилаСобытий() Экспорт
	
	СоответствиеИзменениеОбъекта     = Новый Соответствие;	
	СоответствиеПериодическоеСобытие = Новый Соответствие;
	
	СоответствиеРасчетМетрик = Новый Соответствие;
	СоответствиеРасчетМетрик.Вставить("КомментарииРасчетМетрикЗаписьЭлемента", НСтр("ru = 'Запись элемента'"));

	Соответствие = Новый Соответствие;
	Соответствие.Вставить("СоответствиеИзменениеОбъекта", 	  СоответствиеИзменениеОбъекта);
	Соответствие.Вставить("СоответствиеПериодическоеСобытие", СоответствиеПериодическоеСобытие);
	Соответствие.Вставить("СоответствиеРасчетМетрик", 		  СоответствиеРасчетМетрик);
	
	Возврат Соответствие;
	
КонецФункции

// Функция - Проверка условия правила события.
//
// Параметры:
//  ПравилоСобытия	 - СправчоникСсылка.ПравилаСобытий	 - правило проверки.
//  ИмяСобытия		 - Строка	 - имя проверки.
//  Структура		 - Структура	 - источник события и другая информация.
// 
// Возвращаемое значение:
//   - 
//
Функция ПроверкаУсловияПравилаСобытия(Знач ПравилоСобытия, Знач Структура = Неопределено, 
	Знач Источник = Неопределено) Экспорт
	
	ИмяСобытия = ПравилоСобытия.ПроверкаРеквизитовОбъектаИмяУсловия;
	
	Если ПравилоСобытия.ТипПравила = Перечисления.ТипыПравилСобытий.ИзменениеОбъекта Тогда 
		
		Если Источник.Приватный = Ложь И ИмяСобытия = "ЗаданиеИзменениеОбъектаДобавлениеОбычногоКомментария" Тогда
			Возврат Истина;
			
		ИначеЕсли Источник.Приватный = Истина И ИмяСобытия = "ЗаданиеИзменениеОбъектаДобавлениеПриватногоКомментария" Тогда
			Возврат Истина;
			
		ИначеЕсли ИмяСобытия = "СтатьяБазыЗнанийИзменениеОбъектаДобавлениеКомментария" Тогда
			Возврат Истина;
			
		КонецЕсли;	
				
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ СОБЫТИЯ

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Автор");
	Поля.Добавить("Период");
	Поля.Добавить("Код");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = СтрШаблон(НСтр("ru = 'Комментарий: %1 от %2 (%3)'"), Строка(Данные.Автор), 
		Формат(Данные.Период, "ДЛФ=DT"), СокрЛП(Данные.Код));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПомеченныйНаУдаление()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Комментарии.Ссылка
		|ИЗ
		|	Справочник.Комментарии КАК Комментарии
		|ГДЕ
		|	Комментарии.ПометкаУдаления";
		
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе 
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

Процедура ОчиститьСвязиПоКомментарию(Знач КомментарийСсылка)
	
	НаборЗаписей = РегистрыСведений.СвязьКомментариев.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Родитель.Установить(КомментарийСсылка);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
