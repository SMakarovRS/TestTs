#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем РодительСсылка Экспорт; //<< Родительская ссылка.

#КонецОбласти

#Область ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ МОДУЛЯ

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ТекстИзменился = ЭтоНовый();
	Если НЕ ТекстИзменился Тогда
		ТекущийТекст	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Текст");
		ТекстИзменился	= (ТекущийТекст <> Текст);
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый"				, ЭтоНовый());
	ДополнительныеСвойства.Вставить("ТекстИзменился"		, ТекстИзменился);
	ДополнительныеСвойства.Вставить("ПометкаУдаленияСсылки"	, 
		?(ЭтоНовый(), Ложь, Ссылка.ПометкаУдаления));
	
	Если НЕ ЭтоНовый() Тогда
		ДополнительныеСвойства.Вставить("НеВыполнятьПравилаСобытий", Истина);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Автор) Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый		      = ДополнительныеСвойства.Свойство("ЭтоНовый") 
		И ДополнительныеСвойства.ЭтоНовый;
	ТекстИзменился	      = ДополнительныеСвойства.Свойство("ТекстИзменился") 
		И ДополнительныеСвойства.ТекстИзменился;
	ПометкаУдаленияСсылки = ДополнительныеСвойства.Свойство("ПометкаУдаленияСсылки") 
		И ДополнительныеСвойства.ПометкаУдаленияСсылки;
	
	Если ЭтоНовый ИЛИ ТекстИзменился Тогда
		ДобавитьНовостьБазыЗнаний(?(ЭтоНовый, 1, 2));
	КонецЕсли;
	
	Если ПометкаУдаленияСсылки <> ПометкаУдаления Тогда
		Если ТипЗнч(ВладелецКомментария) = Тип("СправочникСсылка.СтатьиБазыЗнаний") Тогда
			Если ПометкаУдаления Тогда
				ДобавитьНовостьБазыЗнаний(3);
				УдалитьНовостиБазыЗнаний();
			Иначе
				ДобавитьНовостьБазыЗнаний(4);
			КонецЕсли;			
		КонецЕсли;		
	КонецЕсли;
	
	ТекущийРодитель = ПолучитьРодителяКомментария(Ссылка);
	Если ТекущийРодитель <> РодительСсылка И НЕ ТекущийРодитель.Пустая() Тогда
		РегистрыСведений.СвязьКомментариев.ОчиститьСвязь(ТекущийРодитель, Ссылка);
	КонецЕсли;
	Если НЕ РодительСсылка.Пустая() Тогда
		РегистрыСведений.СвязьКомментариев.УстановитьСвязь(РодительСсылка, Ссылка);
		Если ЗначениеЗаполнено(РодительСсылка.УчетнаяЗаписьЭлектроннойПочты) Тогда
			Если Не ЗначениеЗаполнено(УчетнаяЗаписьЭлектроннойПочты) Тогда
				УчетнаяЗаписьЭлектроннойПочты = РодительСсылка.УчетнаяЗаписьЭлектроннойПочты;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	Если ЭтоНовый Тогда
		ОбновитьСтатистикуКомментариев();
	КонецЕсли;
	
	Если ТипЗнч(ВладелецКомментария) = Тип("ДокументСсылка.Задание") Тогда
		РегистрыСведений.РеквизитыЗаданий.ОбновитьДополнительныеРеквизитыЗадания(ВладелецКомментария);
		РегистрыСведений.РеквизитыЗаданийПоПользователям.УстановитьДатуОткрытия(ВладелецКомментария);
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередУдалением(Отказ)
		
	РегистрыСведений.СвязьКомментариев.ОчиститьСвязь(РодительСсылка, Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ МЕТОДЫ

Функция ПолучитьРодителяКомментария(КомментарийСсылка)
	
	Возврат Справочники.Комментарии.ПолучитьЗначениеРодитель(КомментарийСсылка);
	
КонецФункции

Функция ПолучитьПользователейДляОповещения()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Комментарии.Объект.Автор КАК Пользователь,
		|	1 КАК ВидОповещения
		|ИЗ
		|	Справочник.Комментарии КАК Комментарии
		|ГДЕ
		|	Комментарии.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СвязьКомментариев.Родитель.Автор,
		|	2
		|ИЗ
		|	РегистрСведений.СвязьКомментариев КАК СвязьКомментариев
		|ГДЕ
		|	СвязьКомментариев.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидОповещения";
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ОбновитьСтатистикуКомментариев()
	
	Если ТипЗнч(ВладелецКомментария) = Тип("СправочникСсылка.СтатьиБазыЗнаний") Тогда
		ПараметрыВыполнения = Новый Структура("Статья", ВладелецКомментария);
		
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(ПараметрыВыполнения);
		
		ФоновыеЗадания.Выполнить(
			"БазаЗнаний.ОбновитьКоличествоКомментариев",
			МассивПараметров, ,
			НСтр("ru = 'Обновление количества комментариев'"));
	КонецЕсли;
	
КонецПроцедуры

// ТипНовости: 1 - создание, 2 - изменение, 3 - удаление.
Функция ДобавитьНовостьБазыЗнаний(ТипНовости)
	
	Если ТипЗнч(ВладелецКомментария) = Тип("СправочникСсылка.СтатьиБазыЗнаний") Тогда
		
		Если ВладелецКомментария.Черновик Тогда
			Возврат Ложь;
		КонецЕсли;	
	
		ПараметрыСсылкиОтв	= Новый Структура("id", Строка(Автор.УникальныйИдентификатор()));
		АдресСсылкиОтв		= БазаЗнанийAPIКлиентСервер.КонструкторСсылки_page("user", ПараметрыСсылкиОтв);
		
		ПараметрыСсылкиСтат	= Новый Структура("id", Строка(ВладелецКомментария.УникальныйИдентификатор()));
		АдресСсылкиСтат		= БазаЗнанийAPIКлиентСервер.КонструкторСсылки_page("article", ПараметрыСсылкиСтат);
		
		ПараметрыСсылкиКомм	= ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыСсылкиСтат);
		ПараметрыСсылкиКомм.Вставить("section", "comment_" + Строка(Ссылка.УникальныйИдентификатор()));
		АдресСсылкиКом		= БазаЗнанийAPIКлиентСервер.КонструкторСсылки_page("article", ПараметрыСсылкиКомм);
		
		Если ТипНовости = 1 Тогда
			ВидНовости	= Перечисления.ВидыНовостейБазыЗнаний.Создание;
			Заголовок	= НСтр("ru = 'Новый комментарий в статье ''%3'' от пользователя %4'");
			НовостьHTML	= "<div>" + НСтр("ru = '%1 в %2 добавлен новый комментарий к статье'") 
			+ " <a href='" + АдресСсылкиСтат + "'>%3</a>.
			|	<br>" + НСтр("ru = 'Автор'") + ": <a href='" + АдресСсылкиОтв + "'>%4</a>
			|	<br>" + НСтр("ru = 'Текст'") + ": %5.
			|	<br><a href='" + АдресСсылкиКом + "'>" + НСтр("ru = 'Перейти'") + "</a>
			|</div>";
		ИначеЕсли ТипНовости = 2 Тогда
			ВидНовости	= Перечисления.ВидыНовостейБазыЗнаний.Изменение;
			Заголовок	= НСтр("ru = 'Изменен комментарий в статье ''%3'' от пользователя %4'");
			НовостьHTML	= "<div>" + НСтр("ru = '%1 в %2 изменен комментарий в статье'") 
			+ " <a href='" + АдресСсылкиСтат + "'>%3</a>.
			|	<br>" + НСтр("ru = 'Автор'") + ": <a href='" + АдресСсылкиОтв + "'>%4</a>
			|	<br>" + НСтр("ru = 'Текст'") + ": %5.
			|	<br><a href='" + АдресСсылкиКом + "'>" + НСтр("ru = 'Перейти'") + "</a>
			|</div>";
		ИначеЕсли ТипНовости = 3 Тогда
			ВидНовости	= Перечисления.ВидыНовостейБазыЗнаний.Удаление;
			Заголовок	= НСтр("ru = 'Удален комментарий в статье ''%3'' от пользователя ''%4'''");
			НовостьHTML	= "<div>" + НСтр("ru = '%1 в %2 удален комментарий в статье'") 
			+ " <a href='" + АдресСсылкиСтат + "'>%3</a>.
			|	<br>" + НСтр("ru = 'Автор'") + ": <a href='" + АдресСсылкиОтв + "'>%4</a>
			|	<br>" + НСтр("ru = 'Текст'") + ": %5.
			|</div>";
		ИначеЕсли ТипНовости = 4 Тогда
			ВидНовости	= Перечисления.ВидыНовостейБазыЗнаний.Изменение;
			Заголовок	= НСтр("ru = 'Восстановлен комментарий в статье ''%3'' от пользователя ''%4'''");
			НовостьHTML	= "<div>" + НСтр("ru = '%1 в %2 восстановлен комментарий в статье'") 
			+ " <a href='" + АдресСсылкиСтат + "'>%3</a>.
			|	<br>" + НСтр("ru = 'Автор'") + ": <a href='" + АдресСсылкиОтв + "'>%4</a>
			|	<br>" + НСтр("ru = 'Текст'") + ": %5.
			|</div>";			
		КонецЕсли;
		
		ДатаНовости = ТекущаяДатаСеанса();
		
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(Формат(ДатаНовости, "ДЛФ=DD"));
		МассивПараметров.Добавить(Формат(ДатаНовости, "ДФ=HH:mm"));
		МассивПараметров.Добавить(Строка(ВладелецКомментария));
		МассивПараметров.Добавить(Строка(Автор));
		МассивПараметров.Добавить(Текст);
		
		Заголовок	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтрокуИзМассива(Заголовок, МассивПараметров);
		НовостьHTML	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтрокуИзМассива(НовостьHTML, МассивПараметров);
		
		Получатели	= Новый Массив;
		Если ЗначениеЗаполнено(РодительСсылка) Тогда
			ПользовательАвтор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РодительСсылка, "Автор");
			Если ПользовательАвтор <> Пользователи.ТекущийПользователь() Тогда
				Получатели.Добавить(ПользовательАвтор);
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыНовости = Новый Структура;
		ПараметрыНовости.Вставить("Автор"				, Автор);
		ПараметрыНовости.Вставить("Заголовок"			, Заголовок);
		ПараметрыНовости.Вставить("ТекстHTML"			, НовостьHTML);
		ПараметрыНовости.Вставить("ОбъектБазыЗнаний"	, Ссылка);
		ПараметрыНовости.Вставить("Важность"			, 2);
		ПараметрыНовости.Вставить("Получатели"			, Получатели);
		ПараметрыНовости.Вставить("ВидНовости"			, ВидНовости);
		
		БазаЗнанийВызовСервера.ДобавитьНовость(ПараметрыНовости);
	
	КонецЕсли;
	
КонецФункции

Функция УдалитьНовостиБазыЗнаний()
	
	МассивСсылок = БазаЗнаний.ПолучитьНовостиПоОбъекту(Ссылка);
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("Ссылки", МассивСсылок);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ПараметрыВыполнения);
	
	ФоновыеЗадания.Выполнить(
		"БазаЗнаний.УдалитьНовости",
		МассивПараметров,
		,
		НСтр("ru = 'Удаление новостей базы знаний по объекту'"));
	
КонецФункции

#КонецОбласти

#Область Инициализация

РодительСсылка = ПолучитьРодителяКомментария(Ссылка);

#КонецОбласти

#КонецЕсли