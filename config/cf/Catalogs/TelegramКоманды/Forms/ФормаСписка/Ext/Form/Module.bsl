
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОтборПоБоту = Истина;
	
	Если Параметры.Свойство("Отбор") Тогда
		
		Если Параметры.Отбор.Свойство("Владелец") Тогда
			ОтборПоБоту = Ложь;
		Иначе		
			Запрос = Новый Запрос();
			Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	TelegramБоты.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.TelegramБоты КАК TelegramБоты";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Бот = Выборка.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;       
	
	УстановитьУсловноеОформлениеИОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы 

&НаКлиенте
Процедура БотПриИзменении(Элемент)
	
	УстановитьУсловноеОформлениеИОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеИОтбор()
	
	УО = ЭтаФорма.УсловноеОформление.Элементы;
	УО.Очистить();
	
    ЭлементУО 						= УО.Добавить();
    ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Серый);
	
	ГруппаОтбора 					= ЭлементУО.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	
    ЭлементУсловия 					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Список.Активность");
    ЭлементУсловия.ВидСравнения 	= ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение 	= Ложь;
    ЭлементУсловия 					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Список.ЭтоГруппа");
    ЭлементУсловия.ВидСравнения 	= ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение 	= Ложь;
	
	
    ПолеОформления 					= ЭлементУО.Поля.Элементы.Добавить();
   	ПолеОформления.Поле 	    	= Новый ПолеКомпоновкиДанных("Список");
    ПолеОформления.Использование 	= Истина;
	
	Если ОтборПоБоту Тогда
		РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(Список, "Владелец", Бот, Истина, 
			ВидСравненияКомпоновкиДанных.Равно);
	Иначе
		Элементы.Бот.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти