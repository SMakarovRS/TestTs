#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Ошибки = Неопределено;
	
	Если ВариантРасчета = Перечисления.ВариантыРасчетаВремениРеакцииИРешения.Независимый Тогда
		
		Если ВремяРешения = 0 Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
				"Объект.ВремяРешения", 
				НСтр("ru = 'Не задано время решения.'"), 
				"Ошибки");			
		КонецЕсли;
			
	ИначеЕсли ВариантРасчета = Перечисления.ВариантыРасчетаВремениРеакцииИРешения.Вычисляемый Тогда
		
		Если НЕ ЗначениеЗаполнено(ВычисляемоеВремяРеакции) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
				"Объект.ВычисляемоеВремяРеакции", 
				НСтр("ru = 'Не задано время реакции.'"), 
				"Ошибки");			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВычисляемоеВремяРешения) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
				"Объект.ВычисляемоеВремяРешения", 
				НСтр("ru = 'Не задано время решения.'"), 
				"Ошибки");			
		КонецЕсли;
		
	ИначеЕсли ВариантРасчета = Перечисления.ВариантыРасчетаВремениРеакцииИРешения.ЗависитОтВремениПоступившегоЗадания Тогда
		
		Для Индекс1 = 0 По Время.Количество() - 1 Цикл
			
			Если Время[Индекс1].ВремяНачала > Время[Индекс1].ВремяОкончания Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
					"Объект.Время", 
					СтрШаблон(НСтр("ru = 'Время начала больше времени окончания (%1 - %2)'"), Время[Индекс1].ВремяНачала, Время[Индекс1].ВремяОкончания),
					"Ошибки");
			КонецЕсли;
			
			Для Индекс2 = Индекс1 + 1 По Время.Количество() - 1 Цикл
				Если (Время[Индекс1].ВремяНачала <= Время[Индекс2].ВремяНачала И Время[Индекс2].ВремяНачала <= Время[Индекс1].ВремяОкончания)
					ИЛИ (Время[Индекс1].ВремяНачала <= Время[Индекс2].ВремяОкончания И Время[Индекс2].ВремяОкончания <= Время[Индекс1].ВремяОкончания) Тогда
					
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
						"Объект.Время", 
						СтрШаблон(НСтр("ru = 'Есть пересечения интервалов времени (%1 - %2, %3 - %4)'"), Время[Индекс1].ВремяНачала, Время[Индекс1].ВремяОкончания,
							Время[Индекс2].ВремяНачала, Время[Индекс2].ВремяОкончания), 
						"Ошибки");
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	ИначеЕсли ВариантРасчета = Перечисления.ВариантыРасчетаВремениРеакцииИРешения.ЗависитОтДняМесяцаПоступившегоЗадания Тогда
		
		Для Индекс1 = 0 По ДниМесяца.Количество() - 1 Цикл
			
			Если ДниМесяца[Индекс1].ДеньНачала > ДниМесяца[Индекс1].ДеньОкончания Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
					"Объект.ДниМесяца", 
					СтрШаблон(НСтр("ru = 'День начала больше дня окончания (%1 - %2)'"), ДниМесяца[Индекс1].ДеньНачала, ДниМесяца[Индекс1].ДеньОкончания),
					"Ошибки");
			КонецЕсли;
				
			Если ДниМесяца[Индекс1].ДеньНачала = 0 Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
					"Объект.ДниМесяца", 
					СтрШаблон(НСтр("ru = 'День начала должен быть больше нуля (%1 - %2)'"), ДниМесяца[Индекс1].ДеньНачала, ДниМесяца[Индекс1].ДеньОкончания),
					"Ошибки");				
			КонецЕсли;
			
			Если ДниМесяца[Индекс1].ДеньНачала > 31 Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
					"Объект.ДниМесяца", 
					СтрШаблон(НСтр("ru = 'День начала должен быть меньше 31 (%1 - %2)'"), ДниМесяца[Индекс1].ДеньНачала, ДниМесяца[Индекс1].ДеньОкончания),
					"Ошибки");				
			КонецЕсли;
			
			Если ДниМесяца[Индекс1].ДеньОкончания > 31 Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
					"Объект.ДниМесяца", 
					СтрШаблон(НСтр("ru = 'День окончания должен быть меньше 31 (%1 - %2)'"), ДниМесяца[Индекс1].ДеньНачала, ДниМесяца[Индекс1].ДеньОкончания),
					"Ошибки");				
			КонецЕсли;
			
			Для Индекс2 = Индекс1 + 1 По ДниМесяца.Количество() - 1 Цикл
				Если (ДниМесяца[Индекс1].ДеньНачала <= ДниМесяца[Индекс2].ДеньНачала И ДниМесяца[Индекс2].ДеньНачала <= ДниМесяца[Индекс1].ДеньОкончания)
					ИЛИ (ДниМесяца[Индекс1].ДеньНачала <= ДниМесяца[Индекс2].ДеньОкончания И ДниМесяца[Индекс2].ДеньОкончания <= ДниМесяца[Индекс1].ДеньОкончания) Тогда
					
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
						"Объект.ДниМесяца", 
						СтрШаблон(НСтр("ru = 'Есть пересечения интервалов дней месяца (%1 - %2, %3 - %4)'"), ДниМесяца[Индекс1].ДеньНачала, ДниМесяца[Индекс1].ДеньОкончания,
							ДниМесяца[Индекс2].ДеньНачала, ДниМесяца[Индекс2].ДеньОкончания), 
						"Ошибки");
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	ИначеЕсли ВариантРасчета = Перечисления.ВариантыРасчетаВремениРеакцииИРешения.ЗависитОтДняНеделиПоступившегоЗадания Тогда
		
		ТЗ = ДниНедели.Выгрузить();
		ТЗ.Колонки.Добавить("Количество");
		ТЗ.ЗаполнитьЗначения(1, "Количество");
		ТЗ.Свернуть("ДеньНедели", "Количество");
		Для Каждого Строки Из ТЗ Цикл
			Если Строки.Количество > 1 Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
					"Объект.ДниНедели", 
					СтрШаблон(НСтр("ru = 'Есть несколько одинаковых дней недели (%1)'"), Строки.ДеньНедели), 
					"Ошибки");
			КонецЕсли;
		КонецЦикла;
		
		Если ТЗ.Количество() <> 7 Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
				"Объект.ДниНедели", 
				НСтр("ru = 'Должны быть добавлены все дни недели'"), 
				"Ошибки");			
		КонецЕсли;
		
	ИначеЕсли ВариантРасчета = Перечисления.ВариантыРасчетаВремениРеакцииИРешения.ЗависитОтПриоритетаПоступившегоЗадания Тогда
		
		ТЗ = Приоритеты.Выгрузить();
		ТЗ.Колонки.Добавить("Количество");
		ТЗ.ЗаполнитьЗначения(1, "Количество");
		ТЗ.Свернуть("Приоритет", "Количество");
		Для Каждого Строки Из ТЗ Цикл
			Если Строки.Количество > 1 Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
					"Объект.Приоритеты", 
					СтрШаблон(НСтр("ru = 'Есть несколько одинаковых приоритетов (%1)'"), Строки.Приоритет), 
					"Ошибки");
			КонецЕсли;
		КонецЦикла;
		
		Если ТЗ.Количество() <> 5 Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
				"Объект.Приоритеты", 
				НСтр("ru = 'Должны быть добавлены все приоритеты'"), 
				"Ошибки");			
			КонецЕсли;
			
	КонецЕсли;
	
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли