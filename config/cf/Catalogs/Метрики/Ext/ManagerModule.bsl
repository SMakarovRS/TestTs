#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Функция ПредопределенноеЗначениеПоИдентификатору(Знач ИмяИдентификатора, Перезаполнить = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос        = Новый Запрос();
	Запрос.Текст  =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Метрики.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Метрики КАК Метрики
		|ГДЕ
		|	Метрики.Идентификатор = &ИмяИдентификатора";
	
	Запрос.УстановитьПараметр("ИмяИдентификатора", ИмяИдентификатора);	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
		
	Иначе
		
		Перезаполнить     	= Истина;
		Спр 				= Справочники.Метрики.СоздатьЭлемент();
		Спр.Идентификатор 	= ИмяИдентификатора;
		Спр.Наименование  	= ИмяИдентификатора;
		Спр.Записать();
		
		Возврат Спр.Ссылка;
		
	КонецЕсли;
	
КонецФункции

// Заполнение структуры метрики
//
Функция ТаблицаСтруктураМетрики() Экспорт
		
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Объект");
	ТЗ.Колонки.Добавить("Наименование");		
	ТЗ.Колонки.Добавить("ЕдиницаИзмерения");
	ТЗ.Колонки.Добавить("ЗначениеПоУмолчанию");
	ТЗ.Колонки.Добавить("Описание");
	ТЗ.Колонки.Добавить("Измерения");
	ТЗ.Колонки.Добавить("Родитель");
	
	Возврат ТЗ;
	
КонецФункции

// Поиск и создание группы метрики
//
Функция НайтиСоздатьГруппуМетрики(Знач ИмяИдентификатора, Знач ИмяГруппы) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Метрики.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Метрики КАК Метрики
		|ГДЕ
		|	Метрики.Идентификатор = &Идентификатор
		|	И Метрики.ЭтоГруппа = ИСТИНА";
	
	Запрос.УстановитьПараметр("Идентификатор", ИмяИдентификатора);	
	РезультатЗапроса       = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
		
	Иначе
		
		Спр = Справочники.Метрики.СоздатьГруппу();
		Спр.Идентификатор = ИмяИдентификатора;
		Спр.Наименование  = ИмяГруппы;
		Спр.Записать();
		
		Возврат Спр.Ссылка;
		
	КонецЕсли;
	
КонецФункции

// Заполнение метрик
//
Процедура ЗаполнитьМетрикиДокументЗадание(ТЗ) Экспорт
	
	ЕдШт			= Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду(796);	
	ГруппаЗадания 	= НайтиСоздатьГруппуМетрики("Задание", "Документ Задание");
	
	#Область КоличествоВыполненныхЗаданий	
	НоваяСтрока		= МетрикиДобавитьВТаблицуЗначений(ТЗ,
						 ПредопределенноеЗначениеПоИдентификатору("КоличествоВыполненныхЗаданий"),
						 НСтр("ru = 'Количество выполненных заданий'"),
						 ЕдШт,
						 ,
						 НСтр("ru = 'Все не помеченные на удаление выполненные задания.'"),
						 ГруппаЗадания);
	ДобавитьКолонкиВИзмерения(НоваяСтрока.Измерения);					 
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.ПотенциальныеКлиенты;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Инициатор'"),
			НСтр("ru = 'Инициатор задания'"));					 
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Клиент'"),
			НСтр("ru = 'Клиент'"));
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.ГруппыПользователей;Справочник.Пользователи;",
			НСтр("ru = 'Исполнитель'"),
			НСтр("ru = 'Исполнитель задания'"),
			,
			,
			Перечисления.ТипыНазначенияМетрик.Пользователь);
	#КонецОбласти
	
	#Область КоличествоНераспределенныхЗаданий	
	НоваяСтрока		= МетрикиДобавитьВТаблицуЗначений(ТЗ,
						 ПредопределенноеЗначениеПоИдентификатору("КоличествоНераспределенныхЗаданий"),
						 НСтр("ru = 'Количество нераспределенных заданий'"),
						 ЕдШт,
						 ,
						 НСтр("ru = 'Все не помеченные на удаление задания, в которых исполнитель не указан.'"),
						 ГруппаЗадания);
	ДобавитьКолонкиВИзмерения(НоваяСтрока.Измерения);					 
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.ПотенциальныеКлиенты;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Инициатор'"),
			НСтр("ru = 'Инициатор задания'"));					 
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Клиент'"),
			НСтр("ru = 'Клиент'"));
	#КонецОбласти
	
	#Область КоличествоОткрытыхЗаданий	
	НоваяСтрока		= МетрикиДобавитьВТаблицуЗначений(ТЗ,
						 ПредопределенноеЗначениеПоИдентификатору("КоличествоОткрытыхЗаданий"),
						 НСтр("ru = 'Количество открытых заданий'"),
						 ЕдШт,
						 ,
						 НСтр("ru = 'Все не помеченные на удаление не выполненные задания.'"),
						 ГруппаЗадания);
	ДобавитьКолонкиВИзмерения(НоваяСтрока.Измерения);					 
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.ПотенциальныеКлиенты;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Инициатор'"),
			НСтр("ru = 'Инициатор задания'"));					 
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Клиент'"),
			НСтр("ru = 'Клиент'"));
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.ГруппыПользователей;Справочник.Пользователи;",
			НСтр("ru = 'Исполнитель'"),
			НСтр("ru = 'Исполнитель задания'"),
			,
			,
			Перечисления.ТипыНазначенияМетрик.Пользователь);
	#КонецОбласти
	
	#Область КоличествоПросроченныхЗаданий	
	НоваяСтрока		= МетрикиДобавитьВТаблицуЗначений(ТЗ,
						 ПредопределенноеЗначениеПоИдентификатору("КоличествоПросроченныхЗаданий"),
						 НСтр("ru = 'Количество просроченных заданий'"),
						 ЕдШт,
						 ,
						 НСтр("ru = 'Все не помеченные на удаление задания, просроченные по времени выполнения.'"),
						 ГруппаЗадания);
	ДобавитьКолонкиВИзмерения(НоваяСтрока.Измерения);					 
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.ГруппыПользователей;Справочник.Пользователи;",
			НСтр("ru = 'Исполнитель'"),
			НСтр("ru = 'Исполнитель задания'"),
			,
			,
			Перечисления.ТипыНазначенияМетрик.Пользователь);
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Клиент'"),
			НСтр("ru = 'Клиент'"));	
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.ПотенциальныеКлиенты;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Инициатор'"),
			НСтр("ru = 'Инициатор задания'"));
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Документ.СоглашениеSLA",
			НСтр("ru = 'Соглашение SLA'"),
			НСтр("ru = 'Соглашение SLA'"));			
	#КонецОбласти
	
	#Область ОбщееКоличествоЗаданий	
	НоваяСтрока		= МетрикиДобавитьВТаблицуЗначений(ТЗ,
						 ПредопределенноеЗначениеПоИдентификатору("ОбщееКоличествоЗаданий"),
						 НСтр("ru = 'Общее количество заданий'"),
						 ЕдШт,
						 ,
						 НСтр("ru = 'Все задания, не помеченные на удаление.'"),
						 ГруппаЗадания);
	ДобавитьКолонкиВИзмерения(НоваяСтрока.Измерения);					 
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.ПотенциальныеКлиенты;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Инициатор'"),
			НСтр("ru = 'Инициатор задания'"));					 
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.КонтактныеЛица;Справочник.Контрагенты;Справочник.Организации;Справочник.Подразделения;"
			+ "Справочник.Пользователи;Справочник.Сотрудники;Справочник.ФизическиеЛица;",
			НСтр("ru = 'Клиент'"),
			НСтр("ru = 'Клиент'"));
	ДобавитьВТаблицуЗначенийИзмерения(НоваяСтрока.Измерения, 
			"Справочник.ГруппыПользователей;Справочник.Пользователи;",
			НСтр("ru = 'Исполнитель'"),
			НСтр("ru = 'Исполнитель задания'"),
			,
			,
			Перечисления.ТипыНазначенияМетрик.Пользователь);
	#КонецОбласти
	
КонецПроцедуры

// Первоначальное заполнение метрик
//
Процедура ЗаполнитьПриПервоначальномЗаполнении() Экспорт
		
	ТЗ = ТаблицаСтруктураМетрики();	
	ЗаполнитьМетрикиДокументЗадание(ТЗ);	
	ЗаписатьМетрики(ТЗ);
	
КонецПроцедуры

// Запись метрик
//
Процедура ЗаписатьМетрики(ТЗ) Экспорт
	
	Для Каждого Строки Из ТЗ Цикл		
		Объект 			= Строки.Объект.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект, Строки);		
		Объект.Измерения.Очистить();
		Для Каждого Строки2 Из Строки.Измерения Цикл
			НоваяСтрока = Объект.Измерения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строки2);
		КонецЦикла;			
		Объект.Записать();				
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МетрикиДобавитьВТаблицуЗначений(Знач ТЗ, 
										Знач Объект,
										Знач Наименование,
										Знач ЕдиницаИзмерения,
										Знач ЗначениеПоУмолчанию = 0, 
										Знач Описание = "", 
										Знач Родитель)
	
	НоваяСтрока 	   		 		= ТЗ.Добавить();
	НоваяСтрока.Объект 		 		= Объект;
	НоваяСтрока.Наименование 		= Наименование;
	НоваяСтрока.ЕдиницаИзмерения 	= ЕдиницаИзмерения;
	НоваяСтрока.ЗначениеПоУмолчанию = ЗначениеПоУмолчанию;
	НоваяСтрока.Описание			= Описание;
	НоваяСтрока.Родитель			= Родитель;
	
	Возврат НоваяСтрока;
	
КонецФункции

Процедура ДобавитьКолонкиВИзмерения(Измерения)
	
	Измерения = Новый ТаблицаЗначений;
	Измерения.Колонки.Добавить("ТипИзмерения");
	Измерения.Колонки.Добавить("Представление");
	Измерения.Колонки.Добавить("Подсказка");
	Измерения.Колонки.Добавить("ПоУмолчанию");
	Измерения.Колонки.Добавить("Обязательное");
	Измерения.Колонки.Добавить("Назначение");
	
КонецПроцедуры

Процедура ДобавитьВТаблицуЗначенийИзмерения(ТаблицаИзмерения, 
											Знач ТипИзмерения,
											Знач Представление = "",											
											Знач Подсказка = "",
											Знач ПоУмолчанию = Неопределено,
											Знач Обязательное = Ложь,
											Знач Назначение = Неопределено)
	
	НоваяСтрока 				= ТаблицаИзмерения.Добавить();
	НоваяСтрока.ТипИзмерения 	= ТипИзмерения;
	НоваяСтрока.Представление 	= Представление;
	НоваяСтрока.Подсказка 		= Подсказка;
	Если ПоУмолчанию <> Неопределено Тогда
		НоваяСтрока.ПоУмолчанию = ПоУмолчанию;
	КонецЕсли;
	НоваяСтрока.Обязательное 	= Обязательное;
	Если Назначение <> Неопределено Тогда 
		НоваяСтрока.Назначение = Назначение;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли