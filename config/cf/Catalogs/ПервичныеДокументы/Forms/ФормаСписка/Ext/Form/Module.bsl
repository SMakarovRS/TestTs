
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Локализация.
	Список.Параметры.УстановитьЗначениеПараметра("ЕстьОригинал", 	НСтр("ru = 'Есть оригинал'"));
	Список.Параметры.УстановитьЗначениеПараметра("НетОригинала", 	НСтр("ru = 'Нет оригинала'"));
	Список.Параметры.УстановитьЗначениеПараметра("ПереданВОплату", 	НСтр("ru = 'Передан в оплату'")); 
	Список.Параметры.УстановитьЗначениеПараметра("НеПереданВОплату", НСтр("ru = 'Не передан в оплату'")); 
    Список.Параметры.УстановитьЗначениеПараметра("Оплачен", 		НСтр("ru = 'Оплачен'")); 
	Список.Параметры.УстановитьЗначениеПараметра("НеОплачен", 		НСтр("ru = 'Не оплачен'")); 
    Список.Параметры.УстановитьЗначениеПараметра("ПереданВАрхив", 	НСтр("ru = 'Передан в архив'")); 
	Список.Параметры.УстановитьЗначениеПараметра("НеПереданВАрхив", НСтр("ru = 'Не передан в архив'")); 	
	Список.Параметры.УстановитьЗначениеПараметра("Электронный", 	НСтр("ru = 'Электронный'"));
	Список.Параметры.УстановитьЗначениеПараметра("Бумажный", 		НСтр("ru = 'Бумажный'"));
	
	// Режим выбора.
	Элементы.Список.РежимВыбора = Параметры.РежимВыбора;
	Если Параметры.МножественныйВыбор <> Неопределено Тогда
		Элементы.Список.МножественныйВыбор = Параметры.МножественныйВыбор;
	КонецЕсли;
	
	Если Параметры.РежимВыбора И Не ЗначениеЗаполнено(Параметры.КлючПользовательскихНастроек) Тогда
		Параметры.КлючПользовательскихНастроек = "РежимВыбора";
		Список.АвтоматическоеСохранениеПользовательскихНастроек = Ложь;
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		КонтекстноеОткрытие = Истина;
	КонецЕсли;	
	
	Если КонтекстноеОткрытие Тогда
		ПредставлениеПериода	= РаботаСОтборамиКлиентСервер.ОбновитьПредставлениеПериода(
			Новый СтандартныйПериод);
	Иначе	
		РаботаСОтборамиВызовСервера.ВосстановитьНастройкиОтборов(ЭтотОбъект, Список);
		
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	// Учет остатков контрагентов.
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("ОтборОрганизация");
	УправлениеITОтделом8УФ.УстановитьОграничениеТипаДляЭлементовФормы(ЭтаФорма, МассивЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ КонтекстноеОткрытие И НЕ ЗавершениеРаботы Тогда
		
		СохранитьНастройкиОтборов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	//@skip-warning
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма") 
		И ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ФормаВыбораОрганизацииКонтрагента"
		И ИсточникВыбора.ВладелецФормы = ЭтаФорма Тогда		
		УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикОбработкаВыбораФормы(ЭтаФорма, 
			"ОтборОрганизация",
			ОтборОрганизация,
			ВыбранноеЗначение,
			Новый ОписаниеОповещения("ПослеОбработкиВыбора", ЭтотОбъект));
			
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПервичныеДокументы_ФормаСписка_УстановленОтборПериод" Тогда	
		
		Если НЕ КонтекстноеОткрытие Тогда			
			СохранитьНастройкиОтборов();	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДопПараметры 			= Новый Структура;	
	ДопПараметры.Вставить("ОписаниеОповещенияОВыбореПериода", 
		"ПервичныеДокументы_ФормаСписка_УстановленОтборПериод"); 

	РаботаСОтборамиКлиент.ПредставлениеПериодаВыбратьПериод(ЭтотОбъект, ДопПараметры);

КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;
	УстановитьОтборСписка("Организация", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;
	УстановитьОтборСписка("Контрагент", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДоговорОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;
	УстановитьОтборСписка("Договор", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЕстьОригиналОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;	
	УстановитьОтборСписка("ОтборЕстьОригинал", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЭДООбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;	
	УстановитьОтборСписка("ОтборЭДО", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ОтборСтатусОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;	
	УстановитьОтборСписка("Статус", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидДокументаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;	
	УстановитьОтборСписка("ВидПервичногоДокумента", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПереданВОплатуОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;	
	УстановитьОтборСписка("ОтборПереданВОплату", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОплаченОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;	
	УстановитьОтборСписка("ОтборОплачен", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПереданВАрхивОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;	
	УстановитьОтборСписка("ОтборПереданВАрхив", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОтветственныйОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;	
	УстановитьОтборСписка("Ответственный", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодДокументаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка	= Ложь;	
	УстановитьОтборСписка("Период", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение		= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Договор" Тогда
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено 
			И ЗначениеЗаполнено(ТекущиеДанные.Договор) Тогда
		    СтандартнаяОбработка = Ложь;
			ПоказатьЗначение(, ТекущиеДанные.Договор);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементыУО = Список.УсловноеОформление.Элементы;	
	ЭлементыУО.Очистить();
	
	// Работа с документом завершена.
	ЭлементУсловногоОформления		= ЭлементыУО.Добавить();	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", 
		ЦветаСтиля["ЦветФонаКорректногоКонтрагентаВДокументе"]);
	ЭлементОтбора					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(
		Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ДокументЗакрыт");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	// Удаленные. 
	ЭлементУсловногоОформления		= ЭлементыУО.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", 
		ШрифтыСтиля["ШрифтДиалоговИМенюЗачеркнутый8"]);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля["ЦветТемноСерый"]);
	ЭлементОтбора					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(
		Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементУсловногоОформления		= ЭлементыУО.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля["ЦветТемноСерый"]);
	ЭлементОтбора					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(
		Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Статус");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение	= Перечисления.СтатусыПервичныхДокументов.Отменен;

	
КонецПроцедуры

#Область ПанельОтборов

&НаКлиенте
Процедура ПоказатьСкрытьПанельОтборов(Команда)	
	
	НовоеЗначениеВидимости = НЕ Элементы.ПанельОтборов.Видимость;
	РаботаСОтборамиКлиент.ПоказатьСкрытьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимости);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОтборов()
	
	РаботаСОтборамиВызовСервера.СохранитьНастройкиОтборов(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСписка(ИмяПоляОтбора, ИмяГруппыРодителя, ЗначениеОтбора)
		
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ИмяПоляОтбора",				ИмяПоляОтбора);
	ДопПараметры.Вставить("ИмяГруппыРодителя",			ИмяГруппыРодителя);
	ДопПараметры.Вставить("ЗначениеОтбора",				ЗначениеОтбора);
	ДопПараметры.Вставить("ПредставлениеЗначенияОтбора",Строка(ЗначениеОтбора));
	
	РаботаСОтборамиВызовСервера.СоздатьЭлементФормыПоЗначениюОтбора(ЭтотОбъект, ДопПараметры);		
	РаботаСОтборамиВызовСервера.УстановитьОтборСписка(ЭтотОбъект, Список, 
		Новый Структура("ИмяПоляОтбора", ИмяПоляОтбора));
		
	Если НЕ КонтекстноеОткрытие Тогда			
		СохранитьНастройкиОтборов();	
	КонецЕсли;	
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОтборОбработкаНавигационнойСсылки(Элемент, 
		НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОтборИД = Сред(Элемент.Имя, СтрДлина("Отбор_") + 1);
	УдалитьЭлементОтбор(ОтборИД);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЭлементОтбор(ОтборИД)
	
	РаботаСОтборамиВызовСервера.УдалитьОтборСписка(ЭтотОбъект, Список, Новый Структура("ОтборИД", ОтборИД));
	
	Если Не КонтекстноеОткрытие Тогда
		
		СохранитьНастройкиОтборов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВсеОтборы(Команда)
			
	УдалитьОтборы();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьОтборы()
	
	РаботаСОтборамиВызовСервера.УдалитьВсеОтборыСписка(ЭтотОбъект, Список);	
	ПредставлениеПериода = РаботаСОтборамиКлиентСервер.ОбновитьПредставлениеПериода(ОтборПериод);
	
	Если Не КонтекстноеОткрытие Тогда
		
		СохранитьНастройкиОтборов();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область УчетОстатковКонтрагентов

//@skip-warning
&НаКлиенте
Процедура Подключаемый_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
			
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикНачалоВыбора(ЭтаФорма, ОтборОрганизация, СтандартнаяОбработка);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_Очистка(Элемент, СтандартнаяОбработка)
	
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикОчистка(ЭтаФорма, "ОтборОрганизация");
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, 
	Ожидание, СтандартнаяОбработка)
	
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикАвтоПодбор(ЭтаФорма, 
				"ОтборОрганизация",
				Текст, 
				ДанныеВыбора,
				Ожидание,
				СтандартнаяОбработка);	
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)	
		
	УправлениеITОтделом8УФКлиент.ВыполнитьОбработчикОбработкаВыбора(ЭтаФорма, 
				"ОтборОрганизация", 
				ОтборОрганизация,
				Новый ОписаниеОповещения("ПослеОбработкиВыбора", ЭтотОбъект),
				ВыбранноеЗначение,
				СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбработкиВыбора(Результат, ДополнительныеПараметры) Экспорт
		
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		УстановитьОтборСписка("Организация", "ГруппаОтборОрганизация", ОтборОрганизация);
		ОтборОрганизация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"); 
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти