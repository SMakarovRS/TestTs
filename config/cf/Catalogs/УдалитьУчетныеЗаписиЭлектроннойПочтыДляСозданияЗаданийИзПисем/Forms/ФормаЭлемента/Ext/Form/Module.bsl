
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;	
	
	ОбновитьПриоритетыОпределения();
	ОбновитьВидимостьИДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Объект.ПриоритетОпределенияКлиентовИИнициаторов = "";
	Для Индекс = 1 По ПриоритетОпределения.Количество() Цикл
		Стр = ПриоритетОпределения.Получить(Индекс - 1);
		Объект.ПриоритетОпределенияКлиентовИИнициаторов = Объект.ПриоритетОпределенияКлиентовИИнициаторов 
			+ Стр.Значение + Символы.ПС;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПапкиЭлектронныхПисем

&НаКлиенте
Процедура ПапкиЭлектронныхПисемПослеУдаления(Элемент)
	
	ОбновитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиЭлектронныхПисемПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьВидимостьИДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПриоритеты

&НаКлиенте
Процедура ПриоритетЗагрузкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриоритетЗагрузкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриоритетЗагрузкиПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИгнорируемыеИнициаторы

&НаКлиенте
Процедура ИгнорируемыеИнициаторы1ПослеУдаления(Элемент)
	
	ОбновитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ИгнорируемыеИнициаторы1ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьВидимостьИДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура СрочностьПоУмолчаниюПриИзменении(Элемент)
	
	ОбновитьСрочностьВлияние();
	
КонецПроцедуры

&НаКлиенте
Процедура ВлияниеПоУмолчаниюПриИзменении(Элемент)
	
	ОбновитьСрочностьВлияние();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВидимостьИДоступность()
	
	Элементы.ГруппаПапкиЭлектронныхПисем.Заголовок = НСтр("ru = 'Фильтр электронных писем'");
	Если Объект.ПапкиЭлектронныхПисем.Количество() > 0 Тогда
		Элементы.ГруппаПапкиЭлектронныхПисем.Заголовок = Элементы.ГруппаПапкиЭлектронныхПисем.Заголовок
			+ СтрШаблон(НСтр("ru = ' (%1)'"), Объект.ПапкиЭлектронныхПисем.Количество());
	КонецЕсли;
		
	Элементы.ИгнорируемыеИнициаторы.Заголовок = НСтр("ru = 'Игнорируемые инициаторы'");
	Если Объект.ИгнорируемыеИнициаторы.Количество() > 0 Тогда
		Элементы.ИгнорируемыеИнициаторы.Заголовок = Элементы.ИгнорируемыеИнициаторы.Заголовок
			+ СтрШаблон(НСтр("ru = ' (%1)'"), Объект.ИгнорируемыеИнициаторы.Количество());
	КонецЕсли;		
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСрочностьВлияние()
	
	Объект.ПриоритетПоУмолчанию = ЗаданияСервер.РассчитатьПриоритет(Объект.ВлияниеПоУмолчанию, Объект.СрочностьПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПриоритетыОпределения()
	
	СЗ = ЗаданияСервер.СписокПриоритетовОпределенияКлиентовИИнициаторов(Объект.Ссылка);
	ПриоритетОпределения.Очистить();
	Для Индекс = 0 По СЗ.Количество() - 1 Цикл
		ПриоритетОпределения.Добавить(СЗ[Индекс].Значение, СЗ[Индекс].Представление);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти