
Процедура ОбновитьКонфигурацию(Конфигурация, Логин, Пароль) Экспорт
	
	ИдентификаторСессии = "";
	
	Результат = ПолучитьСтраницуКонфигурации(Конфигурация, Логин, Пароль, ИдентификаторСессии);
	
	Если Результат = Неопределено
		ИЛИ Результат.КодСостояния <> 200 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось получить страницу конфигурации. Проверьте корректность заполнения ссылки в карточке конфигурации.");
		Возврат;
	КонецЕсли;
	
	ТелоРезультата = Результат.ПолучитьТелоКакСтроку();
	
	ТаблицаРелизов = ПолучитьТаблицуИзТела(ТелоРезультата);
	
	СоздатьНовыеВерсии(ТаблицаРелизов, Конфигурация, ИдентификаторСессии);
	
	ЗаполнитьСписокВозможныхПереходов(ТаблицаРелизов, Конфигурация);
	
КонецПроцедуры

Функция ПолучитьСтраницуКонфигурации(Конфигурация, Логин, Пароль, ИдентификаторСессии1)
	
	// 1. Первым делом - посылаем get-запрос к
    // https://releases.1c.ru/total
 
    URI = HTTPСервисы.СтруктураURI(Конфигурация.СтраницаНаСайтеРелизов);
	
	Соединение = Новый HTTPСоединение(
        URI.Хост, // сервер (хост)
        URI.Порт, // порт, по умолчанию для http используется 80, для https 443
        , // пользователь для доступа к серверу (если он есть)
        , // пароль для доступа к серверу (если он есть)
        , // здесь указывается прокси, если он есть
        , // таймаут в секундах, 0 или пусто - не устанавливать
       Новый ЗащищенноеСоединениеOpenSSL()
    );
 
    // Получаем текст корневой страницы через GET-запрос.
    Запрос = Новый HTTPЗапрос(URI.ПутьНаСервере);
 
    Результат = Соединение.Получить(Запрос);
 
    // В куках нам должны вернуть идентификатор сессии.
    Куки = Результат.Заголовки.Получить("Set-Cookie");
    // Он идёт первым параметром и отделён от остальных
    // частей точкой с запятой.
    Куки = СтрЗаменить(Куки, ";", Символы.ПС);
    ИдентификаторСессии1 = СтрПолучитьСтроку(Куки, 1);    
 
    // 2. В результате первого запроса нас перенаправили
    // на другую страницу, перейдём на неё новым get-запросом.
    Перенаправление = Результат.Заголовки.Получить("Location");
 
    URI = HTTPСервисы.СтруктураURI(Перенаправление);
 
    Соединение = Новый HTTPСоединение(URI.Хост, URI.Порт,,,,,
        Новый ЗащищенноеСоединениеOpenSSL());
    Запрос = Новый HTTPЗапрос(URI.ПутьНаСервере);    
    Результат =  Соединение.Получить(Запрос);
 
    // В куках нам вернули второй идентификатор.
    Куки = Результат.Заголовки.Получить("set-cookie");
    Куки = СтрЗаменить(Куки, ";", Символы.ПС);
    ИдентификаторСессии2 = СтрПолучитьСтроку(Куки, 1);
 
    // 3. В результате предыдущего Get-запроса в теле нам вернули
    // страницу авторизации, вытащим из формы авторизации значения
    // параметров name="lt", name="execution" и name="_eventId",
    // чтобы затем сформировать код приглашения на сайт.
 
    ltValue = "";
    executionValue = "";
    _eventIdValue = "";
 
    Текст = Новый ТекстовыйДокумент;
	Тело = Результат.ПолучитьТелоКакСтроку();
	Тело = СтрЗаменить(Тело, "><", ">" + Символы.ПС + "<");
    Текст.УстановитьТекст(Тело);
    Для Индекс = 0 По Текст.КоличествоСтрок() Цикл
        Строка = Текст.ПолучитьСТроку(Индекс);
        Если Найти(Строка, "name=""lt""") > 0 Тогда
            ltValue = ВытащитьЗначениеИзСтроки(Строка);
        ИначеЕсли Найти(Строка, "name=""execution""") > 0 Тогда
            executionValue = ВытащитьЗначениеИзСтроки(Строка);
        ИначеЕсли Найти(Строка, "name=""_eventId""") > 0 Тогда
            _eventIdValue = ВытащитьЗначениеИзСтроки(Строка);
        КонецЕсли;
    КонецЦикла;
 
    // Для формирования кода приглашения нам понадобится
    // наш логин и пароль от ИТС.    
 
    КодПриглашения = "inviteCode=" + 
        "&lt=" + ltValue +
        "&execution=" + executionValue +
        "&_eventId=" + _eventIdValue +
        "&username=" + Логин +
        "&password=" + Пароль;    
 
    // 4. Наконец, посылаем Post-запрос, вкладывая в тело запроса
    // код приглашения, а куках указыаем второй идентификатор сессии.    
 
    Ресурс =
        "/login;" +
        ИдентификаторСессии2 +
        "?service=https%3A%2F%2Fusers.v8.1c.ru%2Fdistribution%2Fpublic%2Fsecurity_check%3B" +
        ИдентификаторСессии1;
 
    Соединение = Новый HTTPСоединение("login.1c.ru",,,,,,
        Новый ЗащищенноеСоединениеOpenSSL());
 
    Заголовки = Новый Соответствие;    
    Заголовки.Вставить("Cookie", ИдентификаторСессии2);
    Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded;");    
 
    Запрос = Новый HTTPЗапрос(Ресурс, Заголовки);
    Запрос.УстановитьТелоИзСтроки(КодПриглашения);
 
    Результат = Соединение.ОтправитьДляОбработки(Запрос);
 
    Перенаправление = Результат.Заголовки.Получить("location");
 
    // 5. В завершении авторизации переходим на следующую
    // страницу, используя первый идентификатор сессии.
 
    URI = HTTPСервисы.СтруктураURI(Перенаправление);
 
    Соединение = Новый HTTPСоединение(URI.Хост, URI.Порт,,,,,
        Новый ЗащищенноеСоединениеOpenSSL());
 
    Заголовки = Новый Соответствие;    
    Заголовки.Вставить("Cookie", ИдентификаторСессии1);    
 
    Запрос = Новый HTTPЗапрос(URI.ПутьНаСервере, Заголовки);
    Результат =  Соединение.Получить(Запрос);    
 
    Перенаправление = Результат.Заголовки.Получить("Location");
	
	// 6. Переходим на окончательную страницу.
	
	URI = HTTPСервисы.СтруктураURI(Перенаправление);
 
    Соединение = Новый HTTPСоединение(URI.Хост, URI.Порт,,,,,
        Новый ЗащищенноеСоединениеOpenSSL());
 
    Заголовки = Новый Соответствие;    
    Заголовки.Вставить("Cookie", ИдентификаторСессии1);    
 
    Запрос = Новый HTTPЗапрос(URI.ПутьНаСервере, Заголовки);
    Результат =  Соединение.Получить(Запрос);
	
	Возврат Результат;
	
КонецФункции

Функция ВытащитьЗначениеИзСтроки(Строка)
 
    Позиция2 = СтрДлина(Строка);
    Пока Позиция2 > 1 Цикл
        Если Сред(Строка, Позиция2, 1) = """" Тогда
            Прервать;
        КонецЕсли;
        Позиция2 = Позиция2 - 1;
    КонецЦикла;
 
    Позиция1 = Позиция2 - 1;
    Пока Позиция1 > 1 Цикл
        Если Сред(Строка, Позиция1, 1) = """" Тогда
            Прервать;
        КонецЕсли;
        Позиция1 = Позиция1 - 1;
    КонецЦикла;
 
    Возврат Сред(Строка, Позиция1 + 1, Позиция2 - Позиция1 - 1);
 
КонецФункции

Функция ПолучитьТаблицуИзТела(ТелоРезультата)
	
	ТаблицаРелизов = Новый ТаблицаЗначений;
	
	КС25 = Новый КвалификаторыСтроки(25);
	КС = Новый КвалификаторыСтроки();
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС25 = Новый ОписаниеТипов(Массив, , ,КС25);
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , ,КС);
	
	ТаблицаРелизов.Колонки.Добавить("Версия", ОписаниеТиповС25);
	ТаблицаРелизов.Колонки.Добавить("СсылкаНаСтраницуВерсии", ОписаниеТиповС);
	ТаблицаРелизов.Колонки.Добавить("ДатаВыхода", ОписаниеТиповС);
	ТаблицаРелизов.Колонки.Добавить("ВерсииПерехода", ОписаниеТиповС);
	
	Построитель = Новый ПостроительDOM;
	ЧтениеHTML  = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(ТелоРезультата);
	ДокументHTML = Построитель.Прочитать(ЧтениеHTML);
	
	ЭлементТаблицаВерсий = ДокументHTML.ПолучитьЭлементПоИдентификатору("versionsTable");
	
	ТелоТаблицыВерсий = ЭлементТаблицаВерсий.ПолучитьЭлементыПоИмени("tbody")[0];
	
	СтрокиТаблицыВерсий = ТелоТаблицыВерсий.ПолучитьЭлементыПоИмени("tr");
	
	Сч = 0;
	Для каждого СтрокаТаблицыВерсий Из СтрокиТаблицыВерсий Цикл
		
		ПроцентВыполнения = Формат( 100 * Сч / СтрокиТаблицыВерсий.Количество(), "ЧДЦ=2");
		ДлительныеОперации.СообщитьПрогресс(ПроцентВыполнения, "Получение списка версий (1/3)");
		Сч = Сч + 1;
		
		ЯчейкиТаблицыВерсий = СтрокаТаблицыВерсий.ПолучитьЭлементыПоИмени("td");
		
		СтрокаРелизов = ТаблицаРелизов.Добавить();
		
		Для каждого ЯчейкаТаблицыВерсий Из ЯчейкиТаблицыВерсий Цикл
			
			ЗначениеЯчейкиТаблицыВерсий = ЯчейкаТаблицыВерсий.ПервыйДочерний;
			Если ЗначениеЯчейкиТаблицыВерсий = Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			
			ЗначениеУзла = СокрЛП(ЗначениеЯчейкиТаблицыВерсий.ЗначениеУзла);
			
			Если ЯчейкаТаблицыВерсий.ИмяКласса = "versionColumn" Тогда
				
				ЗначениеУзла = СокрЛП(ЗначениеЯчейкиТаблицыВерсий.СледующийСоседний.ПервыйДочерний.ЗначениеУзла);
				Гипперссылка = СокрЛП(ЗначениеЯчейкиТаблицыВерсий.СледующийСоседний.Гиперссылка);
				
				СтрокаРелизов.Версия = ЗначениеУзла;
				СтрокаРелизов.СсылкаНаСтраницуВерсии = Гипперссылка;
				
			ИначеЕсли ЯчейкаТаблицыВерсий.ИмяКласса = "dateColumn" Тогда
				СтрокаРелизов.ДатаВыхода = ЗначениеУзла;
			ИначеЕсли ЯчейкаТаблицыВерсий.ИмяКласса = "previousVersionsColumn" Тогда
				СтрокаРелизов.ВерсииПерехода = ЗначениеУзла;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаРелизов;
	
КонецФункции

Процедура СоздатьНовыеВерсии(ТаблицаРелизов, Конфигурация, ИдентификаторСессии)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаРелизов.Версия КАК Версия,
		|	ТаблицаРелизов.ДатаВыхода КАК ДатаВыхода,
		|	ТаблицаРелизов.СсылкаНаСтраницуВерсии КАК СсылкаНаСтраницуВерсии
		|ПОМЕСТИТЬ ТЗ_ТаблицаВерсий
		|ИЗ
		|	&ТаблицаРелизов КАК ТаблицаРелизов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(РС_ВерсииКонфигураций.Ссылка, НЕОПРЕДЕЛЕНО) КАК СсылкаНаВерсию,
		|	ТЗ_ТаблицаВерсий.Версия КАК Наименование,
		|	ТЗ_ТаблицаВерсий.ДатаВыхода КАК ДатаВыхода,
		|	ТЗ_ТаблицаВерсий.СсылкаНаСтраницуВерсии КАК СтраницаНаСайтеРелизов
		|ИЗ
		|	ТЗ_ТаблицаВерсий КАК ТЗ_ТаблицаВерсий
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РС_ВерсииКонфигураций КАК РС_ВерсииКонфигураций
		|		ПО ТЗ_ТаблицаВерсий.Версия = РС_ВерсииКонфигураций.Наименование
		|			И (РС_ВерсииКонфигураций.Владелец = &Конфигурация)";
	
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	Запрос.УстановитьПараметр("ТаблицаРелизов", ТаблицаРелизов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Сч = 0;
	Пока Выборка.Следующий() Цикл
		
		ПроцентВыполнения = Формат( 100 * Сч / Выборка.Количество(), "ЧДЦ=2");
		ДлительныеОперации.СообщитьПрогресс(ПроцентВыполнения, "Заполнение элементов справочника версий (2/3)");
		Сч = Сч + 1;
		
		Если Выборка.СсылкаНаВерсию = Неопределено Тогда
			обВерсияКонфигурации = Справочники.РС_ВерсииКонфигураций.СоздатьЭлемент();
		Иначе
			обВерсияКонфигурации = Выборка.СсылкаНаВерсию.ПолучитьОбъект();
		КонецЕсли;
		
		обВерсияКонфигурации.Владелец = Конфигурация;
		
		ЗаполнитьЗначенияСвойств(обВерсияКонфигурации, Выборка);
		
		обВерсияКонфигурации.ДатаВыхода = РаботаСДатамиКлиентСервер.СтрокаВДату("dd.MM.yy", Выборка.ДатаВыхода);
		
		Если ПустаяСтрока(обВерсияКонфигурации.Описание) Тогда
			обВерсияКонфигурации.Описание = ПолучитьОписаниеВерсии(Конфигурация, 
													обВерсияКонфигурации.СтраницаНаСайтеРелизов, 
													ИдентификаторСессии);
		КонецЕсли;
												
		обВерсияКонфигурации.Записать();
		
	КонецЦикла;

	
КонецПроцедуры

Функция ПолучитьОписаниеВерсии(Конфигурация, СтраницаНаСайтеРелизов, ИдентификаторСессии)
	
	Результат = ПолучитьРезультатЗапроса(Конфигурация, СтраницаНаСайтеРелизов, ИдентификаторСессии);
	
	ТелоРезультата = Результат.ПолучитьТелоКакСтроку();
	
	Построитель = Новый ПостроительDOM;
	ЧтениеHTML  = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(ТелоРезультата);
	ДокументHTML = Построитель.Прочитать(ЧтениеHTML);
	
	СписокЭлементов = ДокументHTML.ПолучитьЭлементыПоИмени("br");
	
	Если СписокЭлементов.Количество() = 0
		ИЛИ СписокЭлементов[0].СледующийСоседний = Неопределено Тогда
		Возврат "Нет дополнительной информации";
	КонецЕсли;
	
	ОписаниеВерсии = СписокЭлементов[0].СледующийСоседний.ТекстовоеСодержимое;
	
	ОписаниеВерсии = СтрЗаменить(ОписаниеВерсии, Символы.Таб, " ");
	
	МассивСтрок = СтрРазделить(ОписаниеВерсии, Символы.ПС, Ложь); //Удаляем пустые строки.
	ОписаниеВерсии = СтрСоединить(МассивСтрок, Символы.ПС);
	
	МассивСтрок = СтрРазделить(ОписаниеВерсии, " ", Ложь); //Удаляем кучу пробелов между разными шрифтами.
	ОписаниеВерсии = СтрСоединить(МассивСтрок, " ");
	
	ОписаниеВерсии = СтрЗаменить(ОписаниеВерсии, "" + Символы.ПС + " " + Символы.ПС, Символы.ПС); //Чистим всякую гадость
	ОписаниеВерсии = СтрЗаменить(ОписаниеВерсии, "" + Символы.ПС + " ", Символы.ПС);
		
	ОписаниеВерсии = СокрЛП(ОписаниеВерсии);
	
	Возврат ОписаниеВерсии;
	
КонецФункции

Функция ПолучитьРезультатЗапроса(Конфигурация, СтраницаНаСайтеРелизов, ИдентификаторСессии)

	URI = HTTPСервисы.СтруктураURI(Конфигурация.СтраницаНаСайтеРелизов);
	
	Соединение = Новый HTTPСоединение(
        URI.Хост, // сервер (хост)
        URI.Порт, // порт, по умолчанию для http используется 80, для https 443
        , // пользователь для доступа к серверу (если он есть)
        , // пароль для доступа к серверу (если он есть)
        , // здесь указывается прокси, если он есть
        , // таймаут в секундах, 0 или пусто - не устанавливать
       Новый ЗащищенноеСоединениеOpenSSL()
    );

    Заголовки = Новый Соответствие;    
    Заголовки.Вставить("Cookie", ИдентификаторСессии);    
 
    Запрос = Новый HTTPЗапрос(СтраницаНаСайтеРелизов, Заголовки);
    Результат = Соединение.Получить(Запрос);
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьСписокВозможныхПереходов(ТаблицаРелизов, Конфигурация)
	
	ТаблицаСсылокВерсий = ПолучитьТаблицуСсылокВерсий(Конфигурация);
	
	НаборЗаписейПереходовВерсий = РегистрыСведений.РС_ПереходыВерсийКонфигураций.СоздатьНаборЗаписей();
	
	НаборЗаписейПереходовВерсий.Отбор.Конфигурация.Установить(Конфигурация);
	
	Сч = 0;
	Для каждого СтрокаРелиза Из ТаблицаРелизов Цикл
		
		ПроцентВыполнения = Формат( 100 * Сч / ТаблицаРелизов.Количество(), "ЧДЦ=2");
		ДлительныеОперации.СообщитьПрогресс(ПроцентВыполнения, "Заполнение таблицы перехода между версиями (3/3)");
		Сч = Сч + 1;
		
		НайденнаяСсылкаНовойВерсии = ТаблицаСсылокВерсий.Найти(СокрЛП(СтрокаРелиза.Версия), "Наименование");
		
		Если НайденнаяСсылкаНовойВерсии = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ВозможныеПереходы = СтрРазделить(СтрокаРелиза.ВерсииПерехода, ",", Ложь);
		
		Для каждого СтараяВерсия Из ВозможныеПереходы Цикл
			
			НайденнаяСсылкаСтаройВерсии = ТаблицаСсылокВерсий.Найти(СокрЛП(СтараяВерсия), "Наименование");
			
			НоваяЗапись = НаборЗаписейПереходовВерсий.Добавить();
			НоваяЗапись.Конфигурация = Конфигурация;
			НоваяЗапись.НоваяВерсия = НайденнаяСсылкаНовойВерсии.Ссылка;
			НоваяЗапись.СтараяВерсия = ?(НайденнаяСсылкаСтаройВерсии <> Неопределено, НайденнаяСсылкаСтаройВерсии.Ссылка, СокрЛП(СтараяВерсия));
			
		КонецЦикла;
		
	КонецЦикла;
	
	НаборЗаписейПереходовВерсий.Записать();
	
КонецПроцедуры

Функция ПолучитьТаблицуСсылокВерсий(Конфигурация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РС_ВерсииКонфигураций.Наименование КАК Наименование,
		|	РС_ВерсииКонфигураций.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.РС_ВерсииКонфигураций КАК РС_ВерсииКонфигураций
		|ГДЕ
		|	РС_ВерсииКонфигураций.Владелец = &Конфигурация
		|	И НЕ РС_ВерсииКонфигураций.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции







