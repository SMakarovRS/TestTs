
#Область ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
		
	// Установка значения реквизита АдресКартинки.
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбновитьИзображение();
	КонецЕсли;	

	УстановитьВидимостьИДоступность();
	
	// Если новый объект.
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		Объект.СтавкаНДС = УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекущийПользователь,
			"ОсновнаяСтавкаНДС");
		
		Если ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
			// Добавляем характеристики
			СЛС.ЗаполнитьХарактеристикиПоВидуНоменклатуры(Объект);
		КонецЕсли;
		
	КонецЕсли;
	
	СЛС.ВывестиХарактеристики(Объект, ЭтаФорма);	
		
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
		
	ОповеститьПодбор = Ложь;	
	ЭлементМодифицирован = Ложь;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
	
	ЗаполнитьДокументы();
	
	ИзменитьЭлементОтбораСписка(Штрихкоды, "Номенклатура", Объект.Ссылка, Истина);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
// Процедура обработчик события ОбработкаОповещения.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// Поменяли настройки в виде номенклатуры
	Если ИмяСобытия = "ЗаписьВидаНоменклатуры" Тогда
		
		Если Источник = Объект.ВидНоменклатуры Тогда
			УстановитьВидимостьИДоступность();
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Запись_Файл" И Параметр.Свойство("ВладелецФайла") Тогда
		
		Если Параметр.ВладелецФайла = Объект.Ссылка Тогда
			Модифицированность = Истина;
			
			СсылкаНаФайл = "";
			Если ТипЗнч(Источник) = Тип("Массив") Тогда
				Если Источник.Количество()>0 Тогда
					СсылкаНаФайл = Источник[0];
				КонецЕсли;
			Иначе
				СсылкаНаФайл = Источник;
			КонецЕсли;
			
			Если ВыборИзображения Тогда
				Объект.ФайлКартинки = СсылкаНаФайл;
				АдресКартинки = НавигационнаяСсылкаКартинки(Объект.ФайлКартинки, ЭтотОбъект.УникальныйИдентификатор);
				#Если ВебКлиент Тогда
				ВыборИзображения = Ложь;
				#КонецЕсли
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Справочник.Номенклатура.УстановкаКартинкиПоУмолчанию" Тогда
		
		ОбновитьИзображение();
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаОповещения()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ОбновитьИзображение();
	
КонецПроцедуры

&НаСервере
// Процедура обработчик события ПередЗаписьюНаСервере.
//
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗаписатьХарактеристики();
			
	Если Модифицированность Тогда
		ЭлементМодифицирован = Истина;	
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписьюНаСервере()

&НаСервере
// Процедура обработчик события ПослеЗаписиНаСервере.
//
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	ЗаполнитьДокументы();
	
	ИзменитьЭлементОтбораСписка(Штрихкоды, "Номенклатура", Объект.Ссылка, Истина);
	
	Если ЭлементМодифицирован Тогда
		ОповеститьПодбор = Истина;
		ЭлементМодифицирован = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры // ПослеЗаписиНаСервере()

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события ПередЗакрытием формы.
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ОповеститьПодбор 
		И ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("УправляемаяФорма")
		И ЭтаФорма.ВладелецФормы.ИмяФормы = "ОбщаяФорма.ФормаПодбора" Тогда
		Оповестить("ОбновитьПодбор", Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСФайламиКлиент.ПоказатьПодтверждениеЗакрытияФормыСФайлами(ЭтотОбъект, Отказ, Ложь, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Обновить_Изображение",,Объект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ТипНоменклатуры.
//
Процедура ТипНоменклатурыПриИзменении(Элемент)
				
	УстановитьВидимостьИДоступность(Истина);
		
КонецПроцедуры // ТипНоменклатурыПриИзменении()

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаблокироватьДанныеФормыДляРедактирования();
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда
		Результат = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ВидНоменклатурыПриИзмененииЗавершение", ЭтотОбъект),
			НСтр("ru = 'Элемент не записан. Для продолжения необходима его запись. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
			
        Возврат;
	КонецЕсли;
	
	ВидНоменклатурыПриИзмененииФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Результат = РезультатВопроса;
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    ЭтаФорма.Записать();
    
    ВидНоменклатурыПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыПриИзмененииФрагмент()
    
    ЗаполнитьХарактеристикиПоВидуНоменклатурыНаСервере();
    ОбновитьЭлементыДополнительныхРеквизитов();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросДобавитьИзображение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	Иначе
		ДобавитьИзображениеДействиеПослеДобавления();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	
	Объект.ФайлКартинки = ПредопределенноеЗначение("Справочник.НоменклатураПрисоединенныеФайлы.ПустаяСсылка");
	АдресКартинки = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	ПросмотретьПрисоединенныйФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзображение(Команда)
	
	ОчиститьСообщения();
	Если ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
		РаботаСФайламиКлиент.ОткрытьФормуФайла(Объект.ФайлКартинки);
	Иначе
		ТекстСообщения = НСтр("ru='Отсутствует изображение для редактирования'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзображениеИзПрисоединенныхФайлов(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросДобавитьИзображение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	Иначе
		СтруктураПараметрыВыбора =
			Новый Структура("ВладелецФайла, ЗакрыватьПриВыборе, РежимВыбора", Объект.Ссылка, Истина, Истина);
		ОткрытьФорму(
			"Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
			СтруктураПараметрыВыбора,,,,,
			Новый ОписаниеОповещения("ВыбратьКартинкуИзПрисоединенныхФайловЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайловЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат) Тогда
		Объект.ФайлКартинки = Результат;
		АдресКартинки = НавигационнаяСсылкаКартинки(Объект.ФайлКартинки, ЭтотОбъект.УникальныйИдентификатор)
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КартинкаИзИнтернета(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("КартинкаИзИнтернетаЗавершение",ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, 
			НСтр("ru = 'Перед установкой изображения номенклатура будет записана. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;	
	ВыбратьПервуюКартинку();
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаИзИнтернетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	Если Записать() Тогда
		ВыбратьПервуюКартинку();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Подсказка(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Заголовок", "Характеристики");
	ПараметрыОткрытия.Вставить("КлючПодсказки", "Справочники_Характеристики");
	ОткрытьФорму("Обработка.МенеджерПодсказок.Форма", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьХарактеристикиПоВидуНоменклатуры(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьХарактеристикиПоВидуНоменклатурыЗавершение", ЭтаФорма);
		Режим = РежимДиалогаВопрос.ДаНет;
		ПоказатьВопрос(ОписаниеОповещения, 
			НСтр("ru = 'Элемент еще не записан. Для продолжения необходимо его записать. Записать элемент?'"), Режим);
		Возврат;
	КонецЕсли;
		
	ЗаполнитьХарактеристикиПоВидуНоменклатурыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьХарактеристикиПоВидуНоменклатурыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Записать();	
	ЗаполнитьХарактеристикиПоВидуНоменклатурыНаСервере();
	
КонецПроцедуры	

&НаКлиенте
Процедура ДобавитьХарактеристику(Команда)
	
	ВидХарактеристики = Неопределено;
	ОткрытьФорму("ПланВидовХарактеристик.ВидыХарактеристик.ФормаВыбора",,,,,,
		Новый ОписаниеОповещения("ДобавитьХарактеристикуЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьХарактеристику(Команда)
	
	// Выберем удаляемый вид.
	СписокВидов = Новый СписокЗначений;
	Для Каждого ОписаниеХарактеристики Из Характеристики Цикл
		
		ЭлементСпискаВидов               = СписокВидов.Добавить();
		ЭлементСпискаВидов.Значение      = ОписаниеХарактеристики.ПолучитьИдентификатор();
		ЭлементСпискаВидов.Представление = Строка(ОписаниеХарактеристики.ВидХарактеристики);
		
	КонецЦикла;
	ВыбранныйЭлемент = Неопределено;

	СписокВидов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("УдалитьХарактеристикуЗавершение", ЭтотОбъект),
		НСтр("ru = 'Удалить характеристику'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзИнтернета(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо записать элемент'"));
		Возврат;
	КонецЕсли;
	
	ВнешняяОбработка = ВнешняяОбработкаПоискаКартинок();
	Если ВнешняяОбработка = Неопределено Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ВыборИзИнтернетаЗавершение", ЭтотОбъект),
			НСтр("ru = 'Для поиска используется внешняя обработка ""Установка картинок из интернета для товаров (номенклатуры) в 1С"".
                  |Вы можете ее приобрести отдельно. Возможно она пригодиться вашей организации не только в нашей конфигурации.
				  |Она может работать с УТ 10.3, УТ 11, БП 3.0, УНФ, КА, Розница и т.д.
                  |Хотите посмотреть что она умеет?'"), РежимДиалогаВопрос.ДаНет, 20, КодВозвратаДиалога.Да);
	Иначе
		
		ВыполняемаяКоманда = Новый Структура(
			"Ссылка, Представление,
			|Идентификатор, ВариантЗапуска, ПоказыватьОповещение, 
			|Модификатор, ОбъектыНазначения, ЭтоОтчет, Вид");
		//ЗаполнитьЗначенияСвойств(ВыполняемаяКоманда, СтрокаТаблицыКоманд);
		ВыполняемаяКоманда.Ссылка = ВнешняяОбработка;
		ВыполняемаяКоманда.Вид = ПредопределенноеЗначение("Перечисление.ВидыДополнительныхОтчетовИОбработок.ДополнительнаяОбработка");
		ВыполняемаяКоманда.ЭтоОтчет = Ложь;
		МассивНазначения = Новый Массив;
		МассивНазначения.Добавить(Объект.Ссылка);
		ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьОткрытиеФормыОбработки(ВыполняемаяКоманда, ЭтотОбъект, МассивНазначения);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзИнтернетаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОткрытьСтраницуОбработкаПоискаКартинок();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область БСП

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено,
	СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект,, Истина);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервереБезКонтекста
Функция ПолучитьНавигационнуюСсылкуКартинки(ФайлКартинки, ИдентификаторФормы)
	
	Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, 
		Новый Структура("ИдентификаторФормы", ИдентификаторФормы)).СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

&НаСервере
// Процедура устанавливает доступность элементов формы.
//
Процедура УстановитьВидимостьИДоступность(ПриИзмененииТипаНоменклатуры = Ложь)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(Характеристики.ВидХарактеристики) КАК КоличествоХарактеристик
		|ИЗ
		|	РегистрСведений.Характеристики КАК Характеристики
		|ГДЕ
		|	Характеристики.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Элементы.ГруппаХарактеристики.Заголовок = "Характеристики";
	Если Выборка.Следующий() Тогда
		Если Выборка.КоличествоХарактеристик > 0 Тогда
			Элементы.ГруппаХарактеристики.Заголовок = Элементы.ГруппаХарактеристики.Заголовок 
				+ " (" + Выборка.КоличествоХарактеристик + ")";
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		Элементы.ГруппаДокументы.Видимость = НЕ Объект.ВидНоменклатуры.ВестиУчетПоКарточкамНоменклатуры;
		Элементы.ГруппаШтрихкоды.Видимость = Объект.ВидНоменклатуры.МожетИметьШтрихкод;
		Элементы.ГруппаОКОФ.Видимость 	   = Объект.ВидНоменклатуры.МожетИметьКодОКОФ;
	Иначе
		Элементы.ГруппаДокументы.Видимость = Ложь;
		Элементы.ГруппаШтрихкоды.Видимость = Ложь;
		Элементы.ГруппаОКОФ.Видимость	   = Ложь;
	КонецЕсли;
	
	Если Элементы.ГруппаШтрихкоды.Видимость Тогда
		Запрос = Новый Запрос();
		Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(ШтрихкодыНоменклатуры.Штрихкод) КАК КоличествоШтрихкодов
			|ИЗ
			|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
			|ГДЕ
			|	ШтрихкодыНоменклатуры.Номенклатура = &Объект";
		
		Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Элементы.ГруппаШтрихкоды.Заголовок = "Штрихкоды";
		Если Выборка.Следующий() Тогда
			Если Выборка.КоличествоШтрихкодов > 0 Тогда
				Элементы.ГруппаШтрихкоды.Заголовок = Элементы.ГруппаШтрихкоды.Заголовок 
					+ " (" + Выборка.КоличествоШтрихкодов + ")";
			КонецЕсли;
		КонецЕсли;			
	КонецЕсли;
	
	Элементы.КомандыХарактеристик.Доступность		= НЕ Объект.Ссылка.Пустая();
	Элементы.ДекорацияХарактеристик.Видимость		= НЕ Элементы.КомандыХарактеристик.Доступность;
	
КонецПроцедуры // УстановитьВидимостьИДоступность()

&НаКлиенте
Процедура ВыбратьПервуюКартинку()
	
	Если ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПервуюКартинкуЗавершение",ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения,
			НСтр("ru = 'Текущее изображение будет заменено на первое найденное в интернете. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет);
	Иначе
		УстановитьПервуюКартинкуИзИнтернета();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПервуюКартинкуИзИнтернета()
	
	ПараметрыПоиска 	= Объект.Наименование;
	КоличествоКартинок 	= 1;
	НачальнаяКартинка 	= 0;
	
	Форма 				= ПолучитьФорму("Обработка.ПоискКартинок.Форма.Форма");	
	Результаты 			= Форма.НайтиКартинкиКлиентСервер(ПараметрыПоиска, КоличествоКартинок, НачальнаяКартинка, Ложь);	
	
	Если Результаты <> Неопределено И Результаты.Количество() > 0 Тогда
		СсылкаВоВременномХранилище 	= ПоместитьВоВременноеХранилище(Результаты[0].Картинка.ПолучитьДвоичныеДанные());
		ЗаписатьКартинку(СсылкаВоВременномХранилище, Результаты[0].Ссылка);
		ОбновитьИзображение();
		Элементы.АдресКартинки.Обновить();
		УдалитьИзВременногоХранилища(СсылкаВоВременномХранилище);		
	Иначе
		ПоказатьПредупреждение(,
			НСтр("ru = 'Не удалось получить изображение, возможные причины:					
                  |• Нет подключения к Интернету;
                  |• Для серверной ИБ на компьютере сервера отсутствует возможность доступа в Интернет;
                  |• На веб-узле возникли неполадки;
                  |• Брандмауэр или другое промежуточное ПО (антивирусы и т.п.) блокируют попытки программы подключиться к Интернету;
                  |• Подключение к Интернету выполняется через прокси-сервер, но его параметры не заданы или не верно заданы в программе;									  
                  |• Установлен повышенный уровень безопасности в свойствах браузера.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПервуюКартинкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	УстановитьПервуюКартинкуИзИнтернета();
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыбратьИзСпискаКартинок()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьИзСпискаКартинокФрагмент",ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения,
			НСтр("ru = 'Перед установкой изображения номенклатура будет записана. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;	
	ВыбратьИзСпискаКартинокФрагментЗавершение();
	
КонецПроцедуры
		
&НаКлиенте
Процедура ВыбратьИзСпискаКартинокФрагмент(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если Записать() Тогда
		ВыбратьИзСпискаКартинокФрагментЗавершение();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзСпискаКартинокФрагментЗавершение()
	
	Состояние(НСтр("ru = 'Подождите. Идет поиск картинок...'"));
	Структура = Новый Структура();
	Структура.Вставить("ПараметрыПоиска", Объект.Наименование);
	ОткрытьФорму("Обработка.ПоискКартинок.Форма.Форма", Структура, ЭтаФорма,,,,
		Новый ОписаниеОповещения("ВыбратьИзСпискаКартинокЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);		
	
КонецПроцедуры
		      
&НаСервере
Процедура ОбновитьИзображение()
	
	АдресКартинки = "";
	Если НЕ Объект.ФайлКартинки.Пустая() Тогда
		Попытка
			АдресКартинки = НавигационнаяСсылкаКартинки(Объект.ФайлКартинки, ЭтотОбъект.УникальныйИдентификатор);
		Исключение
			СтрокаОшибки = ОписаниеОшибки();
			ОбщегоНазначения.СообщитьПользователю(СтрокаОшибки);
		КонецПопытки;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКартинку(Знач ТекКартинкаИзВременногоХранилища, Знач СсылкаВИнтернете)
	
	ИмяФайла = Сред(СсылкаВИнтернете, СтрНайти(СсылкаВИнтернете, "/", НаправлениеПоиска.СКонца) + 1);	
	Расширение = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла);
	Если ПустаяСтрока(Расширение) Тогда
		Расширение = "png";
	КонецЕсли;
	ИмяБезРасширения = Лев(ИмяФайла, СтрНайти(ИмяФайла, ".", НаправлениеПоиска.СКонца) - 1);
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	НоменклатураПрисоединенныеФайлы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
		|ГДЕ
		|	НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
		|	И НоменклатураПрисоединенныеФайлы.Наименование = &Наименование";
	Запрос.УстановитьПараметр("ВладелецФайла", Объект.Ссылка);
	Запрос.УстановитьПараметр("Наименование", ИмяБезРасширения);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		ПараметрыФайла 						= РаботаСФайлами.ПараметрыДобавленияФайла();
		ПараметрыФайла.ВладелецФайлов 		= Объект.Ссылка;
		ПараметрыФайла.ИмяБезРасширения 	= ИмяБезРасширения;
		ПараметрыФайла.РасширениеБезТочки 	= Расширение;
		Объект.ФайлКартинки 				= РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, ТекКартинкаИзВременногоХранилища);
		Модифицированность 					= Истина;
		
	Иначе
		
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Первая попавшаяся картинка из интернета уже была добавлена ранее'"));
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ХАРАКТЕРИСТИКАМИ
	
&НаКлиенте
Процедура ДобавитьХарактеристикуЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    // Выберем вид характеристики.
    ВидХарактеристики = Результат;
    Если ВидХарактеристики = Неопределено Тогда
        Возврат;
    КонецЕсли;	 
    
    // Проверим наличие.
    Если Характеристики.НайтиСтроки(Новый Структура("ВидХарактеристики", ВидХарактеристики)).Количество() > 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Характеристика уже существует'", "ru"));
        Возврат;
    КонецЕсли;	 
    
    // Добавим вид характеристики на форму.
    ДобавитьХарактеристикуНаСервере(ВидХарактеристики);

КонецПроцедуры

&НаКлиенте
Процедура УдалитьХарактеристикуЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    ВыбранныйЭлемент = Результат;
    
    // Проверим выбор.
    Если ВыбранныйЭлемент = Неопределено Тогда
        Возврат;
    КонецЕсли;	
    
    // Выполним удаление.
    УдалитьХарактеристикуНаСервере(ВыбранныйЭлемент.Значение);

КонецПроцедуры

&НаСервере
Процедура ДобавитьХарактеристикуНаСервере(ВидХарактеристики)
	
	СЛС.ДобавитьХарактеристику(ВидХарактеристики, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьХарактеристикуНаСервере(Знач Идентификатор)
	
	СЛС.УдалитьХарактеристику(Идентификатор, ЭтаФорма);	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьХарактеристики()
	
	СЛС.ЗаписатьХарактеристики(Объект, ЭтаФорма);
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьХарактеристикиПоВидуНоменклатурыНаСервере()
	
	СЛС.ЗаполнитьХарактеристикиПоВидуНоменклатуры(Объект);
	СЛС.ВывестиХарактеристики(Объект, ЭтаФорма);	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

// Удаляет элемент отбора динамического списка.
//
// Параметры:
//	Список  - обрабатываемый динамический список.
//	ИмяПоля - имя поля компоновки, отбор по которому нужно удалить.
//
Процедура УдалитьЭлементОтбораСписка(Список, ИмяПоля)
	
	ЭлементыОтбора = Список.Отбор.Элементы;
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			И ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			ЭлементыОтбора.Удалить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УдалитьЭлементОтбораСписка()

// Устанавливает элемент отбор динамического списка.
//
// Параметры:
//	Список			- обрабатываемый динамический список.
//	ИмяПоля			- имя поля компоновки, отбор по которому нужно установить.
//	ВидСравнения	- вид сравнения отбора, по умолчанию - Равно.
//	ПравоеЗначение 	- значение отбора.
//
Процедура УстановитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение, ВидСравнения = Неопределено)
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных(ИмяПоля);
	ЭлементОтбора.ВидСравнения     = ?(ВидСравнения = Неопределено, ВидСравненияКомпоновкиДанных.Равно, ВидСравнения);
	ЭлементОтбора.Использование    = Истина;
	ЭлементОтбора.ПравоеЗначение   = ПравоеЗначение;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
КонецПроцедуры // УстановитьЭлементОтбораСписка()

// Изменяет элемент отбора динамического списка.
//
// Параметры:
//	Список         - обрабатываемый динамический список.
//	ИмяПоля        - имя поля компоновки, отбор по которому нужно установить.
//	ВидСравнения   - вид сравнения отбора, по умолчанию - Равно.
//	ПравоеЗначение - значение отбора.
//	Установить     - признак необходимости установить отбор.
//
Процедура ИзменитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение = Неопределено, Установить = Ложь, 
	ВидСравнения = Неопределено)
	
	УдалитьЭлементОтбораСписка(Список, ИмяПоля);
	
	Если Установить Тогда
		УстановитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение, ВидСравнения);
	КонецЕсли;
	
КонецПроцедуры // ИзменитьЭлементОтбораСписка()

&НаСервере
Процедура ЗаполнитьДокументы()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Номенклатура.Ссылка
		|ИЗ
		|	КритерийОтбора.Номенклатура(&НоменклатураОбъект) КАК Номенклатура
		|ГДЕ
		|	&ЭтоНовыйОбъект = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("НоменклатураОбъект", Объект.Ссылка);
	Запрос.УстановитьПараметр("ЭтоНовыйОбъект", Объект.Ссылка.Пустая());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = Документы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи.Ссылка);
		
		Если ВыборкаДетальныеЗаписи.Ссылка.Проведен	Тогда
			НоваяСтрока.ИндексКартинки = 14;
		ИначеЕсли ВыборкаДетальныеЗаписи.Ссылка.ПометкаУдаления Тогда			
			НоваяСтрока.ИндексКартинки = 13;
		Иначе НоваяСтрока.ИндексКартинки = 12;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Документы.Количество() > 0 Тогда
		Документы.Сортировать("Дата Возр");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные 		 = Элементы.Документы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеДействиеПослеДобавления()

	ВыборИзображения = Истина;
	ИдентификаторФайла = Новый УникальныйИдентификатор;
	РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, 
		УправлениеITОтделом8УФКлиентСервер.ПолучитьФильтрИзображений());
	#Если Не ВебКлиент Тогда
	ВыборИзображения = Ложь;
	#КонецЕсли

КонецПроцедуры // ВыполнитьДобавлениеИзображения()

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	СсылкаНаДвоичныеДанныеФайла = РаботаСФайлами.ДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;	
	УстановитьПривилегированныйРежим(Ложь);	
	Возврат СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл()
	
	ОчиститьСообщения();
	Если ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
		ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(Объект.ФайлКартинки, УникальныйИдентификатор);
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
	Иначе
		ТекстСообщения = НСтр("ru='Отсутствует изображение для просмотра'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросДобавитьИзображение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
		ПросмотретьПрисоединенныйФайл();
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДобавитьИзображениеДействиеПослеДобавления();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросДобавитьИзображение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Записать() Тогда
			ДобавитьИзображениеДействиеПослеДобавления();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяВременногоФайлаНаСервере(ИмяВременногоФайла)
	
	Возврат ПолучитьИмяВременногоФайла(ИмяВременногоФайла);
	
КонецФункции	

&НаКлиенте
Процедура ОткрытьСтраницуОбработкаПоискаКартинок()
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://softonit.ru/catalog/products/picut/#detail");
	
КонецПроцедуры

&НаСервере
Функция ВнешняяОбработкаПоискаКартинок()
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДополнительныеОтчетыИОбработки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
		|ГДЕ
		|	ДополнительныеОтчетыИОбработки.Наименование ПОДОБНО &НаименованиеОбработки
		|	И ДополнительныеОтчетыИОбработки.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("НаименованиеОбработки", "%Поиск и загрузка картинок%");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти