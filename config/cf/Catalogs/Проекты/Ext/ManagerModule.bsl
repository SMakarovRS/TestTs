#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Взаимодействия.

// Возвращает контакты.
// 
Функция ПолучитьКонтакты(Ссылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПоКонтактам();
	Запрос.УстановитьПараметр("Предмет", Ссылка);
	
	НачатьТранзакцию();
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Результат = Неопределено;
		Иначе
			Результат = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Контакт");
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

// Возвращает текст запроса по контактам.
//
// Параметры:
//	ТекстВременнаяТаблица - Строка - текст запроса с временной таблицей.
//	Объединить - Булево - объединять эти два запроса или нет.
//
// Возвращаемое значение:
//	Строка - текст получившегося запроса.
//
Функция ТекстЗапросаПоКонтактам(ТекстВременнаяТаблица = "", Объединить = Ложь) Экспорт
	
	ШаблонВыбрать = ?(Объединить,"ВЫБРАТЬ РАЗЛИЧНЫЕ","ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ");
	
	ТекстЗапроса = "
	|%ШаблонВыбрать%
	|	Проекты.ОтветственныйЗаПроект КАК Контакт " + ТекстВременнаяТаблица + "
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Предмет
	|	И (НЕ Проекты.ОтветственныйЗаПроект = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ШаблонВыбрать%", ШаблонВыбрать);
	
	Если Объединить Тогда
		
		ТекстЗапроса = "
		| ОБЪЕДИНИТЬ ВСЕ
		|" + ТекстЗапроса;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Устанавливает оформление в зависимости от переданной темы.
//
// Параметры:
//	ИмяТемы - Строка - имя темы оформления.
//
Процедура УстановитьОформлениеЦветом(Знач ИмяТемы = "") Экспорт
			
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Проекты.Ссылка КАК Объект,
		|	Проекты.Наименование КАК Наименование,
		|	Проекты.ЦветФона КАК ЦветФона,
		|	Проекты.ЦветТекста КАК ЦветТекста,
		|	Проекты.Картинка КАК Картинка
		|ИЗ
		|	Справочник.Проекты КАК Проекты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка			
			Объект 			= Выборка.Объект.ПолучитьОбъект();
			ЗаполнитьЗначенияСвойств(Объект, Выборка);		
			
			// Устанавливаем цвета.
			ЦветаТемы					= ПолучитьЦветаТемы(Выборка.Объект, ИмяТемы);
			Если ЦветаТемы = Неопределено Тогда
				ЦветаТемы = Цвета(WebЦвета.Белый, WebЦвета.Черный);
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Объект, ЦветаТемы, "ЦветФона, ЦветТекста"); 
			Если Выборка.Картинка = Неопределено Тогда
				Объект.Картинка = Неопределено;
			Иначе
				Объект.Картинка = Новый ХранилищеЗначения(Выборка.Картинка.Получить());
			КонецЕсли;
					
			Объект.Записать();
			ЗафиксироватьТранзакцию();
		Исключение
		    ОтменитьТранзакцию();
		КонецПопытки;
		
	КонецЦикла;

	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#Область ПравилаСобытий

// Функция - Все условия правил событий для объекта.
// 
// Возвращаемое значение:
//  Соответствие - соответствие с условиями.
//
Функция УсловияПравилаСобытий() Экспорт
	
	СоответствиеИзменениеОбъекта     = Новый Соответствие;	
	СоответствиеПериодическоеСобытие = Новый Соответствие;
	
	СоответствиеРасчетМетрик = Новый Соответствие;
	СоответствиеРасчетМетрик.Вставить("ПроектыРасчетМетрикЗаписьЭлемента", НСтр("ru = 'Запись элемента'"));

	Соответствие = Новый Соответствие;
	Соответствие.Вставить("СоответствиеИзменениеОбъекта", 	  СоответствиеИзменениеОбъекта);
	Соответствие.Вставить("СоответствиеПериодическоеСобытие", СоответствиеПериодическоеСобытие);
	Соответствие.Вставить("СоответствиеРасчетМетрик", 		  СоответствиеРасчетМетрик);
	
	Возврат Соответствие;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Цвета(Знач ЦветФона, Знач ЦветТекста)
	
	Возврат Новый Структура("ЦветФона, ЦветТекста",
		РаботаСЦветомКлиентСервер.ЦветВHex(РаботаСЦветомКлиентСервер.АбсолютныйЦвет(ЦветФона)),
		РаботаСЦветомКлиентСервер.ЦветВHex(РаботаСЦветомКлиентСервер.АбсолютныйЦвет(ЦветТекста)));
	
КонецФункции

Функция ПолучитьЦветаТемы(Знач ОбъектСсылка, Знач ИмяТемы)
	
	Если ПустаяСтрока(ИмяТемы) Тогда
		
		#Область СтандартныеЦвета
						
		Возврат Цвета(WebЦвета.Белый, WebЦвета.Черный);
				
		#КонецОбласти
		
	ИначеЕсли ИмяТемы = "ПастельныеТона" Тогда
		
		#Область ПастельныеТона
		
		Возврат Цвета(WebЦвета.Белый, Новый Цвет(123, 104, 238));
		
		#КонецОбласти
		
	ИначеЕсли ИмяТемы = "СовременнаяТема" Тогда
		
		#Область СовременнаяТема
		
		Возврат Цвета(WebЦвета.Белый, Новый Цвет(0, 130, 114));
		
		#КонецОбласти
				
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецЕсли