
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.Видимость 				= Истина;
		Объект.ИерархическийВид 		= Истина;
		Объект.ВключаяПодчиненныеДела 	= Ложь;
		Объект.ВключаяРодительскиеДела 	= Ложь;
        Объект.ПоказыватьСчетчикГруппировки     = Истина;
        Объект.ПоказыватьНазваниеГруппировки    = Истина;
		Объект.Автор					= Пользователи.ТекущийПользователь();
		
		Таблица = Справочники.ВидыДел.ТаблицаСтолбцыПоУмолчанию();
		Для Каждого Строки Из Таблица Цикл
			ЗаполнитьЗначенияСвойств(Объект.Столбцы.Добавить(), Строки);
		КонецЦикла;
				
	КонецЕсли;
	
	ЗаполнитьСтолбцы();
	ОбновитьВидимостьДоступность();
	ОбновитьИзображение();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменениеВидаДел",,Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикСобытийЭлементовШапки

&НаКлиенте
Процедура ИерархияПриИзменении(Элемент)
	
	ОбновитьВидимостьДоступность()
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСчетчикПриИзменении(Элемент)
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура СтолбцыПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Столбцы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка 		= Ложь;
	ТекущиеДанные.Имя 			= ВыбранноеЗначение;
	ТекущиеДанные.Представление = ПредставлениеВыбранногоРеквизита(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкиПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		
	ТекущиеДанные = Элементы.Группировки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка 		= Ложь;
	ТекущиеДанные.Имя 			= ВыбранноеЗначение;
	ТекущиеДанные.Представление = ПредставлениеВыбранногоРеквизита(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура СортировкаПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Сортировка.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка 		= Ложь;
	ТекущиеДанные.Имя 			= ВыбранноеЗначение;
	ТекущиеДанные.Представление = ПредставлениеВыбранногоРеквизита(ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	ОчиститьИзображениеНаСервере();	
	ОбновитьИзображение();
	Элементы.АдресКартинки.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзображениеИзФайла(Команда)
	
	ВыбратьКартинкуИзФайла();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзображениеИзНабора(Команда)
	
	Результат = Неопределено;	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораИзображенияИзНабора",,,,,,
		Новый ОписаниеОповещения("ВыбратьИзображениеИзНабораЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	
	ТолькоПросмотр = Объект.Автор <> Пользователи.ТекущийПользователь();
	Элементы.ВключаяПодчиненныеДела.Видимость 	= Объект.ИерархическийВид;
	Элементы.ВключаяРодительскиеДела.Видимость 	= Объект.ИерархическийВид;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтолбцы()
	
	Элементы.ГруппировкиПредставление.СписокВыбора.Очистить();	
	Элементы.СтолбцыПредставление.СписокВыбора.Очистить();	
	СписокСтолбцов = УправлениеДелами.СписокСтолбцов();
	
	Для Каждого Элемент Из СписокСтолбцов Цикл
		
		Элементы.СтолбцыПредставление.СписокВыбора.Добавить(Элемент.Значение, Элемент.Представление);
		Элементы.ГруппировкиПредставление.СписокВыбора.Добавить(Элемент.Значение, Элемент.Представление);
		Элементы.СортировкаПредставление.СписокВыбора.Добавить(Элемент.Значение, Элемент.Представление);
		
	КонецЦикла;	

КонецПроцедуры

&НаСервере
Функция ПредставлениеВыбранногоРеквизита(Знач ИмяРеквизита)
	
	Исключения = УправлениеДелами.МассивСтолбцовИсключений();
	Для Каждого Реквизит Из Метаданные.Справочники.Дела.Реквизиты Цикл
		
		Если Исключения.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИмяРеквизита = Реквизит.Имя Тогда
			
			Возврат Реквизит.Синоним; 
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИмяРеквизита;
	
КонецФункции

&НаСервере
Процедура ОчиститьИзображениеНаСервере()
	
	ЭлементСправочника = РеквизитФормыВЗначение("Объект");
	ЭлементСправочника.Картинка = Неопределено;
	ЭлементСправочника.Записать();
	Модифицированность = Ложь;
	ЗначениеВРеквизитФормы(ЭлементСправочника, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИзображение()
	АдресКартинки = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Картинка")
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзФайла()
	
	Перем ВыбранноеИмя;
	Перем АдресВременногоХранилища;

	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		Режим = РежимДиалогаВыбораФайла.Открытие;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		Фильтр = УправлениеITОтделом8УФКлиентСервер.ПолучитьФильтрИзображений();
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите изображение'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранноеИмя = ДиалогОткрытияФайла.ПолноеИмяФайла;
			НачатьПомещениеФайла(Новый ОписаниеОповещения("ВыбратьКартинкуИзФайлаЗавершение", ЭтотОбъект,
				Новый Структура("АдресВременногоХранилища", АдресВременногоХранилища)),
					АдресВременногоХранилища, ВыбранноеИмя, Ложь,);
		КонецЕсли;
	Иначе		
		ПоказатьПредупреждение(,
			НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзФайлаЗавершение(Результат, Адрес, ВыбранноеИмя, ДополнительныеПараметры) Экспорт
    
    Если Результат Тогда
        ПоместитьФайлОбъекта(Адрес);
        Элементы.АдресКартинки.Обновить();			
		ОбновитьИзображение();
    КонецЕсли;

КонецПроцедуры

// Процедура извлекает данные объекта из временного хранилища, 
// производит модификацию элемента справочника и записывает его.
// 
// Параметры: 
//  АдресВременногоХранилища - Строка - адрес временного хранилища. 
// 
// Возвращаемое значение: 
//  Нет.
&НаСервере
Процедура ПоместитьФайлОбъекта(АдресВременногоХранилища)
	
	ЭлементСправочника = РеквизитФормыВЗначение("Объект");
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ЭлементСправочника.Картинка = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());
	ЭлементСправочника.Записать();
	Модифицированность = Ложь;
	УдалитьИзВременногоХранилища(АдресВременногоХранилища);
	ЗначениеВРеквизитФормы(ЭлементСправочника, "Объект");     
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьКартинкуИзФайла();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьИзображениеПоСостояниюНаСервере()
	
	ЭлементСправочника = РеквизитФормыВЗначение("Объект");
	Если ЗначениеЗаполнено(Объект.СостояниеЭтапаСтатуса) Тогда
		ЭлементСправочника.НавСсылка = Объект.СостояниеСтатуса.НавСсылка;
		ЭлементСправочника.Картинка = Объект.СостояниеСтатуса.Картинка;
	Иначе
		ЭлементСправочника.НавСсылка = "";
		ЭлементСправочника.Картинка = Неопределено;
	КонецЕсли;	
	ЭлементСправочника.Записать();
	Модифицированность = Ложь;
	ЗначениеВРеквизитФормы(ЭлементСправочника, "Объект");     
	
	АдресКартинки = ЭлементСправочника.НавСсылка;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзображениеИзНабораЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если Результат <> Неопределено Тогда
        Адрес = ПоместитьВоВременноеХранилище(Результат);
        ПоместитьФайлОбъекта(Адрес);
        Элементы.АдресКартинки.Обновить();
		ОбновитьИзображение();
    КонецЕсли;

КонецПроцедуры

#КонецОбласти
