
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	//языки
	Для Каждого МетаЯзык Из Метаданные.Языки Цикл
		Элементы.ПользователиЯзык.СписокВыбора.Добавить(МетаЯзык.Имя, МетаЯзык.Синоним);
	КонецЦикла;
	Если Элементы.ПользователиЯзык.СписокВыбора.Количество() = 1 Тогда
		ПользователиЯзык = Элементы.ПользователиЯзык.СписокВыбора[0].Значение;
	КонецЕсли;
	
	// список выбора режимов запуска
	Для каждого Режим Из РежимЗапускаКлиентскогоПриложения Цикл
		ПолноеИмяЗначения 	= ПолучитьПолноеИмяПредопределенногоЗначения(Режим);
		ИмяЗначения 		= Сред(ПолноеИмяЗначения, Найти(ПолноеИмяЗначения, ".") + 1);
		Элементы.ПользователиРежимЗапуска.СписокВыбора.Добавить(ИмяЗначения, Строка(Режим));
	КонецЦикла;
	
	Элементы.ПользователиРежимЗапуска.СписокВыбора.СортироватьПоПредставлению();
	ПользователиРежимЗапуска = РежимЗапускаКлиентскогоПриложения.Авто;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ПрофильИмпортаИзAD", , Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодключениеИспользоватьУчетнуюЗаписьПриИзменении(Элемент)
	Элементы.ГруппаНастройкиУчетнойЗаписи.Доступность = Объект.ПодключениеИспользоватьУчетнуюЗапись;
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицаСоздаватьФизЛицоПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСоздаватьСотрудникаПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииСоздаватьОрганизацииПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура ПользователиСоздаватьПользователейПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура МестаХраненияСоздаватьМестаХраненияПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицаЗагружатьДатуРожденияПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияСоздаватьПодразделенияПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиАутентификация1СПриИзменении(Элемент)
	
	Элементы.ПользователиИмяДомена.Доступность = НЕ Объект.ПользователиАутентификация1С;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиИзменятьРанееСозданныхПриИзменении(Элемент)
	
	Элементы.ПользователиПерезаписыватьПраваПользователей.Доступность = Объект.ПользователиИзменятьРанееСозданных;
	Элементы.ПользователиБлокироватьПользователя.Доступность 		  = Объект.ПользователиИзменятьРанееСозданных;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	Если Модифицированность Или Объект.Ссылка.Пустая() Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьПодключениеПослеВопроса", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Для продолжения необходимо записать профиль. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	ПроверитьПодключениеФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключениеПослеВопроса(Результат, ДополнительныеПараметры)Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.Записать() Тогда
		ПроверитьПодключениеФрагмент();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключениеФрагмент()
	
	#Если ВебКлиент Тогда				
		ПоказатьПредупреждение( , НСтр("ru = 'В режиме ""Веб-клиента"" подключение к AD недоступно.'"));
		Возврат;
	#КонецЕсли
	
	Если Объект.ПодключениеИспользоватьУчетнуюЗапись Тогда	
		Попытка			
			Порт				= ?(ЗначениеЗаполнено(Объект.ПодключениеПорт), СокрЛП(Объект.ПодключениеПорт), "389");			
			КореньДерева		= ?(ЗначениеЗаполнено(Объект.ПодключениеКореньДерева), СокрЛП(Объект.ПодключениеКореньДерева), "");						
			СтрокаПодключения 	= "Provider=ADSDSOObject;User Id=" + Объект.ПодключениеДомен + "\" + Объект.ПодключениеУчетнаяЗапись + ";Password=" + Объект.ПодключениеПароль + ";";			
			conn				= Новый COMОбъект("ADODB.Connection");			
			conn.Open(СтрокаПодключения);						
			Если ЗначениеЗаполнено(КореньДерева) Тогда 			
				LDAPText= "LDAP://" + Объект.ПодключениеКонтроллерДомена + ":" + Порт + "/" + КореньДерева;
				rs 		=  Новый COMОбъект("ADODB.recordset");	
				rs.Open("<" + LDAPText + ">;(objectClass=*);ADsPath, Name, distinguishedName;onelevel", conn, 0, 1);  // source,actconn,cursortyp,locktyp,opt.
			Иначе
				LDAPText= "LDAP://" + Объект.ПодключениеКонтроллерДомена + ":" + Порт;
				rs 		=  Новый COMОбъект("ADODB.recordset");
				rs.Open("<" + LDAPText + ">;(objectClass=domain);ADsPath, Name, distinguishedName;subtree", conn, 0, 1);
			КонецЕсли;			
		Исключение			
			ОШ = ОписаниеОшибки();
			ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Не удалось установить соединение по причине: %1'"), ОШ));
			Возврат;			
		КонецПопытки;		
	Иначе		
		Попытка			
			DSE				= ПолучитьCOMОбъект("LDAP://rootDSE"); // определяем домен, к которому принадлежит компьютер.
			LDAP_DNC		= DSE.Get("defaultNamingContext");     // имя текущего домена.
			LDAPText		= "GC://" + LDAP_DNC; // используем глобальный каталог для поиска.
		Исключение		
			ОШ = ОписаниеОшибки();
			ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Не удалось установить соединение по причине: %1'"), ОШ));
			Возврат;			
		КонецПопытки;		
		conn			= Новый COMОбъект("ADODB.Connection");;
		conn.Provider	= "ADSDSOObject";
		conn.Open("ADs Provider");		
		rs 				=  Новый COMОбъект("ADODB.recordset");
		Попытка			
			rs.Open("<" + LDAPText + ">;(objectClass=domain);ADsPath, Name, distinguishedName;subtree", conn, 0, 1);  // source,actconn,cursortyp,locktyp,opt.
		Исключение			
			ОШ = ОписаниеОшибки();
			ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'Не удалось установить соединение по причине: %1'"), ОШ));
			Возврат;			
		КонецПопытки;
	КонецЕсли;
	
	ПоказатьПредупреждение(, НСтр("ru = 'Соединение успешно установлено'"));
	
	rs.Close();
	rs = Неопределено;
	conn.Close();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ГруппаНастройкиУчетнойЗаписи.Доступность 			= Объект.ПодключениеИспользоватьУчетнуюЗапись;
	Элементы.ГруппаФото.Доступность								= Объект.ФизЛицаСоздаватьФизЛицо;
	Элементы.ГруппаДатаРождения.Доступность						= Объект.ФизЛицаСоздаватьФизЛицо;
	Элементы.ФизЛицаГруппаПоУмолчанию.Доступность				= Объект.ФизЛицаСоздаватьФизЛицо;
	Элементы.СотрудникиСоздаватьДолжности.Доступность			= Объект.СотрудникиСоздаватьСотрудников;
	Элементы.Группа4.Доступность								= Объект.СотрудникиСоздаватьСотрудников;
	Элементы.ОрганизацииСтавкаНДС.Доступность					= Объект.ОрганизацииСоздаватьОрганизации;
	Элементы.ОрганизацииОрганизацияПоУмолчанию.Доступность 		= Объект.ОрганизацииСоздаватьОрганизации;
	Элементы.ГруппаПользователи.Доступность						= Объект.ПользователиСоздаватьПользователей;
	Элементы.Группа5.Доступность								= Объект.МестаХраненияСоздаватьМестаХранения;
	Элементы.Группа6.Доступность								= Объект.МестаХраненияСоздаватьМестаХранения;
	Элементы.ФизЛицаИмяАтрибутаДатаРождения.Доступность 		= Объект.ФизЛицаЗагружатьДатуРождения;
	Элементы.ПодразделенияПодразделениеПоУмолчанию.Доступность  = Объект.ПодразделенияСоздаватьПодразделения;
	Элементы.ПользователиИмяДомена.Доступность					= Не Объект.ПользователиАутентификация1С И Объект.ПользователиСоздаватьПользователей;
	Элементы.ПользователиПерезаписыватьПраваПользователей.Доступность = Объект.ПользователиИзменятьРанееСозданных;
	Элементы.ПользователиБлокироватьПользователя.Доступность 	= Объект.ПользователиИзменятьРанееСозданных;
	
КонецПроцедуры	

#КонецОбласти