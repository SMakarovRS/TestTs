
#Область ОбработчикиМетодов

Функция Put(MCRequest)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") Тогда
		ВызватьИсключение НСтр("ru='Работа с мобильными приложениями выключена.'");
	КонецЕсли;

	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ПодключениеВозможно = 
		ОбменМобильноеПриложениеСервер.ПроверитьВозможностьПодключенияМобильногоПриложения(ТекущийПользователь);

	Если Не ПодключениеВозможно Тогда
		ВызватьИсключение НСтр("ru='Вам не разрешен доступ к программе с использованием мобильного приложения. 
								|Обратитесь к администратору.'");
	КонецЕсли;
	
	МобильныйКлиент = ПланыОбмена.МобильноеПриложение.ПолучитьУзелОбмена(MCRequest.ClientCode, ТекущийПользователь);
	
	Если МобильныйКлиент.ДоступЗапрещен Тогда
		ВызватьИсключение НСтр("ru='Вам не разрешен доступ к программе с данного устройства. 
								|Обратитесь к администратору.'");
	КонецЕсли;	
	
	ТекстОшибкиПроверкиПользователя = 
		ОбменМобильноеПриложениеСервер.ТекстОшибкиПроверкиПользователя(ТекущийПользователь);
		
	Если НЕ ПустаяСтрока(ТекстОшибкиПроверкиПользователя) Тогда
		ВызватьИсключение ТекстОшибкиПроверкиПользователя;
	КонецЕсли;	
	
	ОбменМобильноеПриложениеСервер.ЗаписатьВходящееСообщение(МобильныйКлиент, MCRequest);	
	ОбменМобильноеПриложениеСервер.ЗапуститьФоновоеЗаданиеОбработкиДанных(МобильныйКлиент, 
		"ОбменМобильноеПриложениеСервер.ОбработатьСообщенияИСформироватьПакетОбмена");

// Код для отладки, закомментировать две строки выше.	
//	ИсходящееСообщение = ОбменМобильноеПриложениеСервер.СоздатьНовоеСообщение(МобильныйКлиент);
//	ОбменМобильноеПриложениеСервер.ОбработатьСообщенияИСформироватьПакетОбмена(МобильныйКлиент, ИсходящееСообщение);	
		
	Если Не MCRequest.LastResponseID = "0" Тогда
		Ответ = СобратьОтветКлиенту(МобильныйКлиент, MCRequest.LastResponseID, MCRequest.LastResponsePartIndex);
	Иначе
		Ответ = СоздатьСообщениеОК();
	КонецЕсли;

	Возврат Ответ;
	
КонецФункции

Функция Get(MCRequest)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") Тогда
		ВызватьИсключение НСтр("ru='Работа с мобильными приложениями выключена.'");
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ПодключениеВозможно = 
		ОбменМобильноеПриложениеСервер.ПроверитьВозможностьПодключенияМобильногоПриложения(ТекущийПользователь);
	
	Если Не ПодключениеВозможно Тогда
		ВызватьИсключение НСтр("ru='Вам не разрешен доступ к программе с использованием мобильного приложения. 
								|Обратитесь к администратору.'");
	КонецЕсли;	
	
	МобильныйКлиент = ПланыОбмена.МобильноеПриложение.НайтиПоКоду(MCRequest.ClientCode);
	
	Если МобильныйКлиент.Пустая() Тогда		
		ВызватьИсключение НСтр("ru='При синхронизациия произошла ошибка: выполнено подключение неизвестным устройством.'");		
		
	ИначеЕсли МобильныйКлиент.ДоступЗапрещен Тогда		
		ВызватьИсключение НСтр("ru='Вам не разрешен доступ к программе с данного устройства. 
								|Обратитесь к администратору.'");	
	КонецЕсли;	
	
	ТекстОшибкиПроверкиПользователя = 
		ОбменМобильноеПриложениеСервер.ТекстОшибкиПроверкиПользователя(ТекущийПользователь);
		
	Если НЕ ПустаяСтрока(ТекстОшибкиПроверкиПользователя) Тогда
		ВызватьИсключение ТекстОшибкиПроверкиПользователя;
	КонецЕсли;
	
	Возврат СобратьОтветКлиенту(МобильныйКлиент, MCRequest.LastResponseID, MCRequest.LastResponsePartIndex);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СобратьОтветКлиенту(МобильныйКлиент, ИдентификаторПринятогоСообщения, НомерПринятойЧасти)

	УстановитьПривилегированныйРежим(Истина);

	КодКлиента = МобильныйКлиент.Код;
	Если Не ИдентификаторПринятогоСообщения = Неопределено 
		И Не ИдентификаторПринятогоСообщения = "00000000-0000-0000-0000-000000000000" Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИдентификаторСообщения", Строка(ИдентификаторПринятогоСообщения));
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	СообщенияОбменаМобильноеПриложение.Ссылка КАК Ссылка,
			|	СообщенияОбменаМобильноеПриложение.ДанныеСообщения КАК ДанныеСообщения,
			|	СообщенияОбменаМобильноеПриложение.ДатаСоздания КАК ДатаСоздания
			|ИЗ
			|	Справочник.СообщенияОбменаМобильноеПриложение КАК СообщенияОбменаМобильноеПриложение
			|ГДЕ
			|	СообщенияОбменаМобильноеПриложение.ИдентификаторСообщения = &ИдентификаторСообщения
			|	И НЕ СообщенияОбменаМобильноеПриложение.ПометкаУдаления
			|	И НЕ СообщенияОбменаМобильноеПриложение.Входящее";

		ВыборкаПринятыеСообщения = Запрос.Выполнить().Выбрать();

		Если ВыборкаПринятыеСообщения.Следующий() Тогда

			ПринятоеСообщение             = ВыборкаПринятыеСообщения.Ссылка;
			ПринятоеСообщениеДатаСоздания = ВыборкаПринятыеСообщения.ДатаСоздания;
			Если НомерПринятойЧасти = ВыборкаПринятыеСообщения.ДанныеСообщения.Получить().Количество() Тогда
				ПринятоеСообщениеОбъект = ПринятоеСообщение.ПолучитьОбъект();
				ПринятоеСообщениеОбъект.УстановитьПометкуУдаления(Истина);
				РегистрыСведений.СведенияОСообщенияхОбменаМобильноеПриложение.ЗаписатьДатуПередачиКлиенту(
					ПринятоеСообщение, ТекущаяДатаСеанса());
					
				ИдентификаторПринятогоСообщения = Неопределено;
			КонецЕсли;

		Иначе
			ИдентификаторПринятогоСообщения = Неопределено;
		КонецЕсли;

	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МобильныйКлиент", МобильныйКлиент);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СообщенияОбменаМобильноеПриложение.Ссылка КАК Ссылка,
		|	СообщенияОбменаМобильноеПриложение.ДатаСоздания КАК ДатаСоздания,
		|	СообщенияОбменаМобильноеПриложение.ДанныеСообщения КАК ДанныеСообщения
		|ИЗ
		|	Справочник.СообщенияОбменаМобильноеПриложение КАК СообщенияОбменаМобильноеПриложение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОчередьСообщенийОбменаМобильноеПриложение КАК ОчередьСообщенийОбменаМобильноеПриложение
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиСообщенийОбменаМобильноеПриложение КАК ОчередиСообщенийОбменаМобильноеПриложение
		|			ПО ОчередьСообщенийОбменаМобильноеПриложение.Ссылка = ОчередиСообщенийОбменаМобильноеПриложение.Очередь
		|		ПО СообщенияОбменаМобильноеПриложение.Очередь = ОчередьСообщенийОбменаМобильноеПриложение.Ссылка
		|ГДЕ
		|	ОчередиСообщенийОбменаМобильноеПриложение.МобильныйКлиент = &МобильныйКлиент
		|	И НЕ СообщенияОбменаМобильноеПриложение.ПометкаУдаления
		|	И НЕ СообщенияОбменаМобильноеПриложение.Входящее
		|
		|УПОРЯДОЧИТЬ ПО
		|	СообщенияОбменаМобильноеПриложение.ДатаСоздания";

	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоСообщенийВОчереди = Выборка.Количество();
	СчетчикСообщений = 0;

	Пока Выборка.Следующий() Цикл
		СчетчикСообщений = СчетчикСообщений + 1;
		СообщениеСсылка  = Выборка.Ссылка;
		
		ПроцентГотовности = 
			РегистрыСведений.СтепеньГотовностиСообщенийОбменМобильноеПриложение.ПолучитьПроцентГотовностиСообщения(
				СообщениеСсылка);
				
		СообщениеГотовоКПередаче = Ложь;

		Если ПроцентГотовности < 100 Тогда			
			СтруктураОтбора     = Новый Структура("Наименование", КодКлиента);
			МассивЗаданий       = ФоновыеЗадания.ПолучитьФоновыеЗадания(СтруктураОтбора);
			ЕстьАктивноеЗадание = Ложь;
			Для Каждого ФоновоеЗадание Из МассивЗаданий Цикл
				Если ФоновоеЗадание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
					ЕстьАктивноеЗадание = Истина;
					Попытка
						ФоновоеЗадание.ОжидатьЗавершения(3);						
						ЕстьАктивноеЗадание = Ложь;
					Исключение
					КонецПопытки;
					Прервать;
				КонецЕсли;
			КонецЦикла;	

			Если ЕстьАктивноеЗадание Тогда
				Возврат СоздатьСообщениеЖдите();
			Иначе
				ПроцентГотовности = 
					РегистрыСведений.СтепеньГотовностиСообщенийОбменМобильноеПриложение.ПолучитьПроцентГотовностиСообщения(
						СообщениеСсылка);
						
				Если ПроцентГотовности = 100 Тогда					
					СообщениеГотовоКПередаче = Истина;
					Попытка						
						//@skip-warning
						Объект = СообщениеСсылка.ПолучитьОбъект().Заблокировать();
					Исключение
						Возврат СоздатьСообщениеЖдите();
					КонецПопытки;
				Иначе					
					Попытка
						СообщениеОбъект = СообщениеСсылка.ПолучитьОбъект();
						СообщениеОбъект.УстановитьПометкуУдаления(Истина);
					Исключение
						Возврат СоздатьСообщениеЖдите();
					КонецПопытки;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		Иначе
			СообщениеГотовоКПередаче = Истина;
		КонецЕсли;
		
		Если СообщениеГотовоКПередаче Тогда			
			МассивЧастей = Выборка.ДанныеСообщения.Получить();
			Если МассивЧастей = Неопределено Или ТипЗнч(МассивЧастей) <> Тип("Массив") 
				Или МассивЧастей.Количество() = 0 Тогда				
				СообщениеОбъект = СообщениеСсылка.ПолучитьОбъект();
				СообщениеОбъект.УстановитьПометкуУдаления(Истина);
				Продолжить;
			КонецЕсли;
			КоличествоЧастей = МассивЧастей.Количество();			
			Если ИдентификаторПринятогоСообщения = Неопределено Или ПринятоеСообщение = Неопределено Тогда				
				Часть = МассивЧастей[0].Получить();
				Ответ = ОбменМобильноеПриложениеСервер.СоздатьОбъект("MCResponse");				
				Ответ.ResponseID   = Строка(СообщениеСсылка.ИдентификаторСообщения);
				Ответ.ExchangeData = Base64Строка(Часть);
				Ответ.PartIndex    = 1;
				Ответ.PartCount    = КоличествоЧастей + (КоличествоСообщенийВОчереди - СчетчикСообщений);
				Возврат Ответ;
			Иначе				
				Если Выборка.ДатаСоздания > ПринятоеСообщениеДатаСоздания 
					Или НомерПринятойЧасти > КоличествоЧастей Тогда
					НомерПринятойЧасти = 0;
				КонецЕсли;
				Часть = МассивЧастей[НомерПринятойЧасти].Получить();
				Ответ = ОбменМобильноеПриложениеСервер.СоздатьОбъект("MCResponse");
				Ответ.ExchangeData = Base64Строка(Часть);
				Ответ.ResponseID   = Строка(СообщениеСсылка.ИдентификаторСообщения);
				Ответ.PartIndex    = НомерПринятойЧасти + 1;
				Ответ.PartCount    = (КоличествоЧастей - НомерПринятойЧасти) 
					+ (КоличествоСообщенийВОчереди - СчетчикСообщений);
				Возврат Ответ;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат СоздатьСообщениеОК();

КонецФункции

Функция СоздатьСообщениеОК()

	Ответ = ОбменМобильноеПриложениеСервер.СоздатьОбъект("MCResponse");
	Ответ.ExchangeData = Base64Строка("");
	Ответ.ResponseID   = Строка(Новый УникальныйИдентификатор());
	Ответ.PartCount    = 0;
	Ответ.PartIndex    = 0;

	Возврат Ответ;

КонецФункции

Функция СоздатьСообщениеЖдите()

	Ответ = ОбменМобильноеПриложениеСервер.СоздатьОбъект("MCResponse");
	Ответ.ResponseID   = Строка(Новый УникальныйИдентификатор());
	Ответ.ExchangeData = Base64Строка("");
	Ответ.PartCount    = -1;
	Ответ.PartIndex    = -1;

	Возврат Ответ;

КонецФункции

#КонецОбласти