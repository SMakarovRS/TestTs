
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Параметры.Свойство("ПредметСтатьи", ПредметСтатьи);
	Если Параметры.Свойство("ВсеПредметы") Тогда
		МассивПредметов = Параметры.ВсеПредметы;
		Для Каждого ЭлементМассива Из МассивПредметов Цикл
			ДополнительныйСписокПредметов.Добавить(ЭлементМассива);
		КонецЦикла;	
	КонецЕсли;	
	
	Если ДополнительныйСписокПредметов.Количество() = 0 И ЗначениеЗаполнено(ПредметСтатьи) Тогда
		ДополнительныйСписокПредметов.Добавить(ПредметСтатьи);
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", Пользователи.ТекущийПользователь());	
	ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ;		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Объект", ДополнительныйСписокПредметов, 
		ВидСравненияКомпоновкиДанных.ВСписке, Параметры.Свойство("ПредметСтатьи"));
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "БазаЗнаний_ЗаписьСтатьи" 
		ИЛИ ИмяСобытия = "БазаЗнаний_РедактированиеСтатьи" 
		ИЛИ ИмяСобытия = "БазаЗнаний_ДобавленаСвязаннаяСтатья"Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если ТекущиеДанные.Свойство("ГруппировкаСтроки") Тогда
		ПоказатьЗначение(, ТекущиеДанные.Объект);
	Иначе
		ПоказатьЗначение(, ТекущиеДанные.Статья);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьСтатью(Команда)
	
	ПараметрыФормы = Новый Структура("ПредметСтатьи", ПредметСтатьи);
	ОткрытьФорму("РегистрСведений.СвязьСтатейБазыЗнаний.Форма.ФормаЗаписи", ПараметрыФормы, ЭтотОбъект, , , , , 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСписокСтатей(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПредметСтатьи",      ПредметСтатьи);
	ПараметрыФормы.Вставить("РежимВыбора",        Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	ОткрытьФорму("Справочник.СтатьиБазыЗнаний.Форма.ФормаСписка", ПараметрыФормы, ЭтотОбъект, , , , , 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	
	Оповестить("БазаЗнаний_ДобавленаСвязаннаяСтатья");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	ВозможностьДобавленияСтатей  = УправлениеITОтделом8УФПовтИсп.Право("ДобавлениеИзменениеБазыЗнаний") 
		ИЛИ УправлениеITОтделом8УФПовтИсп.Право("ПолныеПрава");
	Элементы.ФормаДобавитьСтатью.Видимость 		 = ВозможностьДобавленияСтатей;
	Элементы.ФормаДобавитьСписокСтатей.Видимость = ВозможностьДобавленияСтатей;
	
КонецПроцедуры	

#КонецОбласти


