#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныйПрограммныйИнтерфейс

Функция УстановитьСтатусКарточкеНоменклатуры(ПараметрыЗаписи) Экспорт
	
	НаборЗаписей = РегистрыСведений.СтатусыКарточекНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.КарточкаНоменклатуры.Установить(ПараметрыЗаписи.КарточкаНоменклатуры);
	
	Если НЕ УправлениеITОтделом8УФПовтИсп.ДляКарточкиНоменклатурыВедетсяИсторияИзмененияСтатусов(ПараметрыЗаписи.КарточкаНоменклатуры.Владелец) Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
	
	НаборЗаписей.Прочитать();
	
	СтруктураНабора	= Новый Структура;
	СтруктураНабора.Вставить("КарточкаНоменклатуры", ПараметрыЗаписи.КарточкаНоменклатуры);
	СтруктураНабора.Вставить("Статус", 				 ПараметрыЗаписи.Статус);
	
	Если ПараметрыЗаписи.Свойство("МоментВремени") Тогда
    	СтруктураНабора.Вставить("Период", ПараметрыЗаписи.МоментВремени);		
	Иначе	
		СтруктураНабора.Вставить("Период", ТекущаяДатаСеанса());
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("Пользователь") Тогда
		СтруктураНабора.Вставить("Пользователь", ПараметрыЗаписи.Пользователь);
	Иначе
		СтруктураНабора.Вставить("Пользователь", Пользователи.ТекущийПользователь());
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("Комментарий") Тогда
		СтруктураНабора.Вставить("Комментарий", ПараметрыЗаписи.Комментарий);
	КонецЕсли;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяЗапись, СтруктураНабора); 
	
	Попытка
		НаборЗаписей.Записать();
		Возврат Истина;
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при установке статуса карточке номенклатуры'"), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции	

Функция ОчиститьИсториюПоВидуНоменклатуры(СтруктураПараметров) Экспорт
	
	Результат 	 = Ложь;
	Запрос 		 = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КарточкиНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.КарточкиНоменклатуры КАК КарточкиНоменклатуры
		|ГДЕ
		|	КарточкиНоменклатуры.Владелец.ВидНоменклатуры = &ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", СтруктураПараметров.ВидНоменклатуры);	
	ТаблицаКарточек = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаКарточек.Количество() > 0 Тогда		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СтатусыКарточекНоменклатурыСрезПоследних.Период,
			|	СтатусыКарточекНоменклатурыСрезПоследних.КарточкаНоменклатуры,
			|	СтатусыКарточекНоменклатурыСрезПоследних.Статус,
			|	СтатусыКарточекНоменклатурыСрезПоследних.Пользователь,
			|	СтатусыКарточекНоменклатурыСрезПоследних.Комментарий
			|ИЗ
			|	РегистрСведений.СтатусыКарточекНоменклатуры.СрезПоследних(&Период, КарточкаНоменклатуры В (&ТаблицаКарточек)) КАК СтатусыКарточекНоменклатурыСрезПоследних";
		
		Запрос.УстановитьПараметр("Период", КонецДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("ТаблицаКарточек", ТаблицаКарточек.ВыгрузитьКолонку("Ссылка"));		
		СтатусыСрезПоследних   = Запрос.Выполнить().Выгрузить();	
		
		Для Каждого СтрокаТаблицы Из СтатусыСрезПоследних Цикл
			НаборЗаписей = РегистрыСведений.СтатусыКарточекНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.КарточкаНоменклатуры.Установить(СтрокаТаблицы.КарточкаНоменклатуры);
			НаборЗаписей.Записать();
			Если СтруктураПараметров.Свойство("ТолькоИстория") Тогда 
				НаборЗаписей.Прочитать();			
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), СтрокаТаблицы); 
				НаборЗаписей.Записать();
			КонецЕсли;	
		КонецЦикла;		
		
		Результат = Истина;
		
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
	
#КонецЕсли