
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидимостьПаролей = УправлениеITОтделом8УФПовтИсп.Право("ЧтениеПаролей") 
		ИЛИ УправлениеITОтделом8УФПовтИсп.Право("ПолныеПрава") 
		ИЛИ УправлениеITОтделом8УФПовтИсп.Право("ДобавлениеИзменениеПаролей");
		
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
	Список.Параметры.УстановитьЗначениеПараметра("СписокГруппТекущегоПользователя", 
		УправлениеITОтделом8УФ.СписокПодчиненныхИГруппПользователя(ТекущийПользователь));
	
	// Отбор по сотруднику/месту хранения/подразделению/физлицу/контрагенту/контактному лицу.
	Если Параметры.Свойство("Объект") Тогда 
        ЭлементОтбора 					= Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        ЭлементОтбора.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
        ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект");
		ЭлементОтбора.ПравоеЗначение 	= Параметры.Объект;
		ЭлементОтбора.ВидСравнения 	 	= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование 	= Истина;	
	КонецЕсли;
	
	// Насильно снимаем видимость с уволенных, когда открывается из карточки.
	ПоказыватьУволенных = Ложь;
	Если Параметры.Свойство("Отбор") Тогда
		Если Параметры.Отбор.Свойство("Объект") Тогда
			ПоказыватьУволенных = Истина;			
		КонецЕсли;
	КонецЕсли;
	Список.Параметры.УстановитьЗначениеПараметра("ПоказыватьУволенных", ПоказыватьУволенных);
	
	УстановитьПараметрыСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	
	Элементы.ФормаСформироватьПароль.Видимость		= ВидимостьПаролей;
	Элементы.ФормаСкрытьПоказатьПароли.Видимость	= ВидимостьПаролей;
	Элементы.Пароль.Видимость						= Ложь;
			
	ГруппировкаСписка								= 3;
	УстановитьПометкиНаКнопках();
	ОбновитьГруппировку();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	ОбновитьОтображениеДанных();
	Элементы.Список.Обновить();
	ОбновитьГруппировку();

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьПараметрыСписка();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтчетПоЛогинам(Команда)
	
	ОткрытьФорму("Отчет.ЛогиныИПароли.ФормаОбъекта",,,);
	
КонецПроцедуры

&НаКлиенте
Процедура БезГруппировки(Команда)
	
	ГруппировкаСписка = 0;	
	УстановитьПометкиНаКнопках();
	ОбновитьГруппировку();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаПрограмма(Команда)
	
	ГруппировкаСписка = 1;
	УстановитьПометкиНаКнопках();
	ОбновитьГруппировку();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаВладелец(Команда)
	
	ГруппировкаСписка = 2;
	УстановитьПометкиНаКнопках();
	ОбновитьГруппировку();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаПрограммаВладелец(Команда)
	
	ГруппировкаСписка = 3;
	УстановитьПометкиНаКнопках();
	ОбновитьГруппировку();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаВладелецПрограмма(Команда)
	
	ГруппировкаСписка = 4;
	УстановитьПометкиНаКнопках();
	ОбновитьГруппировку();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаПоОрганизации(Команда)
	
	ГруппировкаСписка = 5;
	УстановитьПометкиНаКнопках();
	ОбновитьГруппировку();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаПоКатегорииПрограмме(Команда)

	ГруппировкаСписка = 6;
	УстановитьПометкиНаКнопках();
	ОбновитьГруппировку();    
    
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаКатегорияПрограммаВладелец(Команда)
    
	ГруппировкаСписка = 7;
	УстановитьПометкиНаКнопках();
	ОбновитьГруппировку();        
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПароль(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ГруппировкаДС = Новый Массив;
		Значение = Элементы.Список.ТекущаяСтрока;
		Пока ЗначениеЗаполнено(Значение) Цикл
			ГруппировкаДС.Добавить(Значение);
			Значение = Значение.РодительскаяГруппировка;
		КонецЦикла;
	Иначе	
		ГруппировкаДС = Неопределено;
	КонецЕсли;
	
	Период 		= ?(ГруппировкаДС <> Неопределено, Неопределено, ТекущиеДанные.Период);
	Объект	 	= ?(ГруппировкаДС <> Неопределено, Неопределено, ТекущиеДанные.Объект);
	Программа 	= ?(ГруппировкаДС <> Неопределено, Неопределено, ТекущиеДанные.Программа);
	
	Результат 	= Неопределено;
	
	СтруктураПараметр = Новый Структура();
	СтруктураПараметр.Вставить("Период", 		Период);
	СтруктураПараметр.Вставить("Программа", 	Программа);
	СтруктураПараметр.Вставить("Объект",		Объект);
	СтруктураПараметр.Вставить("ГруппировкаДС", ГруппировкаДС);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СформироватьПарольЗавершение", ЭтотОбъект, СтруктураПараметр);
	
	ОткрытьФорму("Обработка.ФормированиеПароля.Форма", 
		Новый Структура("МассоваяГенерацияПаролей", ГруппировкаДС <> Неопределено),,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПарольЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Период 			= ДополнительныеПараметры.Период;
    Программа 		= ДополнительныеПараметры.Программа;
    Объект 		= ДополнительныеПараметры.Объект;
	ГруппировкаДС	= ДополнительныеПараметры.ГруппировкаДС;
    
	Если Результат <> Неопределено Тогда		
		
        // Меняем значение.	
        ИзменитьПароль(Период, Объект, Программа, ГруппировкаДС, Результат);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьПароли(Команда)
	
	ПоказыватьПароли = Не ПоказыватьПароли;
	Элементы.ФормаСкрытьПоказатьПароли.Пометка = ПоказыватьПароли;
	Элементы.Пароль.Видимость = ПоказыватьПароли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьИсториюИзмененияПаролей(Команда)
	
	ОтображатьИсториюИзмененияПаролей = НЕ ОтображатьИсториюИзмененияПаролей;	
	УстановитьПараметрыСписка();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИзменитьПароль(Знач Период, Знач Объект, Знач Программа, Знач ГруппировкаДС, Знач Структура)
	
	НаборЛогиныПаролиПользователей = РегистрыСведений.УдалитьЛогиныИПароли.СоздатьНаборЗаписей();
	
	НачатьТранзакцию();
	Попытка
		Если ГруппировкаДС = Неопределено Тогда
		
			НаборЛогиныПаролиПользователей.Отбор.Период.Значение 			= Период;
			НаборЛогиныПаролиПользователей.Отбор.Период.ВидСравнения 		= ВидСравнения.Равно;
			НаборЛогиныПаролиПользователей.Отбор.Период.Использование 		= Истина;

			НаборЛогиныПаролиПользователей.Отбор.Объект.Значение 			= Объект;
			НаборЛогиныПаролиПользователей.Отбор.Объект.ВидСравнения 		= ВидСравнения.Равно;
			НаборЛогиныПаролиПользователей.Отбор.Объект.Использование 		= Истина;

			НаборЛогиныПаролиПользователей.Отбор.Программа.Значение 		= Программа;
			НаборЛогиныПаролиПользователей.Отбор.Программа.ВидСравнения 	= ВидСравнения.Равно;
			НаборЛогиныПаролиПользователей.Отбор.Программа.Использование 	= Истина;

			НаборЛогиныПаролиПользователей.Прочитать();
			Запись = НаборЛогиныПаролиПользователей.Получить(0);
			Запись.Пароль = Структура.Пароль;
			НаборЛогиныПаролиПользователей.Записать();
			
		Иначе
			
			Для Каждого Гр Из ГруппировкаДС Цикл
				Если СтрНайти(Гр.ИмяГруппировки, ".") > 0 Тогда
					ОбщегоНазначения.СообщитьПользователю(
						НСтр("ru = 'Для заданной группировки нельзя автоматически сформировать пароли'"));
				Иначе
					НаборЛогиныПаролиПользователей.Отбор[Гр.ИмяГруппировки].Значение 		= Гр.Ключ;
					НаборЛогиныПаролиПользователей.Отбор[Гр.ИмяГруппировки].ВидСравнения 	= ВидСравнения.Равно;
					НаборЛогиныПаролиПользователей.Отбор[Гр.ИмяГруппировки].Использование 	= Истина;
				КонецЕсли;
			КонецЦикла;
			НаборЛогиныПаролиПользователей.Прочитать();
			ГСЧ = Новый ГенераторСлучайныхЧисел;
			Для Каждого Запись Из НаборЛогиныПаролиПользователей Цикл 
				Запись.Пароль = УправлениеITОтделом8УФ.СформироватьПароль(Структура, ГСЧ);
			КонецЦикла;
			НаборЛогиныПаролиПользователей.Записать();
			
		КонецЕсли;
	
		ЗафиксироватьТранзакцию();
	Исключение
	    ОтменитьТранзакцию();
	КонецПопытки;
	
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГруппировку(Знач ИмяПоля)
	
	ЭлементГруппировки = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ЭлементГруппировки.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
	ЭлементГруппировки.Использование = Истина;
	    
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГруппировку()
	
	Список.Группировка.Элементы.Очистить();
	Если ГруппировкаСписка = 1 Тогда
		УстановитьГруппировку("Программа");
	ИначеЕсли ГруппировкаСписка = 2 Тогда
		УстановитьГруппировку("Объект");
	ИначеЕсли ГруппировкаСписка = 3 Тогда
		УстановитьГруппировку("Программа");
		УстановитьГруппировку("Объект");
	ИначеЕсли ГруппировкаСписка = 4 Тогда
		УстановитьГруппировку("Объект");
		УстановитьГруппировку("Программа");
	ИначеЕсли ГруппировкаСписка = 5 Тогда
		УстановитьГруппировку("Объект.Организация");
	ИначеЕсли ГруппировкаСписка = 6 Тогда
		УстановитьГруппировку("Категория");
        УстановитьГруппировку("Программа");
	ИначеЕсли ГруппировкаСписка = 7 Тогда
		УстановитьГруппировку("Категория");
        УстановитьГруппировку("Программа");
        УстановитьГруппировку("Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиНаКнопках()
	
	Элементы.ФормаБезГруппировки.Пометка = Ложь;
	Элементы.ФормаГруппировкаПрограмма.Пометка = Ложь;
	Элементы.ФормаГруппировкаСотрудник.Пометка = Ложь;
	Элементы.ФормаГруппировкаПрограммаСотрудник.Пометка = Ложь;
	Элементы.ФормаГруппировкаСотрудникПрограмма.Пометка = Ложь;
    Элементы.ФормаГруппировкаПоОрганизации.Пометка = Ложь;
    Элементы.ФормаГруппировкаПоКатегорииПрограмме.Пометка = Ложь;
    Элементы.ФормаГруппировкаКатегорияПрограммаВладелец.Пометка = Ложь;
	
	Если ГруппировкаСписка = 0 Тогда
		Элементы.ФормаБезГруппировки.Пометка = Истина;
	ИначеЕсли ГруппировкаСписка = 1 Тогда
		Элементы.ФормаГруппировкаПрограмма.Пометка = Истина;
	ИначеЕсли ГруппировкаСписка = 2 Тогда
		Элементы.ФормаГруппировкаСотрудник.Пометка = Истина;
	ИначеЕсли ГруппировкаСписка = 3 Тогда
		Элементы.ФормаГруппировкаПрограммаСотрудник.Пометка = Истина;
	ИначеЕсли ГруппировкаСписка = 4 Тогда
		Элементы.ФормаГруппировкаСотрудникПрограмма.Пометка = Истина;
	ИначеЕсли ГруппировкаСписка = 5 Тогда
		Элементы.ФормаГруппировкаПоОрганизации.Пометка = Истина;
	ИначеЕсли ГруппировкаСписка = 6 Тогда
		Элементы.ФормаГруппировкаПоКатегорииПрограмме.Пометка = Истина;
	ИначеЕсли ГруппировкаСписка = 7 Тогда
		Элементы.ФормаГруппировкаКатегорияПрограммаВладелец.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Сотрудники" ИЛИ ИмяСобытия = "Запись_МестаХранения" Тогда		
		ОбновитьОтображениеДанных();
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСписка()
	
	Элементы.ФормаОтображатьИсториюИзмененияПаролей.Пометка = ОтображатьИсториюИзмененияПаролей;
	Список.Параметры.УстановитьЗначениеПараметра("ОтображатьИсториюИзмененияПаролей", ОтображатьИсториюИзмененияПаролей);	
	
КонецПроцедуры

#КонецОбласти
