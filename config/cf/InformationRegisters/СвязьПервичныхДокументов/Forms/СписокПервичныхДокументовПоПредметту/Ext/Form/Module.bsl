
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Локализация.
	Список.Параметры.УстановитьЗначениеПараметра("ПереданВОплату", НСтр("ru = 'Передан в оплату'")); 
	Список.Параметры.УстановитьЗначениеПараметра("НеПереданВОплату", НСтр("ru = 'Не передан в оплату'")); 
    Список.Параметры.УстановитьЗначениеПараметра("Оплачен", НСтр("ru = 'Оплачен'")); 
	Список.Параметры.УстановитьЗначениеПараметра("НеОплачен", НСтр("ru = 'Не оплачен'")); 
    Список.Параметры.УстановитьЗначениеПараметра("ПереданВАрхив", НСтр("ru = 'Передан в архив'")); 
	Список.Параметры.УстановитьЗначениеПараметра("НеПереданВАрхив", НСтр("ru = 'Не передан в архив'")); 	

	Параметры.Свойство("ПредметДокумента", ПредметДокумента);
	РаботаСОтборамиКлиентСервер.УстановитьЭлементОтбораСписка(Список, "Объект", ПредметДокумента, 
		ЗначениеЗаполнено(ПредметДокумента));
		
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПервичныеДокументы_ДобавленаСвязьДокумента" 
		ИЛИ ИмяСобытия = "ПервичныеДокументы_Запись"  Тогда
		Элементы.Список.Обновить();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьПервичныйДокумент(Команда)
	
	ПараметрыФормы = Новый Структура("ПредметДокумента", ПредметДокумента);
	ОткрытьФорму("РегистрСведений.СвязьПервичныхДокументов.Форма.ФормаЗаписи", 
		ПараметрыФормы, ЭтотОбъект, , , , , 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементыУО = Список.УсловноеОформление.Элементы;	
	ЭлементыУО.Очистить();
	
	// Работа с документом завершена.
	ЭлементУсловногоОформления		= ЭлементыУО.Добавить();	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", 
		ЦветаСтиля["ЦветФонаКорректногоКонтрагентаВДокументе"]);
		
	ЭлементОтбора					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ДокументЗакрыт");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	// Удаленные. 
	ЭлементУсловногоОформления		= ЭлементыУО.Добавить();	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", 
		ЦветаСтиля["ЦветТекстаНекорректногоКонтрагента"]);
		
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", 
		ШрифтыСтиля["ШрифтДиалоговИМенюЗачеркнутый8"]);
		
	ЭлементОтбора					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ТекущиеДанные.Свойство("ГруппировкаСтроки") Тогда
		ПоказатьЗначение(, ТекущиеДанные.ПервичныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти