#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбновитьДополнительныеРеквизитыЗадания(Знач ЗаданиеСтруктура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.РеквизитыЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ЗаданиеСтруктура.Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Запись 			= НаборЗаписей.Добавить();
		Запись.Объект 	= ЗаданиеСтруктура.Ссылка;
	Иначе
		Запись 			= НаборЗаписей[0];
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Комментарии.Автор КАК Автор
		|ИЗ
		|	Справочник.Комментарии КАК Комментарии
		|ГДЕ
		|	Комментарии.ВладелецКомментария = &ОбъектСсылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Комментарии.Код УБЫВ";

	Запрос.УстановитьПараметр("ОбъектСсылка", ЗаданиеСтруктура.Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();
	ПоследнийАвтор = Справочники.Пользователи.ПустаяСсылка();
	Если Выборка.Следующий() Тогда
		ПоследнийАвтор = Выборка.Автор;
	КонецЕсли;

	Если ЗначениеЗаполнено(ПоследнийАвтор) Тогда
		// Комментарии есть, записываем последнего автора комментария.
		Запись.ПоследнийВПереписке = ПоследнийАвтор;
	Иначе
		// Задание без комментариев, записываем автора последним в переписке.
		Запись.ПоследнийВПереписке = ?(ЗначениеЗаполнено(ЗаданиеСтруктура.Инициатор),
			ЗаданиеСтруктура.Инициатор, ЗаданиеСтруктура.Автор);
	КонецЕсли;
	
	Запись.ДатаПоследнегоИзменения = ТекущаяДатаСеанса();
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Устанавливает дату последнего изменения задания.
//
// Параметры:
//		Объект - ДокументСсылка.Задание;
//		ДатаИзменения - Дата.
//
//	Возвращаемое значение:
//		Результат - Булево - признак установки реквизита.
//		
Функция УстановитьДатуПоследнегоИзменения(Знач Объект, Знач ДатаИзменения = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Ложь;	
	
	Если ДатаИзменения = Неопределено Тогда
		ДатаИзменения = ТекущаяДатаСеанса();
	КонецЕсли;
		
	МенеджерЗаписи					= РегистрыСведений.РеквизитыЗаданий.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект 			= Объект;	
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.ДатаПоследнегоИзменения = ДатаИзменения;
		Попытка
			МенеджерЗаписи.Записать(Истина);
			Результат = Истина;
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при установке даты последнего изменения.'"), 
				УровеньЖурналаРегистрации.Ошибка,,, 
				ПодробноеПредставлениеОшибки(ОписаниеОшибки()));
		КонецПопытки;			
	Иначе
		МенеджерЗаписи.Объект 						= Объект;		
		МенеджерЗаписи.ДатаПоследнегоИзменения = ДатаИзменения;
		Попытка
			МенеджерЗаписи.Записать(Истина);
			Результат = Истина;
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при установке даты последнего изменения.'"), 
				УровеньЖурналаРегистрации.Ошибка,,, 
				ПодробноеПредставлениеОшибки(ОписаниеОшибки()));
		КонецПопытки;
	КонецЕсли;		 	
	
	Возврат Результат;
	
КонецФункции

// Возвращает значение указанного реквизита задания.
//
// Параметры:
//	Объект - ДокументСсылка.Задание - владелец реквизита;
//	ИмяРеквизита - Строка - имя реквизита.
//
// Возвращаемое значение:
//	Произвольный тип, Неопределено - значение реквизита.
//
Функция ПолучитьРеквизитЗадания(Знач Объект, Знач ИмяРеквизита) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.РеквизитыЗаданий.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект = Объект;
	МенеджерЗаписи.Прочитать();
	Если МенеджерЗаписи.Выбран() Тогда
		Возврат МенеджерЗаписи[ИмяРеквизита];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
			 
КонецФункции

#КонецОбласти
	
#КонецЕсли