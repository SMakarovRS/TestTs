
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Объект") Тогда
		Запись.Объект = Параметры.Объект;
	КонецЕсли;
	
	// Вид формы:
	//	0 - открыта из дин. списка (в т.ч. Мои трудозатраты).
	//	1 - трудозатраты при завершении.
	//	2 - ручной ввод из объекта
	ВидФормы = 0;
	Если Параметры.Свойство("ВидФормы") Тогда
		Если Параметры.ВидФормы = "ВводТрудозатрат" Тогда
			ПодготовитьФормуТрудозатрат();
			ВидФормы = 1;
		ИначеЕсли Параметры.ВидФормы = "ВводТрудозатратИзОбъекта" Тогда
			ПодготовитьФормуНовойЗаписиДляОбъекта();
			ВидФормы = 2;
		ИначеЕсли Параметры.ВидФормы = "ФормаНовойЗаписиМоиТрудозатраты" Тогда		
			ПодготовитьФормуНовойЗаписиМоиТрудозатраты();
		ИначеЕсли Параметры.ВидФормы = "ФормаНовойЗаписиКопирование" Тогда		
			ПодготовитьФормуНовойЗаписиКопирование();
		КонецЕсли;
	Иначе
		АвторасчетЗатрат = Истина;
		Если ЗначениеЗаполнено(Запись.Объект) Тогда
			Если Запись.КлючУникальности = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") Тогда
				
				// Новая запись
				Запись.ДатаНачала	= ТрудозатратыСервер.ПоследняяДатаОкончанияТрудозатратОбъекта(Запись.Объект);
				Запись.КлючУникальности = Новый УникальныйИдентификатор();
				Запись.Исполнитель 	= Пользователи.ТекущийПользователь();
				
				Если ТипЗнч(Запись.Объект) = Тип("ДокументСсылка.Задание") Тогда
					
					Если Запись.ДатаНачала = Дата(1, 1, 1) Тогда
						Исполнители = Запись.Объект.Исполнители.Выгрузить();
						Исполнители.Сортировать("ДатаНачала Убыв", );
						Для Индекс = 0 По Исполнители.Количество() - 1 Цикл
							Если Исполнители[Индекс].Исполнитель = Запись.Исполнитель Тогда
								Если НачалоДня(Исполнители[Индекс].ДатаНачала) = НачалоДня(ТекущаяДатаСеанса()) Тогда
									Запись.ДатаНачала = Исполнители[Индекс].ДатаНачала;
								КонецЕсли;
								Если ПустаяСтрока(Запись.Описание) Тогда
									Запись.Описание = СтрШаблон(НСтр("ru = 'Выполнение задачи исполнителем %1'"), 
										Исполнители[Индекс].Исполнитель);
								КонецЕсли;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если Запись.ДатаНачала = Дата(1, 1, 1) Тогда
							Запись.ДатаНачала = Запись.Объект.Дата;
						КонецЕсли;
					КонецЕсли;
					
					Если НачалоДня(Запись.ДатаНачала) <> НачалоДня(ТекущаяДатаСеанса()) Тогда
						Запись.ДатаОкончания = Запись.ДатаНачала;
					Иначе
						Запись.ДатаОкончания = ТекущаяДатаСеанса();
					КонецЕсли;					
					
					Запись.Инициатор 	= Запись.Объект.Инициатор;
					Запись.ВидРаботы	= Справочники.ВидыРабот.ВыполнениеЗаданий;
					ТекущийЭлемент		= Элементы.ВидРаботы;
					Элементы.Объект.Заголовок = НСтр("ru = 'Задание'");
									
				ИначеЕсли ТипЗнч(Запись.Объект) = Тип("СправочникСсылка.Проекты") Тогда
					
					Если Запись.ДатаНачала = Дата(1, 1, 1) Тогда
						Запись.ДатаНачала = Запись.Объект.ДатаНачала;
					КонецЕсли;
					Запись.ДатаОкончания= ТекущаяДатаСеанса();
					Запись.Инициатор 	= Запись.Объект.Инициатор;
					Запись.ВидРаботы	= Справочники.ВидыРабот.ПроектныеРаботы;
					ТекущийЭлемент		= Элементы.Описание;
					Элементы.Объект.Заголовок = НСтр("ru = 'Проект'");
					
				ИначеЕсли ТипЗнч(Запись.Объект) = Тип("ДокументСсылка.НарядНаРаботы") Тогда
					
					Если Запись.ДатаНачала = Дата(1, 1, 1) Тогда
						Запись.ДатаНачала = Запись.Объект.Дата;
					КонецЕсли;
					Запись.ДатаОкончания= ТекущаяДатаСеанса();
					Запись.Инициатор 	= Запись.Объект.Контрагент;
					Запись.ВидРаботы	= Справочники.ВидыРабот.ВыполнениеНарядовНаРаботы;
					ТекущийЭлемент		= Элементы.Описание;
					Элементы.Объект.Заголовок = НСтр("ru = 'Наряд на работы'");
					
				ИначеЕсли ТипЗнч(Запись.Объект) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
					
					Если Запись.ДатаНачала = Дата(1, 1, 1) Тогда
						Запись.ДатаНачала = Запись.Объект.Дата;
					КонецЕсли;
					Запись.Инициатор 	= Запись.Объект.Инициатор;
					Запись.ДатаОкончания= ТекущаяДатаСеанса();
					ТекущийЭлемент		= Элементы.Описание;
					Элементы.Объект.Заголовок = НСтр("ru = 'Заказ клиента'");
					
				Иначе
					
					Запись.ДатаОкончания= ТекущаяДатаСеанса();
					Если Запись.ДатаНачала = Дата(1, 1, 1) Тогда
						Запись.ДатаНачала = Запись.ДатаОкончания - 10 * 60;
					КонецЕсли;
					
				КонецЕсли;
				
				Запись.Длительность 	= Запись.ДатаОкончания - Запись.ДатаНачала;
				
			КонецЕсли;
			
			МассивТипов = Новый Массив();
			МассивТипов.Добавить(ТипЗнч(Запись.Объект));
			Элементы.Объект.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
						
		КонецЕсли;
	КонецЕсли;
		
	ЗаполнитьЗатратыВремени();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Запись.Длительность >= 0 Тогда 
		РассчитатьЗатратыВремени(Запись.Длительность);
	Иначе
		Элементы.ДекорацияНадписьПредупреждение.Видимость = Ложь;	
	КонецЕсли;
	
	ОбновитьСписокВыбораДаты(Элементы.ДатаНачала);
	ОбновитьСписокВыбораДаты(Элементы.ДатаОкончания);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЗатратыВремениПриИзменении(Элемент)
	
	Модифицированность = Истина;
	Часов = "";
	Минут = "";
	ЧасыСтрока = Лев(ЗатратыВремени, 2);
	
	Если ЗначениеЗаполнено(ЧасыСтрока) Тогда
		Если Число(ЧасыСтрока) > 23 Тогда
			Часов = 23;
		ИначеЕсли Число(ЧасыСтрока) < 10 Тогда
			Часов = "0" + Число(ЧасыСтрока);
		Иначе
			Часов = ЧасыСтрока;
		КонецЕсли;
	КонецЕсли;

	МинутыСтрока = Прав(ЗатратыВремени, 2);
	
	Если ЗначениеЗаполнено(МинутыСтрока) Тогда
		Если Число(МинутыСтрока) > 59 Тогда
			Минут = 59;
		ИначеЕсли Число(МинутыСтрока) < 10 Тогда
			Минут = "0" + Число(МинутыСтрока);
		Иначе
			Минут = МинутыСтрока;		
		КонецЕсли;
	КонецЕсли;
	
	ЗатратыВремени = Строка(Часов)+ ":" + Строка(Минут);
	
	Длительность = 0;
	Попытка
		Длительность = УправлениеITОтделом8УФКлиентСервер.ЧислоИзСтроки(ЗатратыВремени);
	Исключение
	КонецПопытки;
	
	Если АвторасчетЗатрат Тогда
		Запись.ДатаОкончания = Запись.ДатаНачала + Длительность;
	Иначе
		Запись.ДатаНачала    = Запись.ДатаНачала - Длительность;
		Запись.ДатаОкончания = Запись.ДатаНачала + Длительность;
	КонецЕсли;
	
	ОбновитьСписокВыбораДаты(Элементы.ДатаНачала);
	ОбновитьСписокВыбораДаты(Элементы.ДатаОкончания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	
	Если ТипЗнч(Запись.Объект) = Тип("ДокументСсылка.Задание") Тогда
		Если НЕ ЗначениеЗаполнено(Запись.Инициатор) Тогда
			УстановитьИнициатораИспользуяОбъект(Запись.Объект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
		
	РассчитатьЗатратыВремениПриИзмененииДат(Элементы.ДатаОкончания);	
	ОбновитьСписокВыбораДаты(Элементы.ДатаОкончания);
		
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
		
	РассчитатьЗатратыВремениПриИзмененииДат(Элементы.ДатаНачала);
	ОбновитьСписокВыбораДаты(Элементы.ДатаНачала);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЗатратыВремениПриИзмененииДат(ЭлементДаты)
	
	Если ЭлементДаты = Элементы.ДатаНачала Тогда
		Если Запись.ДатаНачала > Запись.ДатаОкончания Тогда
			Запись.ДатаОкончания = Запись.ДатаНачала;
		КонецЕсли;
	ИначеЕсли ЭлементДаты = Элементы.ДатаОкончания Тогда
		Если Запись.ДатаНачала > Запись.ДатаОкончания Тогда
			Запись.ДатаНачала = Запись.ДатаОкончания;
		КонецЕсли;
	КонецЕсли;
	
	Длительность = Запись.ДатаОкончания - Запись.ДатаНачала;
	
	Если Длительность >= 0 Тогда 
		РассчитатьЗатратыВремени(Длительность);
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если Не ЗначениеЗаполнено(Запись.Объект) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Поле ""Объект"" не заполнено.'"));
	    Возврат;
	КонецЕсли;
	
	Длительность = 0;
	Попытка
		Длительность = Запись.ДатаОкончания - Запись.ДатаНачала;
	Исключение
	КонецПопытки;	
	
	Если Длительность > 0 Тогда
		Запись.Длительность = Длительность;
	Иначе	
		ПоказатьПредупреждение(,НСтр("ru = 'Затраты времени не указаны.'"));
		Возврат;
	КонецЕсли;
	
	// Проверка пересечения интервалов
	Если ПроверитьПересечениеДат() Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Добавляемый интервал дат пересекается с уже введенными ранее.'"));
		Возврат;		
	КонецЕсли;
	
	Попытка
		Если ЗаписатьНаСервере() Тогда
			Модифицированность = Ложь;
			Закрыть(Истина);
			Оповестить("ОбновитьМоиТрудозатраты",,Запись.Объект);
		КонецЕсли;
	Исключение	
		ОписаниеОшибки = ОписаниеОшибки();
		ПоказатьПредупреждение(, ОписаниеОшибки);
		Возврат;
	КонецПопытки;	
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущееВремя(Команда)
	
	Запись.ДатаОкончания = ПолучитьВремяНаСервере();
	Если АвторасчетЗатрат Тогда
		РассчитатьЗатратыВремениПриИзмененииДат(Элементы.ДатаОкончания);
	КонецЕсли;
	ОбновитьСписокВыбораДаты(Элементы.ДатаОкончания);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущееВремяДатеНачала(Команда)
	
	Запись.ДатаНачала = ПолучитьВремяНаСервере();
	Если АвторасчетЗатрат Тогда
		РассчитатьЗатратыВремениПриИзмененииДат(Элементы.ДатаНачала);
	КонецЕсли;
	ОбновитьСписокВыбораДаты(Элементы.ДатаНачала);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьВремяНаСервере()
	
	Возврат ТекущаяДатаСеанса();
	
КонецФункции	

&НаСервере
Процедура ПодготовитьФормуТрудозатрат()
	
	Элементы.Объект.Видимость 		= Ложь;
	Элементы.Инициатор.Видимость  	= Ложь;	
	Элементы.Исполнитель.Видимость  = Ложь;
	Элементы.Длительность.Видимость = Ложь;			
	Запись.ДатаОкончания 			= ТекущаяДатаСеанса();
	Запись.Длительность 			= Запись.ДатаОкончания - Запись.ДатаНачала;	
	Запись.ВидРаботы				= Справочники.ВидыРабот.ВыполнениеЗаданий;
	АвторасчетЗатрат				= Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНовойЗаписиДляОбъекта()
	
	Элементы.Объект.Видимость 		= Ложь;
	Элементы.Исполнитель.Видимость  = Ложь;	
	Элементы.Длительность.Видимость = Ложь;
	Запись.Объект					= Параметры.Объект;
	Запись.Исполнитель				= Параметры.Исполнитель;
	Запись.Инициатор				= Параметры.Инициатор;
	Запись.КлючУникальности			= Параметры.КлючУникальности;
	Запись.ДатаНачала				= Параметры.ДатаНачала;
	Запись.ДатаОкончания			= Параметры.ДатаОкончания;
	Запись.ВидРаботы				= Справочники.ВидыРабот.ВыполнениеЗаданий;
	Запись.Длительность				= 0;
	ЗатратыВремени 					= "00:00";
	АвторасчетЗатрат				= Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗатратыВремени()
	
	СписокЗатратыВремени = Элементы.ЗатратыВремени.СписокВыбора;
	СписокЗатратыВремени.Очистить();
	СписокЗатратыВремени.ЗагрузитьЗначения(ТрудозатратыСервер.ДлительностьВремениПоУмолчанию());
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЗатратыВремени(Длительность)
	
	Если Длительность >= 0 Тогда
		Дней = Цел(Длительность / 86400);		
		Час  = Цел((Длительность  - Дней * 86400) / 3600);			
		Мин  = Окр((Длительность - Дней * 86400 - Час * 3600) / 60);
		Если Мин = 60 Тогда		
			Час = Час + 1;
			Мин = 0;
		КонецЕсли;		
		Если Час = 24 Тогда
			Дней = Дней + 1;
			Час = 0;
		КонецЕсли;
		Если Цел(Дней) > 0 Тогда
			Элементы.ДекорацияНадписьПредупреждение.Видимость = Истина;
			ЗатратыВремени = "00:00";
			Возврат;
		Иначе
			Элементы.ДекорацияНадписьПредупреждение.Видимость = Ложь;
			ЗатратыВремени = УправлениеITОтделом8УФКлиентСервер.ЧислоВоВремя(Длительность);
		КонецЕсли;
	Иначе
		Элементы.ДекорацияНадписьПредупреждение.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Функция ЗаписатьНаСервере()
	
	НаборЗаписей = РегистрыСведений.Трудозатраты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Запись.Объект);
	НаборЗаписей.Отбор.Исполнитель.Установить(Запись.Исполнитель);
	НаборЗаписей.Отбор.КлючУникальности.Установить(Запись.КлючУникальности);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		НоваяЗапись = НаборЗаписей.Добавить();		
	Иначе
		НоваяЗапись = НаборЗаписей[0];
	КонецЕсли;	
	
	ЗаполнитьЗначенияСвойств(НоваяЗапись, Запись);
		
	Попытка
		НаборЗаписей.Записать();
		Возврат Истина;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки);
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ПодготовитьФормуНовойЗаписиМоиТрудозатраты()
	
	ЭтоНоваяЗапись 		    		= Истина;
	МоментВремени 		    		= ТекущаяДатаСеанса();
	Запись.ДатаНачала 	    		= МоментВремени;
	Запись.ДатаОкончания    		= МоментВремени;
	ТекущийПользователь     		= Пользователи.ТекущийПользователь();
	Запись.Исполнитель      		= ТекущийПользователь;
	Запись.КлючУникальности 		= Новый УникальныйИдентификатор;
	Элементы.Исполнитель.Видимость  = Ложь;
	Элементы.Инициатор.Видимость  	= Ложь;
	АвторасчетЗатрат				= Истина;	
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНовойЗаписиКопирование()
	
	ЭтоНоваяЗапись 		    		= Истина;
	Элементы.Исполнитель.Видимость  = Ложь;
	Элементы.Инициатор.Видимость  	= Ложь;
	ЗаполнитьЗначенияСвойств(Запись, Параметры);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВыбораДаты(ЭлементФормы)
	
	Если ЭлементФормы = Элементы.ДатаНачала Тогда
		Элементы.ДатаНачала.СписокВыбора.Очистить();	
		Если Запись.ДатаНачала <> Дата(1, 1, 1) Тогда
			ДатаНачала = НачалоДня(Запись.ДатаНачала);
		Иначе
			ДатаНачала = НачалоДня(ПолучитьВремяНаСервере());
		КонецЕсли;
		НачалоПериода = 7 * 3600;	
		КонецПериода = 19 * 3600;
		Сек = НачалоПериода;
		Пока Сек <= КонецПериода Цикл
			Элементы.ДатаНачала.СписокВыбора.Добавить(ДатаНачала + Сек);
			Сек = Сек + 1800;
		КонецЦикла;
	Иначе
		Элементы.ДатаОкончания.СписокВыбора.Очистить();	
		Если Запись.ДатаОкончания <> Дата(1, 1, 1) Тогда
			ДатаОкончания = НачалоДня(Запись.ДатаОкончания);
		Иначе
			ДатаОкончания = НачалоДня(ПолучитьВремяНаСервере());
		КонецЕсли;
		НачалоПериода = 7 * 3600;	
		КонецПериода = 19 * 3600;
		Сек = НачалоПериода;
		Пока Сек <= КонецПериода Цикл
			Элементы.ДатаОкончания.СписокВыбора.Добавить(ДатаОкончания + Сек);
			Сек = Сек + 1800;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИнициатораИспользуяОбъект(Знач ОбъектСсылка)
	
	Запись.Инициатор = ОбъектСсылка.Инициатор;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_Трудозатраты", , Запись.Объект);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПересечениеДат()
	
	Возврат ТрудозатратыСервер.ПроверитьПересечениеИнтервалаДатТрудозатрат(Запись);
	
КонецФункции

#КонецОбласти