
&НаКлиенте
Процедура ФактическаяТрудоемкостьПриИзменении(Элемент)
	Объект.ДатаОкончания = Объект.ДатаНачала + Объект.ФактическаяТрудоемкость * 3600;
	ЗаполнениеВремениКлиента(Неопределено);
КонецПроцедуры

&НаКлиенте 
Процедура ЗаполнениеВремениКлиента(Элемент)
	Если Объект.СпособРасчетаВремениКлиента = 1 тогда
		Объект.ВремяКлиента = Объект.ФактическаяТрудоемкость;
	ИначеЕсли Объект.СпособРасчетаВремениКлиента = 3 тогда
		Объект.ВремяКлиента = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасчетВремени(Элемент)
	ФактВремя = Объект.ДатаОкончания - Объект.ДатаНачала;
	Объект.ФактическаяТрудоемкость = ФактВремя/3600;
	ЗаполнениеВремениКлиента(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВремяНачала(Команда)
	Объект.ДатаНачала = ТекущаяДата();
	РасчетВремени(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВремяОкончания(Команда)
	Объект.ДатаОкончания = ТекущаяДата();
	РасчетВремени(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаданиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ТекущийИсполнитель", Объект.Исполнитель);
 
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	ОбработкаРезультата = Новый ОписаниеОповещения("ОбработкаРезультатаВыбораЗадания",ЭтотОбъект);
	ОткрытьФорму("Документ.Задание.ФормаВыбора",ПараметрыФормы,ЭтаФорма, ЭтаФорма.УникальныйИдентификатор,
		,,ОбработкаРезультата,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаВыбораЗадания(Результат, Параметр) экспорт
	Если Результат <> Неопределено тогда
		Объект.Задание = Результат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
		
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства	
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
    УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Пашков - задача 523.
	Если ЭтоКопирование Тогда
		Оповещение_ЗакрытиеВопроса_ОчиститьЗадание = Новый ОписаниеОповещения("ЗакрытиеВопроса_ОчиститьЗадание", ЭтотОбъект);
		ПоказатьВопрос(Оповещение_ЗакрытиеВопроса_ОчиститьЗадание,
			"Очистить задание занятости? (Откроется форма ввода быстрой занятости)", 
			РежимДиалогаВопрос.ДаНет);
	КонецЕсли;	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//++ РС Консалт: Полякова Елизавета 09.03.2021 Задача 3510
	//e1cib/data/Документ.Задание?ref=b87f45b742e6cbc141cc49afef4c7205
	СформированОтчетКлиенту = СформированОтчетКлиенту();
	Если СформированОтчетКлиенту.ЗанятостьВОтчете Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		ТекстСообщения = ("Занятость уже включена в отчет клиенту № " + СформированОтчетКлиенту.Номер + " от " + СформированОтчетКлиенту.Дата);
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение", ЭтотОбъект);
		ПоказатьПредупреждение(Оповещение, ТекстСообщения, , "Редактирование занятости запрещено");
	КонецЕсли;
	//-- КонецЗадачи 3510
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПредупреждение(Параметры) Экспорт	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеВопроса_ОчиститьЗадание(Результат, Параметры) Экспорт
	
	//Пашков - задача 523.
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		СтруктураПолейЗаполняемыхИзЗадания = ПолучитьРеквизитыЗадания();
		
		Объект.Задание = ПредопределенноеЗначение("Документ.Задание.ПустаяСсылка");
		
		ФормаБыстройЗанятости = ПолучитьФорму("Документ.РС_Занятость.Форма.ФормаДокументаБыстраяЗанятость");
		КопироватьДанныеФормы(Объект, ФормаБыстройЗанятости.Объект);
		ЗаполнитьЗначенияСвойств(ФормаБыстройЗанятости, СтруктураПолейЗаполняемыхИзЗадания);
		ФормаБыстройЗанятости.Открыть();
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыЗадания()
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Задание, "Инициатор, Клиент, Проект");
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Пашков - задача 523.
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЭтоКопирование = Истина;
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДокументОбъект.ЗаполнитьНовыйДокумент();
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	КонецЕсли;
	
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ПодменюОтчеты;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


//++ РС Консалт: Полякова Елизавета 09.03.2021 Задача 3510
//e1cib/data/Документ.Задание?ref=b87f45b742e6cbc141cc49afef4c7205
&НаСервере
Функция СформированОтчетКлиенту();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РС_ОтчетКлиенту.Номер КАК Номер,
		|	РС_ОтчетКлиенту.Дата КАК Дата
		|ИЗ
		|	Документ.РС_ОтчетКлиенту КАК РС_ОтчетКлиенту
		|ГДЕ
		|	(РС_ОтчетКлиенту.СписокЗанятостейЗакрытые.Занятость = &Ссылка
		|			ИЛИ РС_ОтчетКлиенту.СписокЗанятостейНезакрытые.Занятость = &Ссылка)
		|	И РС_ОтчетКлиенту.СтатусОтчета В(&СтатусОтчета)
		|	И РС_ОтчетКлиенту.Проведен = ИСТИНА";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	СписокСтатусов = Новый СписокЗначений;
	СписокСтатусов.Добавить(Справочники.РС_СтатусыОтчетовКлиенту.ВыставленСчет);
	СписокСтатусов.Добавить(Справочники.РС_СтатусыОтчетовКлиенту.Оплачен);
	Запрос.УстановитьПараметр("СтатусОтчета", СписокСтатусов);
	РезультатЗапроса = Запрос.Выполнить();
	ПараметрыОтчета = Новый Структура;
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыОтчета.Вставить("ЗанятостьВОтчете", Ложь);
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ПараметрыОтчета.Вставить("ЗанятостьВОтчете", Истина);
		ПараметрыОтчета.Вставить("Дата", ВыборкаДетальныеЗаписи.Дата);
		ПараметрыОтчета.Вставить("Номер", ВыборкаДетальныеЗаписи.Номер);
	КонецЕсли;
	Возврат ПараметрыОтчета;
КонецФункции;
//-- КонецЗадачи 3510