&НаКлиенте
Процедура ФактическаяТрудоемкостьПриИзменении(Элемент)
	Объект.ДатаОкончания = Объект.ДатаНачала + Объект.ФактическаяТрудоемкость * 3600;
	ЗаполнениеВремениКлиента(Неопределено);
КонецПроцедуры

&НаКлиенте 
Процедура ЗаполнениеВремениКлиента(Элемент)
	Объект.Распределять = Ложь;   //++
	Если Объект.СпособРасчетаВремениКлиента = 1 тогда
		Объект.ВремяКлиента = Объект.ФактическаяТрудоемкость;
	ИначеЕсли Объект.СпособРасчетаВремениКлиента = 3 тогда
		Объект.ВремяКлиента = 0;
		//++ Горохов И. 30.04.21
	ИначеЕсли Объект.СпособРасчетаВремениКлиента = 4 тогда
		Объект.ВремяКлиента = 0;
		Объект.Распределять = Истина;
		//--
	КонецЕсли;
КонецПроцедуры

//++ РС Консалт: Полякова Елизавета 05.02.2021 Задача 175
&НаКлиенте
 Процедура ДатаНачалаПриИзменении(Элемент)
	Если ПерваяЗанятостьЗаВыбранныйДень() Тогда
    	Объект.ДатаНачала = Мин(НачалоДня(Объект.ДатаНачала) + 32400, ТекущаяДата());
    	Объект.ДатаОкончания = Объект.ДатаНачала + 600;
	КонецЕсли;
	ОбновитьСписокВыбораВремени(Элементы.ДатаНачала);
	РасчетВремени(Неопределено);
 КонецПроцедуры
//-- КонецЗадачи 175

//++ РС Консалт: Полякова Елизавета 10.02.2021 Задача 2092
//e1cib/data/Документ.Задание?ref=a3c7bc0885c4bdab46b41beacfc50b1b
&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	Если Месяц(Объект.ДатаОкончания) = Месяц(Объект.ДатаНачала) И День(Объект.ДатаОкончания) = День(Объект.ДатаНачала) Тогда
		ОбновитьСписокВыбораВремени(Элементы.ДатаНачала);
		РасчетВремени(Неопределено);
	Иначе
		ОбновитьСписокВыбораВремени(Элементы.ДатаОкончания);
		РасчетВремени(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаПриИзменении(Элемент)
	ОбновитьСписокВыбораВремени(Элементы.ДатаНачала);
	РасчетВремени(Неопределено);
КонецПроцедуры  

&НаКлиенте
Процедура ОбновитьСписокВыбораВремени(ЭлементФормы)
	Если ЭлементФормы = Элементы.ДатаНачала Тогда
		Элементы.ВремяОкончания.СписокВыбора.Очистить();	
		НачалоПериода = 900;	
		КонецПериода = 14400;
		КратноеВремя = Объект.ДатаНачала - ((Минута(Объект.ДатаНачала) % 15) * 60) - Секунда(Объект.ДатаНачала);
		Пока НачалоПериода <= КонецПериода Цикл
			Элементы.ВремяОкончания.СписокВыбора.Добавить((КратноеВремя + НачалоПериода), Формат((КратноеВремя + НачалоПериода), "ДФ = HH:mm"));
			НачалоПериода = НачалоПериода + 900;
		КонецЦикла;
	КонецЕсли;
	Если ЭлементФормы = Элементы.ДатаОкончания Тогда
		Элементы.ВремяОкончания.СписокВыбора.Очистить();	
		НачалоПериода = 0;	
		КонецПериода = 14400;
		Пока НачалоПериода <= КонецПериода Цикл
			Элементы.ВремяОкончания.СписокВыбора.Добавить((НачалоДня(Объект.ДатаОкончания) + НачалоПериода), Формат((НачалоДня(Объект.ДатаОкончания) + НачалоПериода), "ДФ = HH:mm"));
			НачалоПериода = НачалоПериода + 900;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры
//-- КонецЗадачи 2092

&НаКлиенте
Процедура РасчетВремени(Элемент)
	Объект.ДатаНачала = НачалоМинуты(Объект.ДатаНачала);
	Объект.ДатаОкончания = НачалоМинуты(Объект.ДатаОкончания);
	ФактВремя = Объект.ДатаОкончания - Объект.ДатаНачала;
	Объект.ФактическаяТрудоемкость = ФактВремя/3600;
	ЗаполнениеВремениКлиента(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВремяНачала(Команда)
	Объект.ДатаНачала = ТекущаяДата();
	РасчетВремени(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВремяОкончания(Команда)
	Объект.ДатаОкончания = ТекущаяДата();
	РасчетВремени(Неопределено);
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработкаРезультатаВыбора(Результат, Параметр) экспорт
	Если Результат <> Неопределено тогда
		Проект = Результат;
	КонецЕсли;
КонецПроцедуры
 
&НаСервере
Процедура ОбработкаРезультатаВыбораЗадания(Результат, Параметр) экспорт
	Если Результат <> Неопределено тогда
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДокументОбъект.Задание = Результат;
		ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СоздатьЗадание();
	СформированОтчетКлиенту = СформированОтчетКлиенту();
	Если СформированОтчетКлиенту.ЗанятостьВОтчете Тогда
		ТекстСообщения = ("Невозможно сохранить занятость, так как она включена в отчет клиенту № " + СформированОтчетКлиенту.Номер + " от " + СформированОтчетКлиенту.Дата);
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение", ЭтотОбъект);
		ПоказатьПредупреждение(Оповещение, ТекстСообщения, , "Редактирование занятости запрещено");
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьЗадание()
	Если НЕ Объект.Задание.Пустая() тогда
		Возврат;
	КонецЕсли;
	Если ПроверкаЗаполнения() тогда
		Возврат;
	КонецЕсли;
	ДокументЗадание = Документы.Задание.СоздатьДокумент();
	ДокументЗадание.Дата = Объект.ДатаНачала;
	ДокументЗадание.Процесс = Справочники.Процессы.Обращение;
	ДокументЗадание.Инициатор = Инициатор;
	ДокументЗадание.Клиент = Клиент;
	ДокументЗадание.Проект = Проект;
	//++ РС Консалт: Полякова Елизавета 04.03.2021 Задача 3432
	//e1cib/data/Документ.Задание?ref=a3f3762a9eea582b4f22538e029cd6c6
	МассивСтрок = СтрРазделить(ОписаниеФорматированныйДокумент.ПолучитьТекст(), Символы.ПС); //++ Горохов Иван 15.03.21 задача 3950
	ДокументЗадание.Тема = МассивСтрок[0];
	ДокументЗадание.ТекстHTML = СтрСоединить(МассивСтрок, "<br>");
	//-- КонецЗадачи 3432
	ДокументЗадание.ДатаВыполнения = Объект.ДатаОкончания;
	ДокументЗадание.ТекущийИсполнитель = Объект.Исполнитель;
	ДокументЗадание.ДатаСоздания = Объект.Дата;
	ДокументЗадание.Автор = Объект.Исполнитель; //++ Горохов И. 05.05.21 Задача № 4704
	ЗначениеЭтапа = УправлениеСвойствами.ПолучитьОбъектПоЗачениюСвойства(УправлениеСвойствами.ПолучитьСвойствоПоИмени("ДляРазработчика"), "РС_ДляСозданияЗаданияБыстраяЗанятость");
	ДокументЗадание.ТекущийЭтап = ЗначениеЭтапа;
	//ЧЛ = ДокументЗадание.ЧекЛист.Добавить();       //++
	//Чл.Выполнено = Истина;
	//Чл.Описание = "Без проверки";
	//Чл.Автор = Объект.Исполнитель;
	//Чл.Дата= Объект.Дата;                         //--
	Если ЗначениеЭтапа = Справочники.ЭтапыПроцессов.НайтиПоКоду("000000020") тогда               //Этап "Принято заказчиком"
		ДокументЗадание.Завершено = ИСТИНА;
		ДокументЗадание.ДатаЗавершения = Объект.ДатаОкончания; //++ Горохов И. 06.07.21 Задача № 8190
	КонецЕсли;
	ДокументЗадание.Записать(РежимЗаписиДокумента.Проведение);
	Объект.Задание = ДокументЗадание.Ссылка;
	Объект.Описание = ОписаниеФорматированныйДокумент.ПолучитьТекст();  //++ Горохов Иван 15.03.21 задача 3950
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//++РС Консалт: Минаков А.С.
	Перем ИмяКомандыВводНаОсновании;
	//++РС Консалт: Минаков А.С.
	
	//Пашков - задача 523.
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЭтоКопирование = Истина;
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДокументОбъект.ЗаполнитьНовыйДокумент();
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
		//++ РС Консалт: Полякова Елизавета 05.03.2021 Задача 2582
		//e1cib/data/Документ.Задание?ref=92bda9bbb834c3c649c5443c853f45be
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	РС_Занятость.ДатаОкончания КАК ДатаОкончания
			|ИЗ
			|	Документ.РС_Занятость КАК РС_Занятость
			|ГДЕ
			|	РС_Занятость.Проведен = ИСТИНА
			|	И РС_Занятость.Исполнитель = &Исполнитель
			|	И РС_Занятость.ДатаНачала >= &ДатаКопируемойЗанятости
			|	И РС_Занятость.ДатаНачала <= &СледующийДень
			|
			|УПОРЯДОЧИТЬ ПО
			|	РС_Занятость.ДатаОкончания УБЫВ";
		Запрос.УстановитьПараметр("Исполнитель", ПараметрыСеанса.ТекущийПользователь); 
		Запрос.УстановитьПараметр("ДатаКопируемойЗанятости", Параметры.ЗначениеКопирования.ДатаНачала);
		Запрос.УстановитьПараметр("СледующийДень", КонецДня(Параметры.ЗначениеКопирования.ДатаНачала));
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Объект.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаОкончания;
		Объект.ДатаОкончания = Объект.ДатаНачала + 600;
		ФактВремя = Объект.ДатаОкончания - Объект.ДатаНачала;
		Объект.ФактическаяТрудоемкость = ФактВремя/3600;	
		Объект.ВремяКлиента = Объект.ФактическаяТрудоемкость;
		//-- КонецЗадачи 2582
	КонецЕсли;
	
	//++РС Консалт: Минаков А.С.
	Если Параметры.Свойство("ОписаниеКоманды") И Параметры.ОписаниеКоманды.Свойство("Представление", ИмяКомандыВводНаОсновании) Тогда
		Объект.Задание = ПолучитьЗадание(ИмяКомандыВводНаОсновании);
		
		Если Не ЗначениеЗаполнено(Объект.Задание) Тогда
			ОбщегоНазначения.СообщитьПользователю("В текущем месяце ещё не создано задание для заполнения " + ИмяКомандыВводНаОсновании 
			+ Символы.ПС + " обратитесь к управляющему",,,, Отказ);
			Возврат;
		КонецЕсли;
		
		ОписаниеФорматированныйДокумент.Добавить(ИмяКомандыВводНаОсновании);
	КонецЕсли;
	//++РС Консалт: Минаков А.С.
	
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ПодменюОтчеты;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	//++ РС Консалт: Полякова Елизавета 04.03.2021 Задача 3430
	//e1cib/data/Документ.Задание?ref=a57d575abcce9bdd42a60464d74e4a2e
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	//-- КонецЗадачи 3430
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗадание(ИмяКомандыВводНаОсновании)
	
	//++РС Консалт: Минаков А.С.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Задание.Ссылка КАК Задание
	|ИЗ
	|	Документ.Задание.ДополнительныеРеквизиты КАК ЗаданиеДополнительныеРеквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Задание КАК Задание
	|		ПО ЗаданиеДополнительныеРеквизиты.Ссылка = Задание.Ссылка
	|			И (ЗаданиеДополнительныеРеквизиты.Свойство = &Свойство)
	|			И (ЗаданиеДополнительныеРеквизиты.Значение = &Значение)
	|			И (Задание.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|			И (НЕ Задание.ПометкаУдаления)
	|			И (Задание.Проведен)");
		
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "ВидРегламентированнойЗадачи");
	Значение = ИмяКомандыВводНаОсновании;
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(ТекущаяДата()) - 864000);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("Свойство", Свойство);
	Запрос.УстановитьПараметр("Значение", Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(Значение));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда		
		Возврат Документы.Задание.ПустаяСсылка();
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.Задание;
	//++РС Консалт: Минаков А.С.
	
КонецФункции


&НаСервере
Функция ПроверкаЗаполнения()
	ЕстьОшибки = Ложь;
	Если Инициатор.Пустая() тогда
		ЕстьОшибки = Истина;
		Сообщить("Заполните инициатора");
	КонецЕсли;
	Если Клиент.Пустая() тогда
		ЕстьОшибки = Истина;
		Сообщить("Заполните клиента");
	КонецЕсли;
	Если Проект.Пустая() тогда
		ЕстьОшибки = Истина;
		Сообщить("Заполните проект");
	КонецЕсли;
	Возврат ЕстьОшибки;
КонецФункции

&НаКлиенте
Процедура ИнициаторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    ПараметрыОтбора = Новый Структура;
    Если ЗначениеЗаполнено(Клиент) тогда
    	ПараметрыОтбора.Вставить("Владелец", Клиент);
    КонецЕсли;
 
    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
    ОбработкаРезультата = Новый ОписаниеОповещения("ОбработкаРезультатаВыбораИнициатор",ЭтаФорма);
    ОткрытьФорму("Справочник.КонтактныеЛица.ФормаВыбора",ПараметрыФормы,ЭтаФорма, ЭтаФорма.УникальныйИдентификатор,
    	,,ОбработкаРезультата,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработкаРезультатаВыбораИнициатор(Результат, Параметр) экспорт
	Если Результат <> Неопределено тогда
		Инициатор = Результат;
		ИнициаторПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИнициаторПриИзмененииНаСервере()
	
	//Пашков - задача 523. Добавил условие, что-бы не очищался проект при изменении инициатора.
	Если Клиент <> Инициатор.Владелец Тогда
		Проект = Справочники.Проекты.ПустаяСсылка();
		Клиент = Инициатор.Владелец;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИнициаторПриИзменении(Элемент)
	ИнициаторПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КлиентПриИзмененииНаСервере()
	Запрос = Новый Запрос;                    //++ Горохов И. 31.05.21 Задача №7054
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Проекты.Ссылка КАК Проект
		|ИЗ
		|	Справочник.Проекты КАК Проекты
		|ГДЕ
		|	Проекты.Клиент = &Клиент";
	
	Запрос.УстановитьПараметр("Клиент", Клиент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 1 тогда
		ВыборкаДетальныеЗаписи.Следующий();
		Проект = ВыборкаДетальныеЗаписи.Проект;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактныеЛица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛица
		|ГДЕ
		|	КонтактныеЛица.Владелец = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", Клиент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	Если ВыборкаДетальныеЗаписи.Количество() = 1 тогда
		ВыборкаДетальныеЗаписи.Следующий();
		Инициатор = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	
	//Проект = Справочники.Проекты.ПустаяСсылка();       
	//Инициатор = Клиент.КонтактноеЛицо;                 //-- Конец задачи №7054
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	КлиентПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаданиеПриИзменении(Неопределено);
	ОбновитьДоступностьПолей();
	
	//Пашков - задача 523.
	Если ЭтоКопирование Тогда
		Оповещение_ЗакрытиеВопроса_ОчиститьЗадание = Новый ОписаниеОповещения("ЗакрытиеВопроса_ОчиститьЗадание", ЭтотОбъект);
		ПоказатьВопрос(Оповещение_ЗакрытиеВопроса_ОчиститьЗадание,
			"Перенести задание в текущую занятость?", 
			РежимДиалогаВопрос.ДаНет);
	Иначе 
		//++РС Консалт: Полякова Елизавета 04.02.2021 Задача 175	
		ЭтаФорма.ТекущийЭлемент = Элементы.Описание;
		Если Параметры.Ключ.Пустая() И ПерваяЗанятостьЗаТекущийДень() Тогда
	    	Объект.ДатаНачала = Мин(НачалоДня(ТекущаяДата()) + 32400, ТекущаяДата());
	    	Объект.ДатаОкончания = Объект.ДатаНачала + 600;
			РасчетВремени(Неопределено);
	    КонецЕсли;
		//-- КонецЗадачи 175
	КонецЕсли;
	//++ РС Консалт: Полякова Елизавета 10.02.2021 Задача 2092
	//e1cib/data/Документ.Задание?ref=a3c7bc0885c4bdab46b41beacfc50b1b
	ОбновитьСписокВыбораВремени(Элементы.ДатаНачала);
    ОбновитьСписокВидовРабот();
	//-- КонецЗадачи 2092
	
	//++ РС Консалт: Полякова Елизавета 09.03.2021 Задача 3510
	//e1cib/data/Документ.Задание?ref=b87f45b742e6cbc141cc49afef4c7205
	СформированОтчетКлиенту = СформированОтчетКлиенту();
	Если СформированОтчетКлиенту.ЗанятостьВОтчете Тогда
		Элементы.ПредупреждениеОЗапрете.Видимость = Истина;
		ПредупреждениеОЗапрете = ("Редактирование занятости запрещено. Занятость уже включена в отчет клиенту № " + СформированОтчетКлиенту.Номер + " от " + СформированОтчетКлиенту.Дата); 
		ЭтаФорма.ТолькоПросмотр = Истина;
		ТекстСообщения = ("Занятость уже включена в отчет клиенту № " + СформированОтчетКлиенту.Номер + " от " + СформированОтчетКлиенту.Дата);
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение", ЭтотОбъект);
		ПоказатьПредупреждение(Оповещение, ТекстСообщения, , "Редактирование занятости запрещено");
	КонецЕсли;
	//-- КонецЗадачи 3510
	
	Если НЕ ЗначениеЗаполнено(ОписаниеФорматированныйДокумент.ПолучитьТекст()) И ЗначениеЗаполнено(Объект.Описание) Тогда
		ОписаниеФорматированныйДокумент.Добавить(Объект.Описание);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПредупреждение(Параметры) Экспорт	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьПолей()

	ДоступностьЭлементов = Не ЗначениеЗаполнено(Объект.Задание);
	Элементы.Клиент.Доступность = ДоступностьЭлементов;
	Элементы.Инициатор.Доступность = ДоступностьЭлементов;
	Элементы.Проект.Доступность = ДоступностьЭлементов;

КонецПроцедуры // ОбновитьДоступностьПолей()()

&НаКлиенте
Процедура ЗакрытиеВопроса_ОчиститьЗадание(Результат, Параметры) Экспорт
	
	//Пашков - задача 523.
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Объект.Задание = ПредопределенноеЗначение("Документ.Задание.ПустаяСсылка");
	КонецЕсли;
	
	ОбновитьДоступностьПолей();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыЗадания()
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Задание, "Инициатор, Клиент, Проект");
КонецФункции

&НаКлиенте
Процедура ЗаданиеПриИзменении(Элемент)
	
	СтруктураПолейЗаполняемыхИзЗадания = ПолучитьРеквизитыЗадания();
	
	Инициатор = СтруктураПолейЗаполняемыхИзЗадания.Инициатор;
	Клиент = СтруктураПолейЗаполняемыхИзЗадания.Клиент;
	Проект = СтруктураПолейЗаполняемыхИзЗадания.Проект;
	
	ОбновитьДоступностьПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаданиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЗаданиеПриИзменении(Элемент);
	
КонецПроцедуры

//++ РС Консалт: Полякова Елизавета 05.02.2021 Задача 175
&НаКлиенте
Процедура ПрибавитьМинутыКНачалу(Команда)
    Объект.ДатаНачала = Объект.ДатаНачала + 900;
	ОбновитьСписокВыбораВремени(Элементы.ДатаНачала);
	РасчетВремени(Неопределено);
 КонецПроцедуры

&НаКлиенте
Процедура ПрибавитьМинутыКОкончанию(Команда)
    Объект.ДатаОкончания = Объект.ДатаОкончания + 900;
	РасчетВремени(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПерваяЗанятостьЗаТекущийДень()
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |	РС_Занятость.Ссылка КАК Ссылка
        |ИЗ
        |	Документ.РС_Занятость КАК РС_Занятость
        |ГДЕ
        |	РС_Занятость.ДатаНачала >= &НачалоДня
        |	И РС_Занятость.Исполнитель = &Исполнитель";
    Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Исполнитель", ПараметрыСеанса.ТекущийПользователь); 
    РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Пустой();
КонецФункции

&НаСервере
Функция ПерваяЗанятостьЗаВыбранныйДень()
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |	РС_Занятость.ДатаОкончания КАК ДатаОкончания
        |ИЗ
        |	Документ.РС_Занятость КАК РС_Занятость
        |ГДЕ
        |	РС_Занятость.Проведен = ИСТИНА
        |	И РС_Занятость.ДатаНачала МЕЖДУ &НачалоДня И &КонецДня
        |	И РС_Занятость.Исполнитель = &Исполнитель
        |
        |УПОРЯДОЧИТЬ ПО
        |	РС_Занятость.ДатаОкончания УБЫВ";
    Запрос.УстановитьПараметр("НачалоДня", НачалоДня(Объект.ДатаНачала));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(Объект.ДатаНачала));
	Запрос.УстановитьПараметр("Исполнитель", ПараметрыСеанса.ТекущийПользователь); 
    РезультатЗапроса = Запрос.Выполнить();	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Истина;	
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Объект.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаОкончания;
		Объект.ДатаОкончания = Объект.ДатаНачала + 600;
		Возврат Ложь;
	КонецЕсли;	
КонецФункции
//-- КонецЗадачи 175

//++ РС Консалт: Полякова Елизавета 24.02.2021 Задача 2092
//e1cib/data/Документ.Задание?ref=a3c7bc0885c4bdab46b41beacfc50b1b
&НаСервере
Процедура ОбновитьСписокВидовРабот();
	Элементы.ВидРаботы.СписокВыбора.Очистить();	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыРабот.Ссылка КАК Ссылка,
		|	ВидыРабот.Представление КАК Представление
		|ИЗ
		|	Справочник.ВидыРабот КАК ВидыРабот
		|ГДЕ
		|	ВидыРабот.Родитель = &Родитель
		|	И НЕ ВидыРабот.ПометкаУдаления";	
	Запрос.УстановитьПараметр("Родитель", Справочники.РС_Переменные.ПолучитьПеременную("ИспользуемыеВидыРабот"));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Элементы.ВидРаботы.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка, ВыборкаДетальныеЗаписи.Представление);
	КонецЦикла;	
КонецПроцедуры
//-- КонецЗадачи 2092

&НаКлиенте
Процедура ЗаданиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Структура = Новый Структура;
	Структура.Вставить("Клиент", Клиент);
	Структура.Вставить("Проект", Проект);
	ОткрытьФорму("Документ.Задание.Форма.ФормаВыбора", Структура, Элемент, Новый УникальныйИдентификатор);
КонецПроцедуры

//++ РС Консалт: Полякова Елизавета 09.03.2021 Задача 3510
//e1cib/data/Документ.Задание?ref=b87f45b742e6cbc141cc49afef4c7205
&НаСервере
Функция СформированОтчетКлиенту()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РС_Работы.Регистратор.Номер КАК Номер,
		|	РС_Работы.Регистратор.Дата КАК Дата
		|ИЗ
		|	РегистрНакопления.РС_Работы КАК РС_Работы
		|ГДЕ
		|	РС_Работы.Занятость = &Ссылка
		|	И РС_Работы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ПараметрыОтчета = Новый Структура;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыОтчета.Вставить("ЗанятостьВОтчете", Ложь);
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ПараметрыОтчета.Вставить("ЗанятостьВОтчете", Истина);
		ПараметрыОтчета.Вставить("Дата", ВыборкаДетальныеЗаписи.Дата);
		ПараметрыОтчета.Вставить("Номер", ВыборкаДетальныеЗаписи.Номер);
	КонецЕсли;
	Возврат ПараметрыОтчета;
КонецФункции
//-- КонецЗадачи 3510

//++ РС Консалт: Полякова Елизавета 10.03.2021 Задача 3434
//e1cib/data/Документ.Задание?ref=9372b47192e9a21c466dcaccb371d18d
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ОписаниеФорматированныйДокумент = ТекущийОбъект.ФорматированноеОписание.Получить();
КонецПроцедуры
//-- КонецЗадачи 3434

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ФорматированноеОписание = Новый ХранилищеЗначения(ОписаниеФорматированныйДокумент);
	СтруктураВложений = Новый Структура;
	ОписаниеФорматированныйДокумент.ПолучитьHTML(ТекстHTML, СтруктураВложений);		
	Если СтрНайти(НРег(ТекстHTML), "<body>") > 0 Тогда
		ТекстHTML = СтрЗаменить(ТекстHTML, Сред(ТекстHTML, СтрНайти(НРег(ТекстHTML), "<body>"), 6), 
			"<body style=""font-family:Arial;font-size:10pt;"">");
	КонецЕсли;
	ТекстHTML = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(ТекстHTML);
	ТекущийОбъект.ТекстHTML = ТекстHTML;
	ТекущийОбъект.Описание = ОписаниеФорматированныйДокумент.ПолучитьТекст();
КонецПроцедуры

//++ Горохов И 01.06.21 задача №4530
&НаСервереБезКонтекста
Процедура ОбработкаДанныхВыбора(Текст,ДанныеВыбора, Клиент)
    ПараметрыПодбора=Новый Структура;
    ПараметрыПодбора.Вставить("Отбор",Новый Структура("Владелец", Клиент));
    ПараметрыПодбора.Вставить("СтрокаПоиска",Текст);
    ПараметрыПодбора.Вставить("ВыборГруппИЭлементов",ИспользованиеГруппИЭлементов.Элементы);
    ДанныеВыбора=Справочники.КонтактныеЛица.ПолучитьДанныеВыбора(ПараметрыПодбора);
КонецПроцедуры

&НаКлиенте
Процедура ИнициаторАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Клиент) тогда
		ОбработкаДанныхВыбора(Текст,ДанныеВыбора, Клиент);
		СтандартнаяОбработка = ложь;	
	КонецЕсли;		
КонецПроцедуры
//--КонецЗадачи №4530 
