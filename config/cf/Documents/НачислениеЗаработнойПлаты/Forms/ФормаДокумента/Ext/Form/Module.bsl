
#Область ОписаниеПеременных

// СтандартныеПодсистемы.ОценкаПроизводительности
&НаКлиенте
Перем ИдентификаторЗамераПроведение;
// Конец СтандартныеПодсистемы.ОценкаПроизводительности

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СЛС.ПриСозданииНаСервере(Объект, Отказ, СтандартнаяОбработка, Параметры, ЭтаФорма);
	
	ОтображениеМесяцаНачисления = Формат(Объект.МесяцНачисления, "ДФ='MMMM yyyy'");
		
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДатаСеанса();
	КонецЕсли;
		
	РассчитатьСуммы();
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ВерсионированиеОбъектов
	
	// Учет остатков контрагентов.
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("Организация");
	УправлениеITОтделом8УФ.УстановитьОграничениеТипаДляЭлементовФормы(ЭтаФорма, МассивЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Корректировки документа.
	УправлениеITОтделом8УФКлиент.ОбновитьНадписьАвтор(Объект, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
       ИдентификаторЗамераПроведение = ОценкаПроизводительностиКлиент.ЗамерВремени();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ДатаСоздания = Дата(1, 1, 1) Тогда
		ТекущийОбъект.ДатаСоздания = ТекущаяДатаСеанса();
	Иначе
		ТекущийОбъект.ДатаКорректировки = ТекущаяДатаСеанса();
	КонецЕсли; 
	
	Если ТекущийОбъект.Автор = Справочники.Пользователи.ПустаяСсылка() Тогда
		ТекущийОбъект.Автор = Пользователи.ТекущийПользователь();
	Иначе
		ТекущийОбъект.АвторКорректировки = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства.
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства.
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	СЛС.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма);
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Корректировки документа.
	УправлениеITОтделом8УФКлиент.ОбновитьНадписьАвтор(Объект, ЭтаФорма);
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведение, 
			"ДокументНачислениеЗаработнойПлаты (проведение)");	
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

// Процедура - обработчик события формы ОбработкаВыбора
//
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма")
		И СтрНайти(ИсточникВыбора.ИмяФормы, "ФормаКалендаря") > 0 Тогда
		
		Объект.МесяцНачисления = КонецДня(ВыбранноеЗначение);
		ЗаработнаяПлатаКлиент.ПриИзмененииМесяцаНачисления(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства.
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства.
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СЛС.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
    УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

// Процедура обработчик события начала ввода данных поля ПериодРегистрации
//
&НаКлиенте
Процедура МесяцНачисленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка	 = Ложь;
	ДатаКалендаряПриОткрытии = ?(ЗначениеЗаполнено(Объект.МесяцНачисления), 
		Объект.МесяцНачисления, ПолучитьТекущуюДатуСеанса());
	ОткрытьФорму("Документ.НачислениеЗаработнойПлаты.Форма.ФормаКалендаря", 
		ЗаработнаяПлатаКлиент.ПолучитьПараметрыОткрытияФормыКалендаря(ДатаКалендаряПриОткрытии), ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовФормы

// Процедура обработчик события регулирования поля МесяцНачисления
//
&НаКлиенте
Процедура МесяцНачисленияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗаработнаяПлатаКлиент.ПриРегулированииМесяцаНачисления(ЭтаФорма, Направление);
	ЗаработнаяПлатаКлиент.ПриИзмененииМесяцаНачисления(ЭтаФорма);
	
КонецПроцедуры //МесяцНачисленияРегулирование()

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, 
		ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНачисленияУдержания

&НаКлиенте
Процедура НачисленияУдержанияПослеУдаления(Элемент)
	
	РассчитатьСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияУдержанияСуммаПриИзменении(Элемент)
	
	РассчитатьСуммы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНалоги

&НаКлиенте
Процедура НалогиНаДоходыПослеУдаления(Элемент)
	
	РассчитатьСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура НалогиНаДоходыСуммаПриИзменении(Элемент)
	
	РассчитатьСуммы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтраховыеВзносы

&НаКлиенте
Процедура СтраховыеВзносыПослеУдаления(Элемент)
	
	РассчитатьСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховыеВзносыСуммаПриИзменении(Элемент)
	
	РассчитатьСуммы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НадписьАвторНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка= Ложь;
	Спк 				= УправлениеITОтделом8УФКлиент.ПолучитьСписокНадписьАвтор(Объект);	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НадписьАвторНажатиеЗавершение", ЭтотОбъект), 
		Спк, Элементы.НадписьАвтор, );
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьАвторНажатиеЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт    

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Подразделение) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не заполнено подразделение. Заполнение документа отменено.'");
		Сообщение.Поле = "Объект.Подразделение";
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	Ответ = Неопределено;	
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершение", ЭтотОбъект), 
		НСтр("ru = 'Табличные части документа будут очищены. Продолжить выполнение операции?'"), 	
			РежимДиалогаВопрос.ДаНет, 0);
	Возврат;
 	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Ответ = Результат;
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;	
	КонецЕсли;
	
	ЗаполнитьПоПодразделению();
		
КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область БСП

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
	
	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервере
Функция ПолучитьТекущуюДатуСеанса()
	
	Возврат ТекущаяДатаСеанса();
	
КонецФункции

&НаСервере
// Процедура заполняет табличные части с отбором по подразделению
//
Процедура ЗаполнитьПоПодразделению()
	
	Объект.НачисленияУдержания.Очистить();
	Объект.НалогиНаДоходы.Очистить();
	Объект.СтраховыеВзносы.Очистить();
	
	СдельнаяОплата			= Справочники.ВидыНачисленийИУдержаний.ПредопределенноеЗначениеПоИдентификатору
							("Сдельная оплата (тариф)");
	СдельнаяОплатаПроцент	= Справочники.ВидыНачисленийИУдержаний.ПредопределенноеЗначениеПоИдентификатору
							("Сдельная оплата (% от суммы)");
	ФиксированнаяСумма		= Справочники.ВидыНачисленийИУдержаний.ПредопределенноеЗначениеПоИдентификатору
							("Сдельная оплата (фиксированная сумма)");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ СотрудникиПодразделения
		|ИЗ
		|	(ВЫБРАТЬ
		|		СотрудникиСрезПоследних.Сотрудник КАК Сотрудник
		|	ИЗ
		|		РегистрСведений.СведенияОСотрудниках.СрезПоследних(&НачалоМесяца, Организация = &Организация) КАК СотрудникиСрезПоследних
		|	ГДЕ
		|		СотрудникиСрезПоследних.Подразделение = &Подразделение
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Сотрудники.Сотрудник
		|	ИЗ
		|		РегистрСведений.СведенияОСотрудниках КАК Сотрудники
		|	ГДЕ
		|		Сотрудники.Подразделение = &Подразделение
		|		И Сотрудники.Период МЕЖДУ &НачалоМесяца И &ОкончаниеМесяца
		|		И Сотрудники.Организация = &Организация) КАК ВложенныйЗапрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
		|	ВложенныйЗапрос.Подразделение КАК Подразделение,
		|	ПлановыеНачисленияИУдержания.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
		|	ПлановыеНачисленияИУдержания.Сумма КАК Сумма,
		|	ПлановыеНачисленияИУдержания.Актуальность КАК Актуальность,
		|	ВложенныйЗапрос.Период КАК Период,
		|	ВложенныйЗапрос.ГрафикРаботы КАК ГрафикРаботы
		|ПОМЕСТИТЬ ДвиженияСотрудники
		|ИЗ
		|	(ВЫБРАТЬ
		|		СотрудникиПодразделения.Сотрудник КАК Сотрудник,
		|		Сотрудники.Подразделение КАК Подразделение,
		|		Сотрудники.Должность КАК Должность,
		|		МАКСИМУМ(ПлановыеНачисленияИУдержания.Период) КАК ПериодНачисления,
		|		Сотрудники.Период КАК Период,
		|		ПлановыеНачисленияИУдержания.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
		|		Сотрудники.ГрафикРаботы КАК ГрафикРаботы
		|	ИЗ
		|		СотрудникиПодразделения КАК СотрудникиПодразделения
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках КАК Сотрудники
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияИУдержания КАК ПлановыеНачисленияИУдержания
		|				ПО Сотрудники.Организация = ПлановыеНачисленияИУдержания.Организация
		|					И Сотрудники.Сотрудник = ПлановыеНачисленияИУдержания.Сотрудник
		|					И Сотрудники.Период = ПлановыеНачисленияИУдержания.Период
		|					И (Сотрудники.Подразделение = &Подразделение)
		|					И (ПлановыеНачисленияИУдержания.ВидНачисленияУдержания <> &СдельнаяОплата)
		|					И (ПлановыеНачисленияИУдержания.ВидНачисленияУдержания <> &СдельнаяОплатаПроцент)
		|					И (ПлановыеНачисленияИУдержания.ВидНачисленияУдержания <> &ФиксированнаяСумма)
		|			ПО СотрудникиПодразделения.Сотрудник = Сотрудники.Сотрудник
		|	ГДЕ
		|		Сотрудники.Организация = &Организация
		|		И Сотрудники.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоМесяца, ДЕНЬ, 1) И &ОкончаниеМесяца
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Сотрудники.Подразделение,
		|		СотрудникиПодразделения.Сотрудник,
		|		Сотрудники.Должность,
		|		Сотрудники.Период,
		|		ПлановыеНачисленияИУдержания.ВидНачисленияУдержания,
		|		Сотрудники.ГрафикРаботы) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияИУдержания КАК ПлановыеНачисленияИУдержания
		|		ПО ВложенныйЗапрос.Сотрудник = ПлановыеНачисленияИУдержания.Сотрудник
		|			И (ПлановыеНачисленияИУдержания.Организация = &Организация)
		|			И ВложенныйЗапрос.ПериодНачисления = ПлановыеНачисленияИУдержания.Период
		|			И ВложенныйЗапрос.ВидНачисленияУдержания = ПлановыеНачисленияИУдержания.ВидНачисленияУдержания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
		|	ВложенныйЗапрос.Период КАК Период,
		|	ВложенныйЗапрос.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
		|	ВложенныйЗапрос.Сумма КАК Сумма,
		|	ВложенныйЗапрос.Актуальность КАК Актуальность,
		|	Сотрудники.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ДвиженияПлановыеНачисления
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПлановыеНачисленияИУдержания.Сотрудник КАК Сотрудник,
		|		ПлановыеНачисленияИУдержания.Период КАК Период,
		|		ПлановыеНачисленияИУдержания.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
		|		ПлановыеНачисленияИУдержания.Сумма КАК Сумма,
		|		ПлановыеНачисленияИУдержания.Актуальность КАК Актуальность,
		|		МАКСИМУМ(Сотрудники.Период) КАК ПериодСотрудники
		|	ИЗ
		|		СотрудникиПодразделения КАК СотрудникиПодразделения
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияИУдержания КАК ПлановыеНачисленияИУдержания
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках КАК Сотрудники
		|				ПО ПлановыеНачисленияИУдержания.Сотрудник = Сотрудники.Сотрудник
		|					И ПлановыеНачисленияИУдержания.Период = Сотрудники.Период
		|					И (Сотрудники.Организация = &Организация)
		|			ПО СотрудникиПодразделения.Сотрудник = ПлановыеНачисленияИУдержания.Сотрудник
		|				И (ПлановыеНачисленияИУдержания.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоМесяца, ДЕНЬ, 1) И &ОкончаниеМесяца)
		|				И (ПлановыеНачисленияИУдержания.ВидНачисленияУдержания <> &СдельнаяОплата)
		|				И (ПлановыеНачисленияИУдержания.ВидНачисленияУдержания <> &СдельнаяОплатаПроцент)
		|				И (ПлановыеНачисленияИУдержания.ВидНачисленияУдержания <> &ФиксированнаяСумма)
		|				И (ПлановыеНачисленияИУдержания.Организация = &Организация)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПлановыеНачисленияИУдержания.Актуальность,
		|		ПлановыеНачисленияИУдержания.Период,
		|		ПлановыеНачисленияИУдержания.ВидНачисленияУдержания,
		|		ПлановыеНачисленияИУдержания.Сотрудник,
		|		ПлановыеНачисленияИУдержания.Сумма) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках КАК Сотрудники
		|		ПО ВложенныйЗапрос.ПериодСотрудники = Сотрудники.Период
		|			И (Сотрудники.Организация = &Организация)
		|			И ВложенныйЗапрос.Сотрудник = Сотрудники.Сотрудник
		|ГДЕ
		|	Сотрудники.Подразделение = &Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
		|	ВложенныйЗапрос.Подразделение КАК Подразделение,
		|	ВложенныйЗапрос.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
		|	ВложенныйЗапрос.Размер КАК Размер,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос.ВидНачисленияУдержания.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийИУдержаний.Налог)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоНалог,
		|	ВложенныйЗапрос.ГрафикРаботы КАК ГрафикРаботы,
		|	ВложенныйЗапрос.Актуальность КАК Актуальность,
		|	ВложенныйЗапрос.ДатаДействияНачало КАК ДатаДействияНачало
		|ИЗ
		|	(ВЫБРАТЬ
		|		СотрудникиСрезПоследних.Сотрудник КАК Сотрудник,
		|		СотрудникиСрезПоследних.Подразделение КАК Подразделение,
		|		ПлановыеНачисленияИУдержанияСрезПоследних.ВидНачисленияУдержания КАК ВидНачисленияУдержания,
		|		ПлановыеНачисленияИУдержанияСрезПоследних.Сумма КАК Размер,
		|		&НачалоМесяца КАК ДатаДействияНачало,
		|		ИСТИНА КАК Актуальность,
		|		СотрудникиСрезПоследних.ГрафикРаботы КАК ГрафикРаботы
		|	ИЗ
		|		СотрудникиПодразделения КАК СотрудникиПодразделения
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках.СрезПоследних(&НачалоМесяца, Организация = &Организация) КАК СотрудникиСрезПоследних
		|			ПО СотрудникиПодразделения.Сотрудник = СотрудникиСрезПоследних.Сотрудник
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияИУдержания.СрезПоследних(&НачалоМесяца, Организация = &Организация) КАК ПлановыеНачисленияИУдержанияСрезПоследних
		|			ПО СотрудникиПодразделения.Сотрудник = ПлановыеНачисленияИУдержанияСрезПоследних.Сотрудник
		|	ГДЕ
		|		ПлановыеНачисленияИУдержанияСрезПоследних.Актуальность
		|		И СотрудникиСрезПоследних.Подразделение = &Подразделение
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПлановыеНачисленияИУдержания.Сотрудник,
		|		ПлановыеНачисленияИУдержания.Подразделение,
		|		ПлановыеНачисленияИУдержания.ВидНачисленияУдержания,
		|		ПлановыеНачисленияИУдержания.Сумма,
		|		ПлановыеНачисленияИУдержания.Период,
		|		ПлановыеНачисленияИУдержания.Актуальность,
		|		Сотрудники.ГрафикРаботы
		|	ИЗ
		|		ДвиженияСотрудники КАК Сотрудники
		|			ПОЛНОЕ СОЕДИНЕНИЕ ДвиженияПлановыеНачисления КАК ПлановыеНачисленияИУдержания
		|			ПО Сотрудники.Сотрудник = ПлановыеНачисленияИУдержания.Сотрудник
		|				И Сотрудники.Период = ПлановыеНачисленияИУдержания.Период
		|				И Сотрудники.ВидНачисленияУдержания = ПлановыеНачисленияИУдержания.ВидНачисленияУдержания) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник
		|ИТОГИ ПО
		|	Сотрудник";
	
	Запрос.УстановитьПараметр("НачалоМесяца", 			Объект.МесяцНачисления);
	Запрос.Параметры.Вставить("ОкончаниеМесяца",		КонецМесяца(Объект.МесяцНачисления));
	Запрос.Параметры.Вставить("Организация", 			Объект.Организация);
	Запрос.Параметры.Вставить("Подразделение", 			Объект.Подразделение);
	Запрос.Параметры.Вставить("СдельнаяОплата",			СдельнаяОплата);
	Запрос.Параметры.Вставить("СдельнаяОплатаПроцент",	СдельнаяОплатаПроцент);
	Запрос.Параметры.Вставить("ФиксированнаяСумма",		ФиксированнаяСумма);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	КонецМесяца = НачалоДня(КонецМесяца(Объект.МесяцНачисления));
	ВыборкаСотрудник = МассивРезультатов[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Сотрудник");
	
	Пока ВыборкаСотрудник.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаСотрудник.Сотрудник) Тогда 
			Продолжить 
		КонецЕсли;
		
		Выборка = ВыборкаСотрудник.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ЗаменитьДатуМассив = Объект.НачисленияУдержания.НайтиСтроки(Новый Структура("ДатаОкончания, Сотрудник, ВидНачисленияУдержания", КонецМесяца, Выборка.Сотрудник, Выборка.ВидНачисленияУдержания));
			Для каждого ЭлементМассива Из ЗаменитьДатуМассив Цикл
				ЭлементМассива.ДатаОкончания = Выборка.ДатаДействияНачало - 60*60*24;
			КонецЦикла;
			
			Если ЗначениеЗаполнено(Выборка.ВидНачисленияУдержания) И Выборка.Актуальность Тогда
				
				Если Выборка.ЭтоНалог Тогда
					
					НоваяСтрока							= Объект.НалогиНаДоходы.Добавить();
					НоваяСтрока.Сотрудник 				= Выборка.Сотрудник;
					НоваяСтрока.ВидНачисленияУдержания 	= Выборка.ВидНачисленияУдержания;
					
				Иначе
					
					НоваяСтрока							= Объект.НачисленияУдержания.Добавить();
					НоваяСтрока.Сотрудник 				= Выборка.Сотрудник;
					
					НоваяСтрока.ВидНачисленияУдержания 	= Выборка.ВидНачисленияУдержания;
					НоваяСтрока.ДатаНачала 				= Выборка.ДатаДействияНачало;
					НоваяСтрока.ДатаОкончания 			= КонецМесяца;
					НоваяСтрока.Сумма 					= Выборка.Размер;
									
				КонецЕсли;
				
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЦикла;	
		
	РассчитатьСуммы();
	
КонецПроцедуры // ЗаполнитьПоОрганизации()

&НаСервере
// Процедура обновляет данные в подвале формы.
//
Процедура РассчитатьСуммы()
	
	Документ = РеквизитФормыВЗначение("Объект");
	СтруктураИтогов = Документ.ПолучитьСуммуДокумента();
	СуммаДокумента = СтруктураИтогов.СуммаДокумента;
	СуммаНачислено = СтруктураИтогов.СуммаНачислено;
	СуммаУдержано = СтруктураИтогов.СуммаУдержано;
	СуммаВзносов = СтруктураИтогов.СуммаВзносов;
	ЗначениеВРеквизитФормы(Документ, "Объект");
	
КонецПроцедуры // ОбновитьПодвалФормы()

#КонецОбласти