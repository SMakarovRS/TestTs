#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПоложениеВидаЗначения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		Для каждого Строки Из Показатели Цикл
			Строки.ВидЗначения = ВидЗначения;
		КонецЦикла;
	КонецЕсли;	
	
	Если ПоложениеДаты = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке ИЛИ НЕ ЗначениеЗаполнено(ПоложениеДаты) Тогда
		Для каждого Строки Из Показатели Цикл
			Если Строки.ДатаИзменения = Дата(1, 1, 1) Тогда
				Строки.ДатаИзменения = Дата;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Ошибки = Неопределено;
	
	Для каждого Строки Из Показатели Цикл
		Если НЕ Строки.Номенклатура.ВидНоменклатуры.ВестиУчетПоКарточкамНоменклатуры Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
				"Объект.Показатели", 
				СтрШаблон(НСтр("ru = 'Номенклатура %1 не может иметь показателей, т.к. по ней не ведется учет по карточкам'"), Строки.Номенклатура),
				"",
				Строки.НомерСтроки);
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Основание					= ДанныеЗаполнения;
	МассивКарточекНоменклатуры 	= Новый Массив;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИзменениеПоказателейОборудования") Тогда
		
		МассивКарточекНоменклатуры	= ДанныеЗаполнения.Показатели.Выгрузить().ВыгрузитьКолонку("КарточкаНоменклатуры");
		
		ВидЗначения					= ДанныеЗаполнения.ВидЗначения;	
		Если Не ЗначениеЗаполнено(ВидЗначения) Тогда
			
			ВидЗначения = УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеНастройки("ВидЗначенияИзменениеПоказателейОборудования");
			Если НЕ ЗначениеЗаполнено(ВидЗначения) Тогда
				ВидЗначения = Перечисления.ВидЗначенияПоказателяОборудования.УвеличениеПоказателяНаЗначение;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Поступление") Тогда
		
		Если Не ЗначениеЗаполнено(ВидЗначения) Тогда
			
			ВидЗначения = УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеНастройки("ВидЗначенияИзменениеПоказателейОборудования");
			Если НЕ ЗначениеЗаполнено(ВидЗначения) Тогда
				ВидЗначения = Перечисления.ВидЗначенияПоказателяОборудования.УвеличениеПоказателяНаЗначение;
			КонецЕсли;
			
		КонецЕсли;
		
		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			Если УправлениеITОтделом8УФПовтИсп.ВестиУчетПоКарточкамНоменклатуры(Строки.Номенклатура) Тогда
				МассивКарточекНоменклатуры.Добавить(Строки.КарточкаНоменклатуры);
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Задание") Тогда
		
		Организация			= ДанныеЗаполнения.Организация;
		Комментарий			= ДанныеЗаполнения.Тема;
		МассивКарточекНоменклатуры.Добавить(ДанныеЗаполнения.КарточкаНоменклатуры);
		
		Если Не ЗначениеЗаполнено(ВидЗначения) Тогда
			
			ВидЗначения = УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеНастройки("ВидЗначенияИзменениеПоказателейОборудования");
			Если НЕ ЗначениеЗаполнено(ВидЗначения) Тогда
				ВидЗначения = Перечисления.ВидЗначенияПоказателяОборудования.УвеличениеПоказателяНаЗначение;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОкончаниеОбслуживания") Тогда
		
		Организация			= ДанныеЗаполнения.Организация;
		ПоложениеВидаЗначения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
		
		Если Не ЗначениеЗаполнено(ВидЗначения) Тогда
			
			ВидЗначения = УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеНастройки("ВидЗначенияИзменениеПоказателейОборудования");
			Если НЕ ЗначениеЗаполнено(ВидЗначения) Тогда
				ВидЗначения = Перечисления.ВидЗначенияПоказателяОборудования.УвеличениеПоказателяНаЗначение;
			КонецЕсли;
			
		КонецЕсли;
		
		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			Если УправлениеITОтделом8УФПовтИсп.ВестиУчетПоКарточкамНоменклатуры(Строки.Номенклатура) Тогда
				МассивКарточекНоменклатуры.Добавить(Строки.КарточкаНоменклатуры);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если МассивКарточекНоменклатуры.Количество() > 0 Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ПоказателиОборудованияОбороты.ВидПоказателя,
			|	ПоказателиОборудованияОбороты.КарточкаНоменклатуры.Владелец КАК Номенклатура,
			|	ПоказателиОборудованияОбороты.КарточкаНоменклатуры,
			|	ПоказателиОборудованияОбороты.ЗначениеОборот КАК ПрошлоеЗначение,
			|	0 КАК Значение,
			|	&ВидЗначения
			|ИЗ
			|	РегистрНакопления.ПоказателиОборудования.Обороты(, , , КарточкаНоменклатуры В (&МассивКарточекНоменклатуры)) КАК ПоказателиОборудованияОбороты";
			
		Запрос.УстановитьПараметр("МассивКарточекНоменклатуры", МассивКарточекНоменклатуры);
		Запрос.УстановитьПараметр("ВидЗначения", ВидЗначения);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Показатели.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
		
		// Пройдемся по тем, которых нет в регистре.
		Для Каждого Элемент Из МассивКарточекНоменклатуры Цикл
			
			// Не найдено, добавим.
			Если Показатели.Найти(Элемент, "КарточкаНоменклатуры") = Неопределено И ЗначениеЗаполнено(Элемент) Тогда
				
				НоваяСтрока 						= Показатели.Добавить();
				НоваяСтрока.Номенклатура 			= Элемент.Владелец;
				НоваяСтрока.КарточкаНоменклатуры 	= Элемент;				
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	СЛС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	СЛС.ОтразитьДвиженияВРазделахУчета(Ссылка, ДополнительныеСвойства, Движения, Отказ);	
	
	// Запись наборов записей.
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);	
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции	

// Процедура заполняет значения показателей по Карточке номенклатуры и виду показателя.
//
// Параметры:
// 	ТЧ 					- Табличная часть документа.
//  СвернутьПоказатели  - Булево - Определяет, требуется ли сворачивать табличную часть.
//
Процедура ЗаполнитьЗначенияПоказателейТабличнойЧасти(ТЧ, СвернутьПоказатели = Ложь) Экспорт
	
	Если СвернутьПоказатели Тогда
		ТЧ.Свернуть("КарточкаНоменклатуры,ВидПоказателя", "Значение");
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПоказателиОборудованияОбороты.КарточкаНоменклатуры,
		|	ПоказателиОборудованияОбороты.ВидПоказателя,
		|	ПоказателиОборудованияОбороты.ЗначениеОборот КАК Значение
		|ИЗ
		|	РегистрНакопления.ПоказателиОборудования.Обороты КАК ПоказателиОборудованияОбороты
		|ГДЕ
		|	ПоказателиОборудованияОбороты.КарточкаНоменклатуры В(&СписокКарточкаНоменклатуры)
		|	И ПоказателиОборудованияОбороты.ВидПоказателя В(&ВидыПоказателей)";
	
	Запрос.УстановитьПараметр("СписокКарточкаНоменклатуры", ТЧ.ВыгрузитьКолонку("КарточкаНоменклатуры"));
	Запрос.УстановитьПараметр("ВидыПоказателей", ТЧ.ВыгрузитьКолонку("ВидПоказателя"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Для Каждого Строки Из ТЧ Цикл
			Если Строки.КарточкаНоменклатуры = Выборка.КарточкаНоменклатуры И Строки.ВидПоказателя = Выборка.ВидПоказателя Тогда
				Строки.Значение = Выборка.Значение;
				Прервать;
			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли