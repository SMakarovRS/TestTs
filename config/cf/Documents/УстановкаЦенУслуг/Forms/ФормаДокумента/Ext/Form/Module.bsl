
#Область ОписаниеПеременных

// СтандартныеПодсистемы.ОценкаПроизводительности
&НаКлиенте
Перем ИдентификаторЗамераПроведение;
// Конец СтандартныеПодсистемы.ОценкаПроизводительности

#КонецОбласти

&НаКлиенте
Процедура СервисыСервисПриИзменении(Элемент)
    
	ТекущиеДанные = Элементы.Сервисы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Элементы.Сервисы.ТекущиеДанные, ПриИзмененииСервиса(
		ТекущиеДанные.Сервис, Объект.Дата, Объект.Тариф));
    
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СЛС.ПриСозданииНаСервере(Объект, Отказ, СтандартнаяОбработка, Параметры, ЭтаФорма);	
	
	Если Объект.Ссылка.Пустая() Тогда
		// Документ создается из обработки "РабочийСтол".
		Если Параметры.Свойство("РабочийСтолЗначенияЗаполнения") Тогда
			ЗаполнитьЗначенияСвойств(Объект, Параметры.РабочийСтолЗначенияЗаполнения);
		КонецЕсли;

	КонецЕсли;
	
	#Область БСП_ПриСозданииНаСервере
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды	

	// ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ВерсионированиеОбъектов	
		
	#КонецОбласти
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Корректировки документа
	УправлениеITОтделом8УФКлиент.ОбновитьНадписьАвтор(Объект, ЭтаФорма);	

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
       ИдентификаторЗамераПроведение = ОценкаПроизводительностиКлиент.ЗамерВремени();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	// Корректировки документа
	УправлениеITОтделом8УФКлиент.ОбновитьНадписьАвтор(Объект, ЭтаФорма);
	Оповестить("Документ.УстановкаЦенУслуг");
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведение, 
			"ДокументУстановкаЦенУслуг (проведение)");	
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СЛС.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма);
        
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
    УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если ТекущийОбъект.ДатаСоздания = Дата(1, 1, 1) Тогда
		ТекущийОбъект.ДатаСоздания = ТекущаяДатаСеанса();
	Иначе
		ТекущийОбъект.ДатаКорректировки = ТекущаяДатаСеанса();
	КонецЕсли; 
	
	Если ТекущийОбъект.Автор = Справочники.Пользователи.ПустаяСсылка() Тогда
		ТекущийОбъект.Автор = Пользователи.ТекущийПользователь();
	Иначе
		ТекущийОбъект.АвторКорректировки = Пользователи.ТекущийПользователь();
	КонецЕсли; 
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СЛС.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма);
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВопросПередЗаполнениемТабличнойЧастиОбщаяЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьСервисыСервер(
			ДополнительныеПараметры.Очистить,
			ДополнительныеПараметры.Обновить,
			ДополнительныеПараметры.ПоСервисам,
			ДополнительныеПараметры.Группа);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСервисы(Очистить, Обновить, ПоСервисам = Ложь, Группа = Неопределено)
	
	Если Объект.Услуги.Количество() <> 0 
		И Очистить Тогда
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть будет очищена. Заполнить?'");
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Очистить", Очистить);
		ДополнительныеПараметры.Вставить("Обновить", Обновить);
		ДополнительныеПараметры.Вставить("ПоСервисам", ПоСервисам);
		ДополнительныеПараметры.Вставить("Группа", Группа);
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗаполнениемТабличнойЧастиОбщаяЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ЗаполнитьСервисыСервер(Очистить, Обновить, ПоСервисам, Группа);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСервисам(Команда)
    
    ЗаполнитьСервисы(Истина, Ложь, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоЦенамСервисов(Команда)
    
    ЗаполнитьСервисы(Ложь, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЦенуНаПроцент(Команда)
    
    Процент = 0;
    ПоказатьВводЗначения(Новый ОписаниеОповещения("ИзменитьЦенуНаПроцентЗавершение", ЭтотОбъект, Новый Структура("Процент", Процент)), Процент, нСтр("ru='Процент'", "ru"), Тип("Число"));
    
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЦенуНаПроцентЗавершение(Значение, ДополнительныеПараметры) Экспорт
    
   Процент = ?(Значение = Неопределено, ДополнительныеПараметры.Процент, Значение);
    
   Если Процент <> 0 И Процент <> Неопределено Тогда
       
       Для Каждого Строки Из Объект.Услуги Цикл
           
           Строки.Цена = Строки.Цена + Окр(Процент * Строки.Цена / 100);
           
       КонецЦикла; 
       
   КонецЕсли;  

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОдинаковуюЦену(Команда)
    
    Цена = 0;
    ПоказатьВводЗначения(Новый ОписаниеОповещения("УстановитьОдинаковуюЦенуЗавершение", ЭтотОбъект, Новый Структура("Цена", Цена)), Цена, нСтр("ru='Единая цена всех позиций'", "ru"), Тип("Число"));    
    
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОдинаковуюЦенуЗавершение(Значение, ДополнительныеПараметры) Экспорт
    
   Цена = ?(Значение = Неопределено, ДополнительныеПараметры.Процент, Значение);
    
   Если Цена <> 0 И Цена <> Неопределено Тогда
       
       Для Каждого Строки Из Объект.Услуги Цикл
           
           Строки.Цена = Цена;
           
       КонецЦикла; 
       
   КонецЕсли;  

КонецПроцедуры

&НаКлиенте
Процедура УдалитьНулевыеЦены(Команда)
    
    Индекс = Объект.Услуги.Количество() - 1;
    Пока Индекс >= 0 Цикл
        
        Строки = Объект.Услуги.Получить(Индекс);
    	Если Строки.Цена = 0 Тогда
        	Объект.Услуги.Удалить(Индекс);
        КонецЕсли; 
        Индекс = Индекс - 1;
        
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСервисуИЕгоДочернимСервисам(Команда)
	
	ОткрытьФорму("Справочник.Сервисы.ФормаВыбора",,,,,, Новый ОписаниеОповещения("ЗаполнитьПоСервисуИЕгоДочернимСервисамЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСервисуИЕгоДочернимСервисамЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		 ЗаполнитьСервисы(Истина, Ложь, Истина, Результат);
		 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	Объект.Услуги.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьАвторНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка= Ложь;
	Спк 				= УправлениеITОтделом8УФКлиент.ПолучитьСписокНадписьАвтор(Объект);	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НадписьАвторНажатиеЗавершение", ЭтотОбъект), 
		Спк, Элементы.НадписьАвтор, );
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура НадписьАвторНажатиеЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт    

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область БСП

// СтандартныеПодсистемы.Свойства
//@skip-warning
&НаСервере
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, 
	СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервереБезКонтекста
Функция ПриИзмененииСервиса(Сервис, Дата, Тариф)
	
	ВыходныеПараметры = Новый Структура("Цена,Валюта");
	
	Если НЕ ЗначениеЗаполнено(Тариф) Тогда

		// Ничего делать не надо
		Возврат ВыходныеПараметры;

	КонецЕсли;

	// Заполним все требуемые реквизиты
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаЦен", Дата);
	Запрос.УстановитьПараметр("Тариф", Тариф);
	Запрос.УстановитьПараметр("Сервис", Сервис);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныУслуг.Цена КАК Цена,
	|	ЦеныУслуг.Валюта КАК Валюта
	|ИЗ
	|	РегистрСведений.ЦеныУслуг.СрезПоследних(
	|			&ДатаЦен,
	|			Тариф = &Тариф
	|				И Услуга.Владелец = &Сервис) КАК ЦеныУслуг";

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ВыходныеПараметры.Цена   = 0;
		ВыходныеПараметры.Валюта = ВалютаЦены(Тариф);
	Иначе
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВыходныеПараметры.Цена   = Выборка.Цена;
			ВыходныеПараметры.Валюта = Выборка.Валюта;
		КонецЦикла;
	КонецЕсли;

	Возврат ВыходныеПараметры;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВалютаЦены(Знач Тариф)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Тариф, "Валюта");
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСервисыСервер(Очистить, Обновить, ПоСервисам = Ложь, Группа = Неопределено)
	
	Если Очистить Тогда
		Объект.Услуги.Очистить();
	КонецЕсли;
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	// Заполним все требуемые реквизиты
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаЦен", Объект.Дата);
	Запрос.УстановитьПараметр("Тариф",  Объект.Тариф);
	Запрос.УстановитьПараметр("Ложь",    Ложь);
	Запрос.УстановитьПараметр("Группа",  Группа);
	Текст =
		"ВЫБРАТЬ
		|	ЦеныСервисовСрезПоследних.Тариф КАК Тариф,
		|	ЦеныСервисовСрезПоследних.Услуга.Владелец КАК Сервис,
		|	ЦеныСервисовСрезПоследних.Услуга КАК Услуга,
		|	ЦеныСервисовСрезПоследних.Валюта КАК Валюта,
		|	ЦеныСервисовСрезПоследних.Цена КАК Цена
		|ПОМЕСТИТЬ ВТЦеныСервисов
		|ИЗ
		|	РегистрСведений.ЦеныУслуг.СрезПоследних(&ДатаЦен, Тариф = &Тариф) КАК ЦеныСервисовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Услуги.Владелец КАК Сервис,
		|	Услуги.Ссылка КАК Услуга,
		|	ВЫБОР
		|		КОГДА ЦеныСервисов.Цена ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ЦеныСервисов.Цена
		|	КОНЕЦ КАК Цена,
		|	ВЫБОР
		|		КОГДА ЦеныСервисов.Валюта ЕСТЬ NULL
		|			ТОГДА ТарифыСправочник.Валюта
		|		ИНАЧЕ ЦеныСервисов.Валюта
		|	КОНЕЦ КАК Валюта
		|ИЗ
		|	Справочник.Услуги КАК Услуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦеныСервисов КАК ЦеныСервисов
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Тарифы КАК ТарифыСправочник
		|			ПО ЦеныСервисов.Тариф = ТарифыСправочник.Ссылка
		|		ПО Услуги.Ссылка = ЦеныСервисов.Услуга
		|			И Услуги.Владелец = ЦеныСервисов.Сервис
		|ГДЕ
		|	Услуги.Статус = Значение(Перечисление.СтатусыУслуг.ВРаботе)
		|	И Услуги.Владелец.Статус = Значение(Перечисление.СтатусыСервисов.ВРаботе)
		|	И ИСТИНА";
	
	Если НЕ ПоСервисам Тогда
		Текст = Текст +                  
		" И
		|	ТарифыСправочник.Ссылка = &Тариф	
		|";
	КонецЕсли;
	Если ЗначениеЗаполнено(Группа) Тогда
		Текст = Текст + 
		" И
		|	Услуги.Владелец В ИЕРАРХИИ (&Группа)
		|";
	КонецЕсли;
	Запрос.Текст = Текст;
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВалютаПоТипуЦен = ВалютаЦены(Объект.Тариф);
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураОтбора = Новый Структура();
		СтруктураОтбора.Вставить("Сервис", Выборка.Сервис);
		СтруктураОтбора.Вставить("Услуга", Выборка.Услуга);
		
		СтрокиТабличнойЧасти = Объект.Услуги.НайтиСтроки(СтруктураОтбора);
		Если СтрокиТабличнойЧасти.Количество() = 0 Тогда
			Если Обновить Тогда
				Продолжить;
			Иначе
				СтрокаТабличнойЧасти = Объект.Услуги.Добавить();
				СтрокаТабличнойЧасти.Сервис = Выборка.Сервис;
				СтрокаТабличнойЧасти.Услуга = Выборка.Услуга;
			КонецЕсли;
		Иначе
			СтрокаТабличнойЧасти = СтрокиТабличнойЧасти[0];
		КонецЕсли;
		СтрокаТабличнойЧасти.Цена   = Выборка.Цена;
		СтрокаТабличнойЧасти.Валюта = Выборка.Валюта;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Валюта) Тогда
			СтрокаТабличнойЧасти.Валюта = ВалютаПоТипуЦен;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти