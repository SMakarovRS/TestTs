#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = Оплата.Итог("Сумма");	
		
	Если (ПоложениеСтатьиДоходовРасходов = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке)
		ИЛИ (НЕ ЗначениеЗаполнено(ПоложениеСтатьиДоходовРасходов)) Тогда
		
		Для Каждого СтрокаТабличнойЧасти Из Оплата Цикл
			СтрокаТабличнойЧасти.СтатьяДоходовРасходов = СтатьяДоходовРасходов;
		КонецЦикла;
	Иначе		
		Если Оплата.Количество() > 0 Тогда
			СтатьяДоходовРасходов = Оплата[0].СтатьяДоходовРасходов;
		КонецЕсли;
	КонецЕсли;	
	
	Если (ПоложениеПодразделения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке) 
		ИЛИ (НЕ ЗначениеЗаполнено(ПоложениеПодразделения)) Тогда
		
		Для Каждого СтрокаТабличнойЧасти Из Оплата Цикл
			СтрокаТабличнойЧасти.Подразделение = Подразделение;
		КонецЦикла;
	Иначе		
		Если Оплата.Количество() > 0 Тогда
			Подразделение = Оплата[0].Подразделение;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда	
		Возврат;		
	КонецЕсли;
	
	Если ВидДокумента <> Перечисления.ВидДокументаУчетДенежныхСредств.ЗаработнаяПлата
		Или Не ЗначениеЗаполнено(ВидДокумента) Тогда 
		ПроверяемыеРеквизиты.Добавить("Контрагент");
	КонецЕсли;
	
	Для Каждого Строка Из Оплата Цикл
		Если Не ЗначениеЗаполнено(Строка.Заказ) И Не ЗначениеЗаполнено(Строка.ОплачиваемыйДокумент) Тогда
			ПроверяемыеРеквизиты.Добавить("Оплата.ОплачиваемыйДокумент");
		КонецЕсли;	
	КонецЦикла;
	
	ПроверяемыеРеквизиты.Добавить("ВидДокумента");
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	СЛС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);	
	
	// Подготовка наборов записей.
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	СЛС.ОтразитьДвиженияВРазделахУчета(Ссылка, ДополнительныеСвойства, Движения, Отказ);
		
	// Запись наборов записей.
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,, "Номер, Дата, Проведен");
		Основание					= ДанныеЗаполнения;
		ПоложениеСтатьиДоходовРасходов		= ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
		ПоложениеПодразделения		= ДанныеЗаполнения.ПоложениеПодразделения;
		ВидДвижения 				= Перечисления.ВидыДоходовРасходов.Расход;
		Подразделение				= ДанныеЗаполнения.Подразделение;
		СтатьяДоходовРасходов		= ДанныеЗаполнения.СтатьяДоходовРасходов;
		БюджетыПоОплачиваемымДокументам = Истина;
		ВидДокумента					= Перечисления.ВидДокументаУчетДенежныхСредств.ОплатаПоставщику;
		
		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			
			НоваяСтрока						= Оплата.Добавить();			
			НоваяСтрока.Заказ				= Основание;
			НоваяСтрока.Описание			= Строки.Номенклатура;			
			НоваяСтрока.Сумма				= Строки.Всего;
			НоваяСтрока.СтатьяДоходовРасходов = 
				?(ПоложениеСтатьиДоходовРасходов = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, 
				СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
			НоваяСтрока.Подразделение		= ?(ПоложениеПодразделения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке,
				Подразделение, Строки.Подразделение);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,, "Номер, Дата, Проведен");
		Основание					= ДанныеЗаполнения;
		ПоложениеСтатьиДоходовРасходов= ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
		ВидДвижения 				= Перечисления.ВидыДоходовРасходов.Доход;
		СтатьяДоходовРасходов		= ДанныеЗаполнения.СтатьяДоходовРасходов;
		БюджетыПоОплачиваемымДокументам = Истина;
		ВидДокумента					= Перечисления.ВидДокументаУчетДенежныхСредств.ОплатаПокупателя;
		
		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			
			НоваяСтрока						= Оплата.Добавить();			
			НоваяСтрока.Заказ				= Основание;
			НоваяСтрока.Описание			= Строки.Номенклатура;			
			НоваяСтрока.Сумма				= Строки.Всего;
			НоваяСтрока.СтатьяДоходовРасходов = ?(ПоложениеСтатьиДоходовРасходов = 
				Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Поступление") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,, "Номер, Дата, Проведен");
		Основание						= ДанныеЗаполнения;
		ПоложениеСтатьиДоходовРасходов			= ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
		ПоложениеПодразделения			= ДанныеЗаполнения.ПоложениеПодразделения;
		ВидДвижения						= Перечисления.ВидыДоходовРасходов.Расход;
		Подразделение					= ДанныеЗаполнения.Подразделение;
		СтатьяДоходовРасходов			= ДанныеЗаполнения.СтатьяДоходовРасходов;
		БюджетыПоОплачиваемымДокументам = Истина;
		ВидДокумента					= Перечисления.ВидДокументаУчетДенежныхСредств.ОплатаПоставщику;
		
		// Номенклатура.
		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			
			НоваяСтрока						= Оплата.Добавить();
			НоваяСтрока.ОплачиваемыйДокумент= Основание;
			НоваяСтрока.Описание			= Строки.Номенклатура;			
			НоваяСтрока.Сумма				= Строки.Всего;
			НоваяСтрока.СтатьяДоходовРасходов = 
				?(ПоложениеСтатьиДоходовРасходов = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, 
				СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
				
			НоваяСтрока.Подразделение = 
				?(ПоложениеПодразделения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, 
				Подразделение, Строки.Подразделение);
			
		КонецЦикла;
		
		// Услуги.
		Для Каждого Строки Из ДанныеЗаполнения.Услуги Цикл
			
			НоваяСтрока						= Оплата.Добавить();
			НоваяСтрока.ОплачиваемыйДокумент= Основание;				
			НоваяСтрока.Описание			= Строки.Номенклатура;
			НоваяСтрока.Сумма				= Строки.Всего;
			НоваяСтрока.СтатьяДоходовРасходов = 
				?(ПоложениеСтатьиДоходовРасходов  = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, 
				СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
				
			НоваяСтрока.Подразделение = ?(ПоложениеПодразделения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке,
				Подразделение, Строки.Подразделение);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОкончаниеОбслуживания") Тогда
		
		Если ДанныеЗаполнения.ВидОкончанияОбслуживания = Перечисления.ВидыОкончанияОбслуживания.ОбслуживаниеКонтрагентом
				ИЛИ ДанныеЗаполнения.ВидОкончанияОбслуживания = 
					Перечисления.ВидыОкончанияОбслуживания.ОбслуживаниеКонтрагентомПроизведеноСразу Тогда
					
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,, 
				"Номер, Дата, Проведен, Автор, ДатаСоздания, АвторКорректировки, ДатаКорректировки");
			
			Основание					= ДанныеЗаполнения;			
			ВидДвижения					= Перечисления.ВидыДоходовРасходов.Расход;
			ПоложениеСтатьиДоходовРасходов		= ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
			ПоложениеПодразделения		= ДанныеЗаполнения.ПоложениеПодразделения;
			Подразделение				= ДанныеЗаполнения.Подразделение;
			СтатьяДоходовРасходов		= ДанныеЗаполнения.СтатьяДоходовРасходов;
			БюджетыПоОплачиваемымДокументам = Истина;
			ВидДокумента					= Перечисления.ВидДокументаУчетДенежныхСредств.ОплатаПоставщику;
			
			Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
				
				Если Строки.Событие = Перечисления.СобытиеОбслуживания.Добавление Тогда
					НоваяСтрока						= Оплата.Добавить();
					НоваяСтрока.ОплачиваемыйДокумент= Основание;
					НоваяСтрока.СтатьяДоходовРасходов = 
						?(ПоложениеСтатьиДоходовРасходов  = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, 
						СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
						
					НоваяСтрока.Подразделение	= ?(ПоложениеПодразделения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке,
						Подразделение, Строки.Подразделение);
						
					НоваяСтрока.Описание		= Строки.Номенклатура;
					НоваяСтрока.Сумма			= Строки.Всего;
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого Строки Из ДанныеЗаполнения.Услуги Цикл
				
				НоваяСтрока						 = Оплата.Добавить();
				НоваяСтрока.ОплачиваемыйДокумент = Основание;
				НоваяСтрока.СтатьяДоходовРасходов = 
					?(ПоложениеСтатьиДоходовРасходов  = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, 
					СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
					
				НоваяСтрока.Подразделение = 
					?(ПоложениеПодразделения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, 
					Подразделение, Строки.Подразделение);
					
				НоваяСтрока.Описание			= Строки.Номенклатура;
				НоваяСтрока.Сумма				= Строки.Всего;
				
			КонецЦикла;			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.НачалоОбслуживания") Тогда
		
		Если ДанныеЗаполнения.ВидНачалаОбслуживания = Перечисления.ВидыНачалаОбслуживания.ОбслуживаниеКонтрагентом Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,
				"Номер, Дата, Проведен, Автор, ДатаСоздания, АвторКорректировки, ДатаКорректировки");
			
			Основание					= ДанныеЗаполнения;			
			ВидДвижения					= Перечисления.ВидыДоходовРасходов.Расход;
			ПоложениеСтатьиДоходовРасходов = ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
			ПоложениеПодразделения		= ДанныеЗаполнения.ПоложениеПодразделения;
			Подразделение				= ДанныеЗаполнения.Подразделение;
			СтатьяДоходовРасходов		= ДанныеЗаполнения.СтатьяДоходовРасходов;
			БюджетыПоОплачиваемымДокументам = Истина;
			ВидДокумента					= Перечисления.ВидДокументаУчетДенежныхСредств.ОплатаПоставщику;
			
			Для Каждого Строки Из ДанныеЗаполнения.Услуги Цикл
				
				НоваяСтрока						= Оплата.Добавить();
				НоваяСтрока.ОплачиваемыйДокумент = Основание;
				НоваяСтрока.СтатьяДоходовРасходов = 
					?(ПоложениеСтатьиДоходовРасходов  = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке,
					СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
					
				НоваяСтрока.Подразделение		= ?(ПоложениеПодразделения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке,
					Подразделение, Строки.Подразделение);
					
				НоваяСтрока.Описание			= Строки.Номенклатура;
				НоваяСтрока.Сумма				= Строки.Всего;
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Продажа") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,, 
			"Номер, Дата, Проведен, Автор, ДатаСоздания, АвторКорректировки, ДатаКорректировки");
		
		Основание					= ДанныеЗаполнения;
		ВидДвижения					= Перечисления.ВидыДоходовРасходов.Доход;
		ПоложениеСтатьиДоходовРасходов = ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
		ПоложениеПодразделения		= Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
		Подразделение				= ДанныеЗаполнения.Подразделение;
		СтатьяДоходовРасходов		= ДанныеЗаполнения.СтатьяДоходовРасходов;
		БюджетыПоОплачиваемымДокументам = Истина;
		ВидДокумента					= Перечисления.ВидДокументаУчетДенежныхСредств.ОплатаПокупателя;
		
		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			
			НоваяСтрока						= Оплата.Добавить();
			НоваяСтрока.ОплачиваемыйДокумент= Основание;
			НоваяСтрока.СтатьяДоходовРасходов = 
				?(ПоложениеСтатьиДоходовРасходов  = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, 
				СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
				
			НоваяСтрока.Подразделение		= Подразделение;
			НоваяСтрока.Описание			= Строки.Номенклатура;
			НоваяСтрока.Сумма				= Строки.Всего;
			
		КонецЦикла;
		
		Для Каждого Строки Из ДанныеЗаполнения.Услуги Цикл
			
			НоваяСтрока						= Оплата.Добавить();
			НоваяСтрока.ОплачиваемыйДокумент= Основание;
			НоваяСтрока.СтатьяДоходовРасходов = 
				?(ПоложениеСтатьиДоходовРасходов  = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке,
				СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
				
			НоваяСтрока.Подразделение		= Подразделение;
			НоваяСтрока.Описание			= Строки.Номенклатура;
			НоваяСтрока.Сумма				= Строки.Всего;
			
		КонецЦикла;		
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.НарядНаРаботы") Тогда
				
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,, 
			"Номер, Дата, Проведен, Автор, ДатаСоздания, АвторКорректировки, ДатаКорректировки");
		
		Основание						= ДанныеЗаполнения;
		ВидДвижения						= Перечисления.ВидыДоходовРасходов.Доход;
		ВидДокумента					= Перечисления.ВидДокументаУчетДенежныхСредств.ОплатаПокупателя;
		БюджетыПоОплачиваемымДокументам = Истина;
		ЗаполнитьПоНарядуНаРаботы(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЛистУчетаРабочегоВремени") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, ,
			"Номер, Дата, Проведен, Автор, ДатаСоздания, АвторКорректировки, ДатаКорректировки");
		
		Основание	= ДанныеЗаполнения;
		ВидДвижения	= Перечисления.ВидыДоходовРасходов.Доход;
		
		Для Каждого Строки Из ДанныеЗаполнения.НарядыНаРаботы Цикл
			
			ЗаполнитьПоНарядуНаРаботы(Строки.Наряд);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Задание") Тогда
		
		Организация						= ДанныеЗаполнения.Организация;
		Комментарий						= ДанныеЗаполнения.Тема;
		Основание						= ДанныеЗаполнения;
		ПоложениеСтатьиДоходовРасходов 	= ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
		ВидДвижения						= Перечисления.ВидыДоходовРасходов.Доход;
		ВидДокумента					= Перечисления.ВидДокументаУчетДенежныхСредств.ОплатаПокупателя;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.НачислениеЗаработнойПлаты") Тогда 
		
		Организация								= ДанныеЗаполнения.Организация;
		Подразделение							= ДанныеЗаполнения.Подразделение;
		ВидДокумента							= Перечисления.ВидДокументаУчетДенежныхСредств.ЗаработнаяПлата;
		СтатьяДоходовРасходов					= ДанныеЗаполнения.СтатьяДоходовРасходов;
		Бюджет									= ДанныеЗаполнения.Бюджет;
		ПериодБюджета							= ДанныеЗаполнения.ПериодБюджета;
		Комментарий								= ДанныеЗаполнения.Комментарий;
		Основание								= ДанныеЗаполнения; 
		НомерВходящегоДокумента					= ДанныеЗаполнения.Номер;
		ДатаВходящегоДокумента					= ДанныеЗаполнения.Дата;
				
		НоваяСтрока								= Оплата.Добавить();
		НоваяСтрока.ОплачиваемыйДокумент		= ДанныеЗаполнения;
		НоваяСтрока.Подразделение				= ДанныеЗаполнения.Подразделение;
		НоваяСтрока.Сумма						= ДанныеЗаполнения.СуммаДокумента;
		
		Для Каждого Строки Из ДанныеЗаполнения.НачисленияУдержания Цикл
			НоваяСтрока							= ЗаработнаяПлата.Добавить();
			НоваяСтрока.Сотрудник				= Строки.Сотрудник;
			НоваяСтрока.Подразделение			= ДанныеЗаполнения.Подразделение;
			НоваяСтрока.СтатьяДоходовРасходов	= ДанныеЗаполнения.СтатьяДоходовРасходов;
			НоваяСтрока.МесяцНачисления			= ДанныеЗаполнения.МесяцНачисления;
			НоваяСтрока.ВидНачисленияУдержания	= Строки.ВидНачисленияУдержания;
			НоваяСтрока.Сумма					= Строки.Сумма;
			НоваяСтрока.Регистратор				= ДанныеЗаполнения;
		КонецЦикла;
		
		Для Каждого Строки Из ДанныеЗаполнения.НалогиНаДоходы Цикл
			НоваяСтрока							= ЗаработнаяПлата.Добавить();
			НоваяСтрока.Сотрудник				= Строки.Сотрудник;
			НоваяСтрока.Подразделение			= ДанныеЗаполнения.Подразделение;
			НоваяСтрока.СтатьяДоходовРасходов	= ДанныеЗаполнения.СтатьяДоходовРасходов;
			НоваяСтрока.МесяцНачисления			= ДанныеЗаполнения.МесяцНачисления;
			НоваяСтрока.ВидНачисленияУдержания	= Строки.ВидНачисленияУдержания;
			НоваяСтрока.Сумма					= Строки.Сумма;
			НоваяСтрока.Регистратор				= ДанныеЗаполнения;
		КонецЦикла;
		
		Для Каждого Строки Из ДанныеЗаполнения.СтраховыеВзносы Цикл
			НоваяСтрока							= СтраховыеВзносы.Добавить();
			НоваяСтрока.Сотрудник				= Строки.Сотрудник;
			НоваяСтрока.МесяцНачисления			= ДанныеЗаполнения.МесяцНачисления;
			НоваяСтрока.ВидНачисленияУдержания	= Строки.ВидНачисленияУдержания;
			НоваяСтрока.Сумма					= Строки.Сумма;
			НоваяСтрока.Регистратор				= ДанныеЗаполнения;
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти	

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоНарядуНаРаботы(ДанныеЗаполнения)
		
	Для Каждого Строки Из ДанныеЗаполнения.Работы Цикл
		
		Если Строки.Всего > 0 Тогда
			НоваяСтрока							= Оплата.Добавить();
			НоваяСтрока.ОплачиваемыйДокумент	= Основание;
			НоваяСтрока.СтатьяДоходовРасходов 	= 
				?(ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов  = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке,
				ДанныеЗаполнения.СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
				
			НоваяСтрока.Подразделение			= 
				?(ДанныеЗаполнения.ПоложениеРеквизитаПользователь  = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке,
				ДанныеЗаполнения.Подразделение, Строки.Подразделение);
				
			НоваяСтрока.Описание				= Строки.Услуга;
			НоваяСтрока.Сумма					= Строки.Всего;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
		
		Если Строки.Всего > 0 Тогда
			НоваяСтрока							= Оплата.Добавить();
			НоваяСтрока.ОплачиваемыйДокумент	= Основание;
			НоваяСтрока.СтатьяДоходовРасходов 	= 
				?(ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов  = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке,
				ДанныеЗаполнения.СтатьяДоходовРасходов, Строки.СтатьяДоходовРасходов);
				
			НоваяСтрока.Подразделение			= Строки.Подразделение;
			НоваяСтрока.Описание				= Строки.Номенклатура;
			НоваяСтрока.Сумма					= Строки.Всего;
		КонецЕсли;
		
    КонецЦикла;   
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"), 
		?(ЗначениеЗаполнено(Данные.ВидДокумента), Строка(Данные.ВидДокумента), 
			НСтр("ru = 'Учет денежных средств'")),
		Данные.Номер,
		Данные.Дата);
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ВидДокумента");
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли