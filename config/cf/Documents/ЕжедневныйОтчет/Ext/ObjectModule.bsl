#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
//////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Приводим время к нужному формату.
	Если Работы.Количество() > 0 Тогда
		ДатаНачала = Дата(2099, 1, 1);
		ДатаОкончания = Дата(1, 1, 1);
				
		Для Каждого Строки Из Работы Цикл
			
			Если ПоложениеДаты = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке 
				ИЛИ НЕ ЗначениеЗаполнено(ПоложениеДаты) Тогда
				Строки.ДатаРаботы = Дата;
			КонецЕсли;
			
			ВремДатаНачала = НачалоДня(Строки.ДатаРаботы) 
				+ Час(Строки.ВремяНачала) * 3600 + Минута(Строки.ВремяНачала) * 60;
			ВремДатаОкончания = НачалоДня(Строки.ДатаРаботы) 
				+ Час(Строки.ВремяОкончания) * 3600 + Минута(Строки.ВремяОкончания) * 60;
			
			Строки.ВремяНачала 		= ВремДатаНачала; 
			Строки.ВремяОкончания 	= ВремДатаОкончания;
			Строки.Длительность		= ВремДатаОкончания - ВремДатаНачала;
				
			Часы 	= Цел(Строки.Длительность / 3600);
			Минуты 	= (Строки.Длительность - Часы * 3600) / 60;
			Если Час(ВремДатаОкончания) = 23 И Минута(ВремДатаОкончания) = 59 Тогда
				Строки.ВремяОкончания = Строки.ВремяОкончания + 59;
				Строки.Длительность	= Строки.Длительность + 59;
				Секунды = 59;
			Иначе
				Секунды = 0;
			КонецЕсли;
			Строки.ДлительностьВремя = Дата(0001, 01, 01, Часы, Минуты, Секунды);
			
			Если ДатаНачала > ВремДатаНачала Тогда
				ДатаНачала = ВремДатаНачала;
			КонецЕсли;
			Если ДатаОкончания < ВремДатаОкончания Тогда
				ДатаОкончания = ВремДатаОкончания;
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		ДатаНачала = Дата(1, 1, 1);
		ДатаОкончания = Дата(1, 1, 1);		
	КонецЕсли;
	
	ПредставлениеДлительности = ТрудозатратыСервер.ПредставлениеПериодаЕжедневногоОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Инициализация дополнительных свойств для проведения документа.
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.	
	СЛС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);	
	
	// Подготовка наборов записей.
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.	
	СЛС.ОтразитьДвиженияВРазделахУчета(Ссылка, ДополнительныеСвойства, Движения, Отказ);	
	
	// Запись наборов записей.
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
		
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	// Инициализация дополнительных свойств для удаления проведения документа
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЕжедневныйОтчет") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,
			"Номер, Дата, Проведен, Автор, ДатаСоздания, АвторКорректировки, ДатаКорректировки");	
		                                         
		Работы.Загрузить(ДанныеЗаполнения.Работы.Выгрузить());
		
		Для Каждого Строки Из Работы Цикл
			
			Строки.ДатаРаботы 		= НачалоДня(Дата);
			Строки.ВремяНачала 		= НачалоДня(Дата) 
				+ Час(Строки.ВремяНачала) * 3600 + Минута(Строки.ВремяНачала) * 60;
			Строки.ВремяОкончания 	= НачалоДня(Дата) 
				+ Час(Строки.ВремяОкончания) * 3600 + Минута(Строки.ВремяОкончания) * 60;
			Строки.Длительность		= Строки.ВремяОкончания - Строки.ВремяНачала;
				
			Часы = Цел(Строки.Длительность / 3600);
			Минуты = (Строки.Длительность - Часы * 3600) / 60;
		
			Строки.ДлительностьВремя = Дата(0001, 01, 01, Часы, Минуты, 0);
			
		КонецЦикла;		

	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Ошибки = Неопределено;
	
	Если ПоложениеДаты <> Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
				
		Для Каждого Строки Из Работы Цикл
			
			Если Строки.ВремяНачала > Строки.ВремяОкончания Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, 
					"Объект.Работы["
						+ Формат(Строки.НомерСтроки - 1, "ЧДЦ=; ЧС=; ЧРД=; ЧРГ=; ЧН=0; ЧГ=") + "].ВремяНачала", 
					НСтр("ru = 'Время начала работ в строке табличной части Работы больше времени окончания'"), 
					"Работы", 
					Строки.НомерСтроки, 
					НСтр("ru = 'Время начала работ в строке табличной части Работы больше времени окончания'"), 
					Строки.НомерСтроки);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗаполнитьПриКопировании();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет документ при копировании.
//
Процедура ЗаполнитьПриКопировании()
	
	Автор						= Справочники.Пользователи.ПустаяСсылка();
	АвторКорректировки			= Справочники.Пользователи.ПустаяСсылка();
	ДатаКорректировки			= Дата(1, 1, 1);
	ДатаСоздания				= ТекущаяДатаСеанса();	
	
	Для Каждого Строки Из Работы Цикл
		
		Строки.ВремяНачала 		= НачалоДня(ТекущаяДатаСеанса()) 
			+ Час(Строки.ВремяНачала) * 3600 + Минута(Строки.ВремяНачала) * 60;
		Строки.ВремяОкончания 	= НачалоДня(ТекущаяДатаСеанса()) 
			+ Час(Строки.ВремяОкончания) * 3600 + Минута(Строки.ВремяОкончания) * 60;
		Строки.Длительность		= Строки.ВремяОкончания - Строки.ВремяНачала;
			
		Часы = Цел(Строки.Длительность / 3600);
		Минуты = (Строки.Длительность - Часы * 3600) / 60;
	
		Строки.ДлительностьВремя = Дата(0001, 01, 01, Часы, Минуты, 0);
		
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли