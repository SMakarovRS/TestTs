#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
// Функция возвращает список имен «ключевых» реквизитов.
//
// Возвращаемое значение:
//  Массив - массив блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;	
	Возврат Результат;
	
КонецФункции // ПолучитьБлокируемыеРеквизитыОбъекта()

// Возвращает список реквизитов, которые разрешается редактировать,
// с помощью обработки группового изменения объектов.
//
// Возвращаемое значение:
//  Массив - массив реквизитов, редактируемых при групповой обработке.
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	РедактируемыеРеквизиты = Новый Массив;
	Возврат РедактируемыеРеквизиты;
	
КонецФункции

#Область ПравилаСобытий

// Функция - Все условия правил событий для объекта.
// 
// Возвращаемое значение:
//  Соответствие - соответствие с условиями.
//
Функция УсловияПравилаСобытий() Экспорт
	
	СоответствиеИзменениеОбъекта = Новый Соответствие;
	СоответствиеИзменениеОбъекта.Вставить("ПричиныОтклоненияОтГрафикаИзменениеОбъектаПроведение", 
		НСтр("ru = 'Проведение'"));
	
	СоответствиеПериодическоеСобытие = Новый Соответствие;
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить("СоответствиеИзменениеОбъекта", 	  СоответствиеИзменениеОбъекта);
	Соответствие.Вставить("СоответствиеПериодическоеСобытие", СоответствиеПериодическоеСобытие);
	
	Возврат Соответствие;
	
КонецФункции

// Функция - Проверка условия правила события.
//
// Параметры:
//  ПравилоСобытия	 - СправочникСсылка.ПравилаСобытий	 - правило проверки.
//  ИмяСобытия		 - Строка	 - имя проверки.
//  Структура		 - Структура	 - источник события и другая информация.
//	Источник         -
// 
// Возвращаемое значение:
//   - 
//
Функция ПроверкаУсловияПравилаСобытия(Знач ПравилоСобытия, Знач Структура, Знач Источник) Экспорт
	
	Результат = Ложь;
	ИмяСобытия = ПравилоСобытия.ПроверкаРеквизитовОбъектаИмяУсловия;
	
	Если ИмяСобытия = "ПричиныОтклоненияОтГрафикаИзменениеОбъектаПроведение" Тогда
		
		Если Структура.ЭтоНовый И Источник.Проведен Тогда
			Результат = Истина;
		Иначе
			ИсточникПередЗаписью = Структура.ИсточникПередЗаписью;
			Если Источник.Проведен <> ИсточникПередЗаписью.Проведен И ИсточникПередЗаписью.Проведен = Истина Тогда
				Результат = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ЗаполнениеОбъектов
// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗаполнениеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом
// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ИнтерфейсПечати
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ ФОРМЫ

// Функция печати документа.
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	СтруктураЗаполнения = Новый Структура;
	ТабличныйДокумент   = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПричиныОтклоненияГрафика";
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		НомерДокумента	= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ТекущийДокумент.Номер, Истина, Истина); 
		
		Если ИмяМакета = "ЗаявлениеНаОтпуск" Тогда 
			Если ТипЗнч(ТекущийДокумент.ОбъектОтклонения) = Тип("СправочникСсылка.Пользователи") 
				И ТекущийДокумент.ВидПричины = Справочники.ВидыПричинОтклоненияОтГрафика.Отпуск Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	Пользователи.Сотрудник КАК Сотрудник,
					|	Пользователи.Сотрудник.Организация КАК Организация
					|ИЗ
					|	Справочник.Пользователи КАК Пользователи
					|ГДЕ
					|	Пользователи.Ссылка = &Ссылка";
				
				Запрос.УстановитьПараметр("Ссылка", ТекущийДокумент.ОбъектОтклонения);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Организация	= ВыборкаДетальныеЗаписи.Организация;
					Сотрудник	= ВыборкаДетальныеЗаписи.Сотрудник;
				КонецЦикла;
				
				Если ЗначениеЗаполнено(Сотрудник) Тогда 
					ФИОСотрудник    = СклонениеПредставленийОбъектов.ПросклонятьФИО(Сотрудник.Наименование,2);
					ФИОСотрудник	= ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИОСотрудник);
					Если Организация <> Неопределено И ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда 
						СведенияОбОрганизации	= УправлениеITОтделом8УФ.СведенияОЮрФизЛице(Организация, ТекущийДокумент.Дата, ,);
						СтруктураРуководители	= УправлениеITОтделом8УФ.ОтветственныеЛицаОрганизационнойЕдиницы(Организация, 
							ТекущийДокумент.Дата);
						Если СтруктураРуководители.Руководитель <> Неопределено Тогда 
							ФИОДиректора			= СклонениеПредставленийОбъектов.ПросклонятьФИО(СтруктураРуководители.Руководитель,3);
							ФИОДиректора			= ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИОДиректора);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПричиныОтклоненияОтГрафика.ПФ_MXL_ЗаявлениеНаОтпуск");	
				ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПричиныОтклоненияОтГрафика_ЗаявлениеНаОтпуск";
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Шапка");
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ДатаИВремяПечати", ТекущаяДатаСеанса()));
				Если СведенияОбОрганизации <> Неопределено Тогда
					ОбластьМакета.Параметры.Заполнить(Новый Структура("Организация", СведенияОбОрганизации.ПолноеНаименование));
				КонецЕсли;
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ФИОДиректора", ФИОДиректора));
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ФИОСотрудник", ФИОСотрудник));				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Тело");
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ДатаНачала",		Формат(ТекущийДокумент.ДатаНачала, "ДЛФ=ДД")));
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ДатаОкончания",	Формат(ТекущийДокумент.ДатаОкончания, "ДЛФ=ДД")));
				Продолжительность = (НачалоДня(ТекущийДокумент.ДатаОкончания) - НачалоДня(ТекущийДокумент.ДатаНачала)) / (60 * 60 * 24);
				ОбластьМакета.Параметры.Заполнить(Новый Структура("Продолжительность", Продолжительность));
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Если НЕ ПустаяСтрока(ТекущийДокумент.Комментарий) Тогда 
					ОбластьМакета                         = Макет.ПолучитьОбласть("Комментарий");
					ОбластьМакета.Параметры.Заполнить(Новый Структура("Комментарий", "Комментарий: " + ТекущийДокумент.Комментарий));
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Подвал");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			Иначе
				
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПричиныОтклоненияОтГрафика.ПФ_MXL_ЗаявлениеНаОтпуск");	
				ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПричиныОтклоненияОтГрафика_ЗаявлениеНаОтпуск"; 
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Предупреждение");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;
			
		ИначеЕсли ИмяМакета = "ЗаявлениеНаОтпускБезСодержания" Тогда
			Если ТипЗнч(ТекущийДокумент.ОбъектОтклонения) = Тип("СправочникСсылка.Пользователи") 
				И ТекущийДокумент.ВидПричины = Справочники.ВидыПричинОтклоненияОтГрафика.ОтпускБезСохраненияЗаработнойПлаты Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	Пользователи.Сотрудник КАК Сотрудник,
					|	Пользователи.Сотрудник.Организация КАК Организация
					|ИЗ
					|	Справочник.Пользователи КАК Пользователи
					|ГДЕ
					|	Пользователи.Ссылка = &Ссылка";
				
				Запрос.УстановитьПараметр("Ссылка", ТекущийДокумент.ОбъектОтклонения);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Организация	= ВыборкаДетальныеЗаписи.Организация;
					Сотрудник	= ВыборкаДетальныеЗаписи.Сотрудник;
				КонецЦикла;
				
				Если ЗначениеЗаполнено(Сотрудник) Тогда 
					ФИОСотрудник    = СклонениеПредставленийОбъектов.ПросклонятьФИО(Сотрудник.Наименование,2);
					ФИОСотрудник	= ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИОСотрудник);
					Если Организация <> Неопределено И ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда 
						СведенияОбОрганизации	= УправлениеITОтделом8УФ.СведенияОЮрФизЛице(Организация, ТекущийДокумент.Дата, ,);
						СтруктураРуководители	= УправлениеITОтделом8УФ.ОтветственныеЛицаОрганизационнойЕдиницы(Организация, 
							ТекущийДокумент.Дата);
						Если СтруктураРуководители.Руководитель <> Неопределено Тогда 
							ФИОДиректора			= СклонениеПредставленийОбъектов.ПросклонятьФИО(СтруктураРуководители.Руководитель,3);
							ФИОДиректора			= ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИОДиректора);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПричиныОтклоненияОтГрафика.ПФ_MXL_ЗаявлениеНаОтпускБезСодержания");	
				ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПричиныОтклоненияОтГрафика_ЗаявлениеНаОтпускБезСодержания";
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Шапка");
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ДатаИВремяПечати", ТекущаяДатаСеанса()));
				Если СведенияОбОрганизации <> Неопределено Тогда
					ОбластьМакета.Параметры.Заполнить(Новый Структура("Организация", СведенияОбОрганизации.ПолноеНаименование));
				КонецЕсли;
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ФИОДиректора", ФИОДиректора));
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ФИОСотрудник", ФИОСотрудник));				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Тело");
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ДатаНачала", ТекущийДокумент.ДатаНачала));
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ДатаОкончания", ТекущийДокумент.ДатаОкончания));
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Если НЕ ПустаяСтрока(ТекущийДокумент.Комментарий) Тогда 
					ОбластьМакета                         = Макет.ПолучитьОбласть("Комментарий");
					ОбластьМакета.Параметры.Заполнить(Новый Структура("Комментарий", "Комментарий: " + ТекущийДокумент.Комментарий));
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Подвал");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			Иначе
				
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПричиныОтклоненияОтГрафика.ПФ_MXL_ЗаявлениеНаОтпускБезСодержания");	
				ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПричиныОтклоненияОтГрафика_ЗаявлениеНаОтпускБезСодержания"; 
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Предупреждение");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;	
			
		ИначеЕсли ИмяМакета = "ПричиныОтклоненияОтГрафика" Тогда
			Если ТипЗнч(ТекущийДокумент.ОбъектОтклонения) = Тип("СправочникСсылка.Сервисы") Тогда 
				
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПричиныОтклоненияОтГрафика.ПФ_MXL_ПричиныОтклоненияОтГрафика");
				ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПричиныОтклоненияОтГрафика_ПФ_MXL_ПричиныОтклоненияОтГрафика";
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Шапка");				
				ОбластьМакета.Параметры.Заполнить(
					Новый Структура("ТекстЗаголовка", 
						СтрШаблон(НСтр("ru = 'Причина отклонения от графика № %1 от %2'"), 
						НомерДокумента, 
						Формат(ТекущийДокумент.Дата, "ДЛФ=DD"))));
				ТабличныйДокумент.Вывести(ОбластьМакета);	
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Тело");
				ОбластьМакета.Параметры.Заполнить(Новый Структура("Сервис", ТекущийДокумент.ОбъектОтклонения));
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ДатаНачала", ТекущийДокумент.ДатаНачала));
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ДатаОкончания", ТекущийДокумент.ДатаОкончания));
				ОбластьМакета.Параметры.Заполнить(Новый Структура("ПричинаОтклонения", ТекущийДокумент.ВидПричины));
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Если НЕ ПустаяСтрока(ТекущийДокумент.Комментарий) Тогда 
					ОбластьМакета                         = Макет.ПолучитьОбласть("Комментарий");
					ОбластьМакета.Параметры.Заполнить(Новый Структура("Комментарий", "Комментарий: " + ТекущийДокумент.Комментарий));
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Подвал");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			Иначе
				
				Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПричиныОтклоненияОтГрафика.ПФ_MXL_ПричиныОтклоненияОтГрафика");
				ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПричиныОтклоненияОтГрафика_ПФ_MXL_ПричиныОтклоненияОтГрафика";
				
				ОбластьМакета                             = Макет.ПолучитьОбласть("Предупреждение");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;
			
		КонецЕсли;	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, 
			ТекущийДокумент.Ссылка);
			
	КонецЦикла;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов,
				 ПараметрыПечати,
				 КоллекцияПечатныхФорм,
				 ОбъектыПечати,
				 ПараметрыВывода) Экспорт
				 
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявлениеНаОтпуск") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаявлениеНаОтпуск",
			НСтр("ru = 'Заявление на отпуск'"),
			ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ЗаявлениеНаОтпуск"));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявлениеНаОтпускБезСодержания") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаявлениеНаОтпускБезСодержания",
			НСтр("ru = 'Заявление на отпуск без содержания'"),
			ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ЗаявлениеНаОтпускБезСодержания"));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПричиныОтклоненияОтГрафика") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ПричиныОтклоненияОтГрафика", 
			НСтр("ru = 'Причины отклонения от графика'"), 
			ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ПричиныОтклоненияОтГрафика"));
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает данные для печати документа.
//
Функция ПолучитьДанныеПечати(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
	ОписаниеОбластей = Новый Соответствие;
	ДвоичныеДанныеМакетов = Новый Соответствие;
	ТипыМакетов = Новый Соответствие;
	
	Возврат Новый Структура("Данные, Макеты",
							ДанныеПоВсемОбъектам,
							Новый Структура("ОписаниеОбластей, ТипыМакетов, ДвоичныеДанныеМакетов",
											ОписаниеОбластей,
											ТипыМакетов,
											ДвоичныеДанныеМакетов));
	
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт	
	
		// Заявление на отпуск
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаявлениеНаОтпуск";
	КомандаПечати.Представление = НСтр("ru = 'Заявление на отпуск'");
	КомандаПечати.СписокФорм = "ФормаДокумента";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;	
	КомандаПечати.Порядок = 1;
	
	// Заявление на отпуск без содержания
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаявлениеНаОтпускБезСодержания";
	КомандаПечати.Представление = НСтр("ru = 'Заявление на отпуск без содержания'");
	КомандаПечати.СписокФорм = "ФормаДокумента";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;	
	КомандаПечати.Порядок = 2;
	
	// Причины отклонения от графика
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПричиныОтклоненияОтГрафика";
	КомандаПечати.Представление = НСтр("ru = 'Причины отклонения от графика'");
	КомандаПечати.СписокФорм = "ФормаДокумента";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;	
	КомандаПечати.Порядок = 3;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли