
#Область ОписаниеПеременных

// СтандартныеПодсистемы.ОценкаПроизводительности
&НаКлиенте
Перем ИдентификаторЗамераПроведение;
// Конец СтандартныеПодсистемы.ОценкаПроизводительности

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СЛС.ПриСозданииНаСервере(Объект, Отказ, СтандартнаяОбработка, Параметры, ЭтаФорма);	
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.ДатаНачала = КонецЧаса(ТекущаяДатаСеанса()) + 1; // Начало следующего часа
		Если Объект.ДатаНачала - НачалоДня(Объект.ДатаНачала) < 18 * 60 * 60 Тогда
			Объект.ДатаОкончания = НачалоДня(Объект.ДатаНачала) + 18 * 60 * 60; // До 18-00  
		КонецЕсли;
		
		// Документ создается из обработки "РабочийСтол".
		Если Параметры.Свойство("РабочийСтолЗначенияЗаполнения") Тогда
			ЗаполнитьЗначенияСвойств(Объект, Параметры.РабочийСтолЗначенияЗаполнения);
		КонецЕсли;
		
	КонецЕсли;
	
	#Область БСП_ПриСозданииНаСервере
		
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды	

	// ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ВерсионированиеОбъектов
		
	#КонецОбласти
	
	УстановитьВидимостьДоступность();
	
	Если НЕ ЗначениеЗаполнено(Объект.ОбъектОтклонения) Тогда
		ТекущийЭлемент = Элементы.ОбъектОтклонения;
	Иначе
		ТекущийЭлемент = Элементы.ПричинаОтстуствия;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСписокВыбораДаты("ДатаНачала");
	ОбновитьСписокВыбораДаты("ДатаОкончания");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Корректировки документа.
	УправлениеITОтделом8УФКлиент.ОбновитьНадписьАвтор(Объект, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СЛС.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма);
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
    УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры // ПриЧтенииНаСервере()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ДатаСоздания = Дата(1, 1, 1) Тогда
		ТекущийОбъект.ДатаСоздания = ТекущаяДатаСеанса();
	Иначе
		ТекущийОбъект.ДатаКорректировки = ТекущаяДатаСеанса();
	КонецЕсли; 
	
	Если ТекущийОбъект.Автор = Справочники.Пользователи.ПустаяСсылка() Тогда
		ТекущийОбъект.Автор = Пользователи.ТекущийПользователь();
	Иначе
		ТекущийОбъект.АвторКорректировки = Пользователи.ТекущийПользователь();
	КонецЕсли; 
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СЛС.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма);
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
       ИдентификаторЗамераПроведение = ОценкаПроизводительностиКлиент.ЗамерВремени();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Корректировки документа.
	УправлениеITОтделом8УФКлиент.ОбновитьНадписьАвтор(Объект, ЭтаФорма);
	Оповестить("Документ.ПричиныОтклоненияОтГрафика", , Объект.Ссылка);
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведение, 
			"ДокументПричиныОтклоненияОтГрафика (проведение)");	
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НадписьАвторНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Спк = УправлениеITОтделом8УФКлиент.ПолучитьСписокНадписьАвтор(Объект);	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НадписьАвторНажатиеЗавершение", ЭтотОбъект), Спк, Элементы.НадписьАвтор, );
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьАвторНажатиеЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт    

КонецПроцедуры

&НаКлиенте
Процедура ОбъектОтклоненияПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Если ТипЗнч(Объект.ОбъектОтклонения) = Тип("СправочникСсылка.Пользователи") Тогда
		Элементы.ОбъектОтклонения.Заголовок = НСтр("ru = 'Пользователь'");
	ИначеЕсли ТипЗнч(Объект.ОбъектОтклонения) = Тип("СправочникСсылка.Сервисы") Тогда
		Элементы.ОбъектОтклонения.Заголовок = НСтр("ru = 'Сервис'");
	КонецЕсли;
	Элементы.Замещающий.Видимость = ТипЗнч(Объект.ОбъектОтклонения) = Тип("СправочникСсылка.Пользователи");
	
КонецПроцедуры

&НаКлиенте
Процедура ПричинаОтстуствияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПричинаОтсутствия = Новый Структура;
	Если ЗначениеЗаполнено(Объект.ОбъектОтклонения) Тогда
		Если ТипЗнч(Объект.ОбъектОтклонения) = Тип("СправочникСсылка.Пользователи") Тогда
			ПричинаОтсутствия.Вставить("ТипОбъекта", ПредопределенноеЗначение("Перечисление.ТипыОбъектовПричинОтклоненияОтГрафиков.Пользователь"));
		Иначе
			ПричинаОтсутствия.Вставить("ТипОбъекта", ПредопределенноеЗначение("Перечисление.ТипыОбъектовПричинОтклоненияОтГрафиков.Сервис"));
		КонецЕсли;
	КонецЕсли;
	Результат = Неопределено;

	ОткрытьФорму("Справочник.ВидыПричинОтклоненияОтГрафика.ФормаВыбора", ПричинаОтсутствия, Элемент,,,, Новый ОписаниеОповещения("ПричинаОтстуствияНачалоВыбораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПричинаОтстуствияНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.ВидПричины = Результат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
		
	ОбновитьСписокВыбораДаты(Элемент.Имя);
	
	Если Объект.ДатаНачала > Объект.ДатаОкончания Тогда
		Объект.ДатаОкончания = Объект.ДатаНачала + 60 * 30;
		ОбновитьСписокВыбораДаты("ДатаОкончания");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ОбновитьСписокВыбораДаты(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВыбораДаты(Знач ИмяРеквизитаНаФорме)
	
	ТекДата			= ТекущаяДата();
	Элементы[ИмяРеквизитаНаФорме].СписокВыбора.Очистить();
	Если Объект[ИмяРеквизитаНаФорме] <> Дата(1, 1, 1) Тогда
		мДата = НачалоДня(Объект[ИмяРеквизитаНаФорме]);
	Иначе
		мДата = НачалоДня(ТекДата);
	КонецЕсли;
	НачалоПериода 	= 8 * 3600;
	КонецПериода 	= 19 * 3600;
	Сек 			= НачалоПериода;
	Пока Сек <= КонецПериода Цикл
		ДатаШага = мДата + Сек;
		Если ДатаШага >= ТекДата Тогда
			Элементы[ИмяРеквизитаНаФорме].СписокВыбора.Добавить(ДатаШага);
		КонецЕсли;
		Сек = Сек + 1800;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

