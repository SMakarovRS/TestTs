
#Область ОписаниеПеременных

// СтандартныеПодсистемы.ОценкаПроизводительности
&НаКлиенте
Перем ИдентификаторЗамераПроведение;
// Конец СтандартныеПодсистемы.ОценкаПроизводительности

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		// Документ создается из обработки "РабочийСтол".
		Если Параметры.Свойство("РабочийСтолЗначенияЗаполнения") Тогда
			ЗаполнитьЗначенияСвойств(Объект, Параметры.РабочийСтолЗначенияЗаполнения);
		КонецЕсли;

	КонецЕсли;
	
	#Область БСП_ПриСозданииНаСервере
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
		
	#КонецОбласти
	
	Элементы.Значения.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Метрика",
		Справочники.Метрики.ПустаяСсылка()));	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
       ИдентификаторЗамераПроведение = ОценкаПроизводительностиКлиент.ЗамерВремени();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведение, 
			"ДокументОтражениеМетрик (проведение)");	
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура МетрикиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Метрики.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.Значения.Доступность = Ложь;
		Метрика = ПредопределенноеЗначение("Справочник.Метрики.ПустаяСсылка");
	Иначе
		Элементы.Значения.Доступность = Истина;		
		Метрика = ТекущиеДанные.Метрика;		
	КонецЕсли;
	
	Элементы.Значения.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Метрика", Метрика));
	
	Элементы.ЗначенияИзмерение1.Видимость 	= Ложь;
	Элементы.ЗначенияИзмерение2.Видимость 	= Ложь;
	Элементы.ЗначенияИзмерение3.Видимость 	= Ложь;
	Элементы.ЗначенияИзмерение4.Видимость 	= Ложь;
	Элементы.ЗначенияИзмерение5.Видимость 	= Ложь;
	Элементы.ЗначенияПользователь.Видимость = Ложь;
	Элементы.ЗначенияПроект.Видимость 		= Ложь;
		
	Если ЗначениеЗаполнено(Метрика) Тогда
		
		Массив = ПолучитьМассивИзмерений(Метрика);		
		Для Индекс = 1 По Массив.Количество() Цикл			
			Строки 									= Массив.Получить(Индекс - 1);			
			Имя 									= Строки.Имя;
			Элементы[Имя].Видимость 				= Истина;
			Элементы[Имя].Заголовок 				= Строки.Заголовок;
			Элементы[Имя].ОграничениеТипа 			= Строки.ОграничениеТипа;			
			Элементы[Имя].АвтоОтметкаНезаполненного = Строки.АвтоОтметкаНезаполненного;
			Если Строки.Свойство("Пользователь") Тогда
				Элементы.ЗначенияПользователь.Видимость = Истина;
			КонецЕсли;
			Если Строки.Свойство("Проект") Тогда
				Элементы.ЗначенияПроект.Видимость = Истина;
			КонецЕсли;

		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МетрикиМетрикаПриИзменении(Элемент)
	
	МетрикиПриАктивизацииСтроки(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Метрики.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Необходимо указать метрику для добавления значений.'"));
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока ИЛИ НЕ ЗначениеЗаполнено(Элементы.Значения.ТекущиеДанные.Метрика) Тогда
		Элемент.ТекущиеДанные.Метрика = ТекущиеДанные.Метрика;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервереБезКонтекста
Функция ПолучитьМассивИзмерений(Знач Метрика)
	
	Результат = Новый Массив;
	
	Для Индекс = 1 По Метрика.Измерения.Количество() Цикл
		
		Строки 							= Метрика.Измерения.Получить(Индекс - 1);
		Структура = Новый Структура;
		Структура.Вставить("Имя", 		"ЗначенияИзмерение" + Формат(Индекс, "ЧРД=; ЧРГ=; ЧН=0; ЧГ="));
		Структура.Вставить("Видимость", Истина);
		Структура.Вставить("Заголовок",
			?(НЕ ПустаяСтрока(Строки.Представление), Строки.Представление, Строка(Строки.ТипИзмерения)));
		Структура.Вставить("ОграничениеТипа",
			МетрикиВызовСервера.ПолучитьОграничениеТипаПоПолномуИмени(Строки.ТипИзмерения));
		Структура.Вставить("АвтоОтметкаНезаполненного", Строки.Обязательное);
		Если ЗначениеЗаполнено(Строки.Назначение) Тогда
			Если Строки.Назначение = Перечисления.ТипыНазначенияМетрик.Пользователь Тогда
				Структура.Вставить("Пользователь", Истина);
			ИначеЕсли Строки.Назначение = Перечисления.ТипыНазначенияМетрик.Проект Тогда
				Структура.Вставить("Проект", Истина);
			КонецЕсли;	
		КонецЕсли;	
		Результат.Добавить(Структура);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти