
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Основание", Основание) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Значения по умолчанию
	ВариантЭкспорта 	= 0;
	ОписаниеЗадания 	= Истина;
	ПерепискаПоЗаданию 	= Истина;
	ВложенныеФайлы 		= Истина;
	
	Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантЭкспортаПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьСохраненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Каталог = КаталогСохранения;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите каталог сохранения'");
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		КаталогСохранения = ДиалогОткрытияФайла.Каталог;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Экспортировать(Команда)
	
	// Получаем HTML-описание
	ТекстHTML = ПолучитьТекстHTML();
	
	МассивФайлов = Новый Массив;
	ПолучитьФайлыЗадания(МассивФайлов);
	
	Если ВариантЭкспорта = 0 Тогда
				
		ФормаПараметры = Новый Структура;
		ФормаПараметры.Вставить("Тема", Строка(Основание));
		ФормаПараметры.Вставить("ЭкспортируемыйТекстHTML", ТекстHTML);
		ФормаПараметры.Вставить("Вложения", МассивФайлов);
		ФормаПараметры.Вставить("СтатьяВАрхивеZIP", Ложь);
		ФормаПараметры.Вставить("Получатель", Получатели());
		ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.Форма.УправлениеITОтделом8УФФормаДокумента", ФормаПараметры,
			,,,,);
		
	ИначеЕсли ВариантЭкспорта = 1 Тогда
		
		ПолноеИмяФайла = КаталогСохранения;
		Если ПустаяСтрока(ПолноеИмяФайла) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнен каталог сохранения'"));
			Возврат;
		КонецЕсли;
		
		Если Прав(ПолноеИмяФайла, 1) <> "\" Тогда
			КаталогСохранения = КаталогСохранения + "\";
		КонецЕсли;
		ПолноеИмяФайла = КаталогСохранения + ИмяФайла(Основание) + ".html";
	
		// Сохранить в папку текст-описание.
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.УстановитьТекст(ТекстHTML);
		ТекстовыйДокумент.Записать(ПолноеИмяФайла);
		
		// Сохраняем в папку все вложения.
		Для Каждого Структура Из МассивФайлов Цикл
			ДанныеФайла = ПолучитьИзВременногоХранилища(Структура.АдресВоВременномХранилище);
    		ДанныеФайла.Записать(КаталогСохранения + Структура.ИмяФайла);
			УдалитьИзВременногоХранилища(Структура.АдресВоВременномХранилище);
		КонецЦикла;
		
		// Пишем сообщение, что экспорт завершен.
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Сохранение завершено'"));
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Элементы.Страницы.ТекущаяСтраница = Элементы["Вариант" + Формат(ВариантЭкспорта, "ЧРД=; ЧРГ=; ЧН=0; ЧГ=")];
	
КонецПроцедуры

&НаСервере
Функция Получатели()
	
	// Адрес, представление, контакт
	Массив = Новый Массив;
	
	Для Каждого Строки Из Адресаты Цикл
		СтруктураВозврата = ПравилаСобытийСервер.КонтактнаяИнформацияПолучателя(Строки.Адресат, Строки.Адресат, 
			Перечисления.ТипДействийПравилСобытий.ОповещениеПоEmail);
		Если СтруктураВозврата.Свойство("Кому") Тогда
			Массив.Добавить(Новый Структура("Адрес,Представление,ИсточникКонтактнойИнформации", СтруктураВозврата.Кому, 
				Строка(Строки.Адресат), Строки.Адресат));
		КонецЕсли;
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстHTML()
	
	// Формируем HTML-документ.
	Возврат ЗаданияСервер.СформироватьОписаниеЗадачи(Основание, УникальныйИдентификатор, РеквизитыЗадания, 
		ОписаниеЗадания, ПерепискаПоЗаданию, Ложь);
	
КонецФункции

&НаСервере
Процедура ПолучитьФайлыЗадания(МассивФайлов)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаданиеПрисоединенныеФайлы.Ссылка КАК Ссылка,
		|	0 КАК ТипФайла,
		|	ЗаданиеПрисоединенныеФайлы.Наименование КАК Наименование,
		|	ЗаданиеПрисоединенныеФайлы.Расширение КАК Расширение
		|ИЗ
		|	Справочник.ЗаданиеПрисоединенныеФайлы КАК ЗаданиеПрисоединенныеФайлы
		|ГДЕ
		|	ЗаданиеПрисоединенныеФайлы.ВладелецФайла = &Владелец
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КомментарииПрисоединенныеФайлы.Ссылка,
		|	1,
		|	КомментарииПрисоединенныеФайлы.Наименование,
		|	КомментарииПрисоединенныеФайлы.Расширение
		|ИЗ
		|	Справочник.КомментарииПрисоединенныеФайлы КАК КомментарииПрисоединенныеФайлы
		|ГДЕ
		|	КомментарииПрисоединенныеФайлы.ВладелецФайла В
		|			(ВЫБРАТЬ
		|				Комментарии.Ссылка КАК Ссылка
		|			ИЗ
		|				Справочник.Комментарии КАК Комментарии
		|			ГДЕ
		|				Комментарии.ВладелецКомментария = &Владелец)";
	Запрос.УстановитьПараметр("Владелец", Основание);
	
	ИменаФайлов = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Структура = Новый Структура("Ссылка,ТипФайла");
		ЗаполнитьЗначенияСвойств(Структура, Выборка);
		ИмяФайла = Выборка.Наименование + "." + Выборка.Расширение;
		
		Если ИменаФайлов.Найти(ИмяФайла) <> Неопределено Тогда
			Индекс = 1;
			Пока ИменаФайлов.Найти(Формат(Индекс, "ЧРД=; ЧРГ=; ЧГ=") + "_" + ИмяФайла) <> Неопределено Цикл
				Индекс = Индекс + 1;
			КонецЦикла;
			ИмяФайла = Формат(Индекс, "ЧРД=; ЧРГ=; ЧГ=") + "_" + ИмяФайла;
		КонецЕсли;
		ИменаФайлов.Добавить(ИмяФайла);
		
		Структура.Вставить("ИмяФайла", ИмяФайла);
		Структура.Вставить("Представление", ИмяФайла);
		Структура.Вставить("АдресВоВременномХранилище", 
			ПоместитьВоВременноеХранилище(РаботаСФайлами.ДвоичныеДанныеФайла(Выборка.Ссылка), 
				Новый УникальныйИдентификатор()));
		МассивФайлов.Добавить(Структура);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяФайла(Знач Основание)
	
	Данные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Основание, "Тема,Номер,ТипПроцесса,Дата");
	
	НомерДок 			= СокрЛП(Данные.Номер);
	Сч 					= 1; 
	Дл 					= СтрДлина(НомерДок);
	Пока Сч < Дл И Сред(НомерДок, Сч, 1) = "0" Цикл 
		Сч = Сч + 1; 
	КонецЦикла;
	НомерДок 			= Сред(НомерДок, Сч);
	мТема 				= СокрЛП(Данные.Тема);
	мТема 				= ?(ЗначениеЗаполнено(мТема), мТема, НСтр("ru = '<Без темы>'"));
	Если ЗначениеЗаполнено(Данные.ТипПроцесса) Тогда
		ТипПроцессаСтрокой = Строка(Данные.ТипПроцесса);
	Иначе
		ТипПроцессаСтрокой = НСтр("ru = 'Задание'");
	КонецЕсли;
	Представление 		= СтрШаблон(НСтр("ru = '%1 № %2 от %3 (%4)'"), ТипПроцессаСтрокой, НомерДок, 
		Формат(Данные.Дата, "ДФ=dd.MM.yy"), мТема);
	
	Возврат Представление;
		
КонецФункции

#КонецОбласти