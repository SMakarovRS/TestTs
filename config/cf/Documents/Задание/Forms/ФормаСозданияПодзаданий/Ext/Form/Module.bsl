
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Параметры.Задание) Тогда
		ЗаданиеРодитель = Параметры.Задание;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Параметры.Тема) Тогда
		ТемаПоУмолчанию = Параметры.Тема;
	КонецЕсли;
		
	ВыполнитьДо = Параметры.ВыполнитьДо;
	Если Параметры.Свойство("Процесс") Тогда
		Процесс = Параметры.Процесс;
	КонецЕсли;
	Если Параметры.Свойство("Инициатор") Тогда
		Инициатор = Параметры.Инициатор;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ПользователиПользовательПриИзменении(Элемент)
	
	Если Элементы.ПользователиЗаданий.ТекущиеДанные <> Неопределено Тогда
		
        Элементы.ПользователиЗаданий.ТекущиеДанные.ОткрытьПослеСоздания	= Истина;
		Если ПустаяСтрока(Элементы.ПользователиЗаданий.ТекущиеДанные.Тема) И ЗначениеЗаполнено(ЗаданиеРодитель) Тогда
			Элементы.ПользователиЗаданий.ТекущиеДанные.Тема				= ТемаПоУмолчанию;
		КонецЕсли;	
		ПроцессПоУмолчанию = ВычислитьФормулу("УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), ""ОсновнойПроцессДляСоздаваемыхДочернихЗаданий"")");
		Элементы.ПользователиЗаданий.ТекущиеДанные.Процесс 		= ?(ЗначениеЗаполнено(ПроцессПоУмолчанию),
			ПроцессПоУмолчанию,Процесс);
		Элементы.ПользователиЗаданий.ТекущиеДанные.Инициатор 	= Инициатор;
		Элементы.ПользователиЗаданий.ТекущиеДанные.ВыполнитьДо 	= ВыполнитьДо;
		Элементы.ПользователиЗаданий.ТекущиеДанные.ПереноситьВсехНаблюдателейИзРодительскихЗаданий	= Истина;
		Элементы.ПользователиЗаданий.ТекущиеДанные.НомерКартинки 	= 1;
		Элементы.ПользователиЗаданий.ТекущиеДанные.КопироватьТекст 	= Истина;
		Элементы.ПользователиЗаданий.ТекущиеДанные.ТипПроцесса 	= 
			ПредопределенноеЗначение("Справочник.ТипыПроцессов.Инцидент");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиЗаданийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные 				= Элементы.ПользователиЗаданий.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.НомерКартинки = 1;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьГруппуПользователей(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	
	ОткрытьФорму("Справочник.ГруппыПользователей.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,
		Новый ОписаниеОповещения("ДобавитьГруппуПользователейЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппуПользователейЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    ГруппаПользователей = Результат;	 
    
    Если ЗначениеЗаполнено(ГруппаПользователей) Тогда
        ЗаполнитьПользователейПоГруппе(ГруппаПользователей);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ПользователиЗаданий.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодзадания(Команда)
	
	СоздатьЗадания();
	
	// Открываем формы в обратном порядке, 
	// чтобы последовательность открытых форм была как в таблице пользователей.
	Индекс = ПользователиЗаданий.Количество() - 1;
	Пока Индекс >= 0 Цикл
		Строки = ПользователиЗаданий.Получить(Индекс);		
		Задание = Строки.ЗаданиеСсылка;
		// Форму надо открыть.
		Если ЗначениеЗаполнено(Задание) И Строки.ОткрытьПослеСоздания Тогда						
			ОткрытьФорму("Документ.Задание.Форма.ФормаДокумента",Новый Структура("Ключ",Задание));
		КонецЕсли;
		
		Индекс = Индекс - 1;
	КонецЦикла;
	
	Оповестить("ОбновитьФормуСпискаЗаданий");
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВычислитьФормулу(Формула)
	
	Возврат Вычислить(Формула);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПользователейПоГруппе(ГруппаПользователей)
	
	ПустойУникальныйИдентификатор = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ГруппыПользователей.Ссылка
		|ИЗ
		|	Справочник.ГруппыПользователей КАК ГруппыПользователей
		|ГДЕ
		|	ГруппыПользователей.Ссылка В ИЕРАРХИИ(&Родитель)";
		
	Запрос.УстановитьПараметр("Родитель", ГруппаПользователей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Для каждого Строки Из Выборка.Ссылка.Состав Цикл
			
			Отбор = Новый Структура;
			Отбор.Вставить("Пользователь",Строки.Пользователь);
			НайденныеСтроки = ПользователиЗаданий.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				НоваяСтрока 						= ПользователиЗаданий.Добавить();
				НоваяСтрока.Пользователь 			= Строки.Пользователь;
				НоваяСтрока.Тема 					= ТемаПоУмолчанию;
				НоваяСтрока.ОткрытьПослеСоздания 	= Истина;
				ПроцессПоУмолчанию 					= 
					УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
						Пользователи.ТекущийПользователь(), 
						"ОсновнойПроцессДляСоздаваемыхДочернихЗаданий");
				НоваяСтрока.Процесс					= ?(ЗначениеЗаполнено(ПроцессПоУмолчанию), ПроцессПоУмолчанию,
					Процесс);
				НоваяСтрока.Инициатор				= Инициатор;
				Если Строки.Пользователь.ПометкаУдаления Тогда
					НоваяСтрока.НомерКартинки		= 0;
				ИначеЕсли Строки.Пользователь.ИдентификаторПользователяИБ = ПустойУникальныйИдентификатор Тогда
					НоваяСтрока.НомерКартинки		= 4;
				Иначе
					НоваяСтрока.НомерКартинки		= 1;
				КонецЕсли;
				НоваяСтрока.ВыполнитьДо				= ВыполнитьДо;
				НоваяСтрока.ПереноситьВсехНаблюдателейИзРодительскихЗаданий = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗадания()
	
	// Список родительских заданий.
	СписокРодительскихЗаданий = Новый СписокЗначений;		
	Родитель = ЗаданиеРодитель;
	Пока ЗначениеЗаполнено(Родитель) Цикл
		СписокРодительскихЗаданий.Добавить(Родитель);
		Родитель = Родитель.Родитель;
	КонецЦикла;
	
	// Все наблюдатели родительских заданий.
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаданиеНаблюдатели.Адресат КАК Адресат
		|ИЗ
		|	Документ.Задание.Наблюдатели КАК ЗаданиеНаблюдатели
		|ГДЕ
		|	ЗаданиеНаблюдатели.Ссылка В(&СписокРодительскихЗаданий)
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("СписокРодительскихЗаданий", СписокРодительскихЗаданий);
	
	ТЗНаблюдатели = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строки Из ПользователиЗаданий Цикл
		
		// Получаем записываемый UID.
		НоваяСсылка = Документы.Задание.ПолучитьСсылку(Новый УникальныйИдентификатор());
		
		Если Строки.КопироватьТекст = Истина Тогда 
			
			ПриложенныеФайлы = ЗаданияСервер.ПолучитьВложенияЗадания(ЗаданиеРодитель);
			
			// Добавляем вложения.
			Для Каждого Файл Из ПриложенныеФайлы Цикл
				
				ДополнительныеПараметры = Новый Структура;
				ДополнительныеПараметры.Вставить("ПолучатьСсылкуНаДвоичныеДанные", Истина);
				ДанныеФайла = РаботаСФайлами.ДанныеФайла(Файл.Ссылка, ДополнительныеПараметры);
				
				ПараметрыФайла = РаботаСФайлами.ПараметрыДобавленияФайла();
				ПараметрыФайла.ВладелецФайлов = НоваяСсылка;
				ПараметрыФайла.ИмяБезРасширения = ДанныеФайла.Наименование;
				ПараметрыФайла.РасширениеБезТочки = ДанныеФайла.Расширение;
				ПараметрыФайла.ВремяИзмененияУниверсальное = Неопределено;
				
				ДобавленныйФайлСсылка = РаботаСФайлами.ДобавитьФайл(
					ПараметрыФайла,
					ДанныеФайла.СсылкаНаДвоичныеДанныеФайла,
					"");
				
                Если НЕ ПустаяСтрока(Файл.ИДФайлаЭлектронногоПисьма) Тогда
                    ДобавленныйФайл 							= ДобавленныйФайлСсылка.ПолучитьОбъект();
                    ДобавленныйФайл.ИДФайлаЭлектронногоПисьма 	= Файл.ИДФайлаЭлектронногоПисьма;
                    ДобавленныйФайл.Записать();
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
        
        ДатаДокумента               = ТекущаяДатаСеанса();
        
		НовыйДок					= Документы.Задание.СоздатьДокумент();
		Если Строки.КопироватьТекст = Истина Тогда 
			НовыйДок.ТекстHTML 		= ЗаданиеРодитель.ТекстHTML;
		КонецЕсли; 		
		НовыйДок.УстановитьСсылкуНового(НоваяСсылка);
		НовыйДок.Дата				= ДатаДокумента;
		НовыйДок.Процесс			= Строки.Процесс;
		НовыйДок.Тема				= Строки.Тема;
		НовыйДок.ТипПроцесса		= Строки.ТипПроцесса;
		НовыйДок.ТекущийИсполнитель	= Строки.Пользователь;
		НовыйДок.Родитель			= ЗаданиеРодитель;
		НовыйДок.ТекущийЭтап		= Справочники.ЭтапыПроцессов.Новый;
		НовыйДок.Инициатор			= Строки.Инициатор;
		ЗаполнитьЗначенияСвойств(НовыйДок, ЗаданиеРодитель, 
			"Сервис,Приоритет,Категория,Организация,SLA,КрайняяДатаВыполнения,Проект,Спринт");
		НовыйДок.СпособСоздания		= Справочники.СпособыСозданияЗаданий.НаОсновании;
		НовыйДок.Автор				= Пользователи.ТекущийПользователь();
        		
		// Определение наблюдателей.
		Если Строки.ПереноситьВсехНаблюдателейИзРодительскихЗаданий Тогда
			Для Каждого СтрокиНаблюдатели Из ТЗНаблюдатели Цикл
				НоваяСтрока = НовыйДок.Наблюдатели.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиНаблюдатели);
			КонецЦикла;
		КонецЕсли;
		
		Попытка
			НовыйДок.Записать(РежимЗаписиДокумента.Проведение);
			Строки.ЗаданиеСсылка  = НовыйДок.Ссылка;
		Исключение
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Ошибка создания подзадания %1'"), 
				НовыйДок.Тема));
		КонецПопытки;
				
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

