
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОбъектСсылка") Тогда
		ОбъектСсылка = Параметры.ОбъектСсылка;
		СформироватьПодчиненныеЗадания();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодчиненныеЗадания

&НаКлиенте
Процедура ПодчиненныеЗаданияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение( ,ПодчиненныеЗадания.НайтиПоИдентификатору(ВыбраннаяСтрока).Задание);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодчиненныеЗаданияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодчиненныеЗаданияПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьПодчиненныеЗадания()
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Задание.Ссылка КАК Задание,
		|	Задание.Номер КАК Номер,
		|	Задание.Дата КАК Дата,
		|	Задание.Выполнено КАК Выполнено,
		|	Задание.ТекущийИсполнитель КАК ТекущийИсполнитель,
		|	Задание.ТекущийЭтап КАК ТекущийЭтап,
		|	Задание.Тема КАК Тема,
		|	Задание.ТекущийЭтап.НавСсылка КАК НавСсылка,
		|	Задание.Процесс КАК Процесс,
		|	Задание.Сервис КАК Сервис
		|ИЗ
		|	Документ.Задание КАК Задание
		|ГДЕ
		|	Задание.Родитель = &Родитель
		|	И Задание.Родитель <> ЗНАЧЕНИЕ(Документ.Задание.ПустаяСсылка)
		|	И НЕ Задание.ПометкаУдаления
		|	И (&ДоступностьРолиПросмотраЧужихЗаданий
		|			ИЛИ &ДоступностьРолиПолныеПрава
		|			ИЛИ &ДоступностьРолиПросмотраНеРаспределенныхЗаданий
		|				И ВЫБОР
		|					КОГДА Задание.ТекущийИсполнитель.Ссылка ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|			ИЛИ Задание.УчастникиЗадания.Участник В (&СписокПользователейИГруппПользователей))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Номер,
		|	Задание.Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	ТекПользователь = Пользователи.ТекущийПользователь();
	// Мои, подчиненных, не мои
	Запрос.УстановитьПараметр("ТекущийПользователь", ТекПользователь);
	// Получаем подчиненных    
	Запрос.УстановитьПараметр("ДоступностьРолиПросмотраЧужихЗаданий", 			
		УправлениеITОтделом8УФПовтИсп.Право("ServiceDeskПросмотрЧужихЗаданий"));
	Запрос.УстановитьПараметр("ДоступностьРолиПросмотраНеРаспределенныхЗаданий",
		УправлениеITОтделом8УФПовтИсп.Право("ServiceDeskПросмотрНеРаспределенныхЗаданий"));
	Запрос.УстановитьПараметр("ДоступностьРолиПолныеПрава", 					
		УправлениеITОтделом8УФПовтИсп.Право("ПолныеПрава"));	
	Запрос.УстановитьПараметр("Родитель", ОбъектСсылка);	
	Запрос.УстановитьПараметр("СписокПользователейИГруппПользователей",			
		УправлениеITОтделом8УФ.СписокПодчиненныхИГруппПользователя(ТекПользователь));
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	ТЗ.Колонки.Добавить("НомерДата", 
		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная)));
	
	Для Каждого Строчка Из ТЗ Цикл
		Номер = Строчка.Номер;
		Пока Лев(Номер, 1) = "0" Цикл
			Номер = Сред(Номер, 2);
		КонецЦикла;
		Строчка.НомерДата = СтрШаблон(НСтр("ru = '№ %1 от %2'"), Номер, Формат(Строчка.Дата, "ДФ=dd.MM.yy"));
	КонецЦикла;
	
	ПодчиненныеЗадания.Загрузить(ТЗ);
	
КонецПроцедуры

#КонецОбласти