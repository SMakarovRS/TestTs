#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПоложениеСтатьиДоходовРасходов = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		Для каждого Строки Из Номенклатура Цикл
			Строки.СтатьяДоходовРасходов = СтатьяДоходовРасходов;
		КонецЦикла;
		Для каждого Строки Из Услуги Цикл
			Строки.СтатьяДоходовРасходов = СтатьяДоходовРасходов;
		КонецЦикла;
	КонецЕсли;
	
	Если (ПоложениеПодразделения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке) ИЛИ (НЕ ЗначениеЗаполнено(ПоложениеПодразделения)) Тогда
		Для каждого Строки Из Номенклатура Цикл
			Строки.Подразделение = Подразделение;
		КонецЦикла;
		Для каждого Строки Из Услуги Цикл
			Строки.Подразделение = Подразделение;
		КонецЦикла;
	КонецЕсли;
	
	Для каждого Строки Из Номенклатура Цикл
		Если Не ЗначениеЗаполнено(Строки.СтавкаНДС) Тогда
			Строки.Всего = Строки.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Если ВидОкончанияОбслуживания = Перечисления.ВидыОкончанияОбслуживания.ОбслуживаниеКонтрагентом 
		ИЛИ ВидОкончанияОбслуживания = Перечисления.ВидыОкончанияОбслуживания.ОбслуживаниеКонтрагентомПроизведеноСразу Тогда
		МассивКарточек = Новый Массив;
		Для Каждого Строки Из Номенклатура Цикл
			Если Строки.Событие = Перечисления.СобытиеОбслуживания.Добавление Тогда
				МассивКарточек.Добавить(Строки.КарточкаНоменклатуры);
			КонецЕсли;			
		КонецЦикла;
		
		Если НЕ ЭтоНовый() Тогда
			Запрос = Новый Запрос();
			Запрос.Текст =
				"ВЫБРАТЬ
				|	КарточкиНоменклатуры.Ссылка
				|ИЗ
				|	Справочник.КарточкиНоменклатуры КАК КарточкиНоменклатуры
				|ГДЕ
				|	КарточкиНоменклатуры.ДокументПоступления = &ДокументПоступления";
			
			Запрос.УстановитьПараметр("ДокументПоступления", Ссылка);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если ПометкаУдаления Тогда
					ОбъектКарточка = Выборка.Ссылка.ПолучитьОбъект();
					ОбъектКарточка.ДокументПоступления = Документы.ОкончаниеОбслуживания.ПустаяСсылка();
					ОбъектКарточка.Записать();				
				Иначе
					Если МассивКарточек.Найти(Выборка.Ссылка) = Неопределено Тогда
						// Удаляем из карточки данные о документе поступления.
						ОбъектКарточка = Выборка.Ссылка.ПолучитьОбъект();
						ОбъектКарточка.ДокументПоступления = Документы.ОкончаниеОбслуживания.ПустаяСсылка();
						ОбъектКарточка.Записать();
					КонецЕсли;				
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;		
	КонецЕсли;	
		
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда	
		Возврат;		
	КонецЕсли;
	
	// Проверка на ошибки
	СписокОшибок = ПроверитьДокументПередПроведением();
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(СписокОшибок, Отказ);
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	СЛС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);	
	
	// Подготовка наборов записей.
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	СЛС.ОтразитьДвиженияВРазделахУчета(Ссылка, ДополнительныеСвойства, Движения, Отказ);	
	
	// Запись наборов записей.
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль.
	СЛС.ВыполнитьКонтрольОтрицательныхОстатков(Ссылка, ДополнительныеСвойства, Отказ);	
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	СЛС.ВыполнитьКонтрольОтрицательныхОстатков(Ссылка, ДополнительныеСвойства, Отказ, Истина);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.НачалоОбслуживания") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,"Номер,Дата,Проведен");
		Основание						= ДанныеЗаполнения;
		ПоложениеСтатьиДоходовРасходов 			= ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
		
		Если ДанныеЗаполнения.ВидНачалаОбслуживания = Перечисления.ВидыНачалаОбслуживания.ОбслуживаниеКонтрагентом Тогда
			ВидОкончанияОбслуживания = Перечисления.ВидыОкончанияОбслуживания.ОбслуживаниеКонтрагентом;
		Иначе
			ВидОкончанияОбслуживания = Перечисления.ВидыОкончанияОбслуживания.ВнутреннееОбслуживание;
		КонецЕсли;
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОстаткиОстатки.Номенклатура,
			|	ОстаткиОстатки.Партия,
			|	ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
			|	ЕСТЬNULL(ОстаткиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ОстаткиОстатки.СуммаОстаток / ОстаткиОстатки.КоличествоОстаток
			|	КОНЕЦ КАК Себестоимость
			|ПОМЕСТИТЬ ВТ_Остатки
			|ИЗ
			|	РегистрНакопления.Остатки.Остатки(
			|			&Период,
			|			Организация = &Организация
			|				И МестоХранения = &МестоХранения) КАК ОстаткиОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НачалоОбслуживанияНоменклатура.НомерСтроки КАК НомерСтроки,
			|	НачалоОбслуживанияНоменклатура.Номенклатура КАК Номенклатура,
			|	НачалоОбслуживанияНоменклатура.КарточкаНоменклатуры,
			|	НачалоОбслуживанияНоменклатура.Партия КАК Партия,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(НачалоОбслуживанияНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА НачалоОбслуживанияНоменклатура.Количество
			|		ИНАЧЕ НачалоОбслуживанияНоменклатура.Количество * НачалоОбслуживанияНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Количество,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(НачалоОбслуживанияНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * НачалоОбслуживанияНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Цена,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(НачалоОбслуживанияНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость * НачалоОбслуживанияНоменклатура.Количество
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * НачалоОбслуживанияНоменклатура.Количество * НачалоОбслуживанияНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Сумма,
			|	НачалоОбслуживанияНоменклатура.ЕдиницаИзмерения
			|ИЗ
			|	Документ.НачалоОбслуживания.Номенклатура КАК НачалоОбслуживанияНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
			|		ПО НачалоОбслуживанияНоменклатура.Партия = ВТ_Остатки.Партия
			|			И (ВЫБОР
			|				КОГДА НачалоОбслуживанияНоменклатура.Номенклатура.ВидНоменклатуры.ВестиУчетПоКарточкамНоменклатуры
			|					ТОГДА НачалоОбслуживанияНоменклатура.КарточкаНоменклатуры = ВТ_Остатки.Номенклатура
			|				ИНАЧЕ НачалоОбслуживанияНоменклатура.Номенклатура = ВТ_Остатки.Номенклатура
			|			КОНЕЦ)
			|ГДЕ
			|	НачалоОбслуживанияНоменклатура.Ссылка = &Ссылка");
			
		Запрос.УстановитьПараметр("Организация",	ДанныеЗаполнения.Организация);
		Запрос.УстановитьПараметр("МестоХранения",	ДанныеЗаполнения.МестоХранения);
		Запрос.УстановитьПараметр("Ссылка", 		ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Период", 		ДанныеЗаполнения.Дата);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Номенклатура.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ИзменятьЦену				= Ложь;
			НоваяСтрока.РазрешатьПеретаскивание		= Ложь;
			НоваяСтрока.РазрешатьУдалять			= Истина;
			НоваяСтрока.ОбслуживаемаяНоменклатура	= Истина;
			
		КонецЦикла;
		
		Для каждого Строки Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строки);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Задание") Тогда
		
		Основание			= ДанныеЗаполнения;
		Организация			= ДанныеЗаполнения.Организация;
		МестоХранения		= ДанныеЗаполнения.МестоХранения;
		Комментарий			= ДанныеЗаполнения.Тема;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Поступление") Тогда

		Основание			= ДанныеЗаполнения;
		Организация			= ДанныеЗаполнения.Организация;
		МестоХранения		= ДанныеЗаполнения.МестоХранения;
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОстаткиОстатки.Номенклатура,
			|	ОстаткиОстатки.Партия,
			|	ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
			|	ЕСТЬNULL(ОстаткиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ОстаткиОстатки.СуммаОстаток / ОстаткиОстатки.КоличествоОстаток
			|	КОНЕЦ КАК Себестоимость
			|ПОМЕСТИТЬ ВТ_Остатки
			|ИЗ
			|	РегистрНакопления.Остатки.Остатки(
			|			&Период,
			|			Организация = &Организация
			|				И МестоХранения = &МестоХранения) КАК ОстаткиОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПоступлениеНоменклатура.НомерСтроки КАК НомерСтроки,
			|	ПоступлениеНоменклатура.Номенклатура КАК Номенклатура,
			|	ПоступлениеНоменклатура.КарточкаНоменклатуры,
			|	ПоступлениеНоменклатура.Партия КАК Партия,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(ПоступлениеНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ПоступлениеНоменклатура.Количество
			|		ИНАЧЕ ПоступлениеНоменклатура.Количество * ПоступлениеНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Количество,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(ПоступлениеНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * ПоступлениеНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Цена,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(ПоступлениеНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость * ПоступлениеНоменклатура.Количество
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * ПоступлениеНоменклатура.Количество * ПоступлениеНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Сумма,
			|	ПоступлениеНоменклатура.ЕдиницаИзмерения
			|ИЗ
			|	Документ.Поступление.Номенклатура КАК ПоступлениеНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
			|		ПО ПоступлениеНоменклатура.Партия = ВТ_Остатки.Партия
			|			И (ВЫБОР
			|				КОГДА ПоступлениеНоменклатура.Номенклатура.ВидНоменклатуры.ВестиУчетПоКарточкамНоменклатуры
			|					ТОГДА ПоступлениеНоменклатура.КарточкаНоменклатуры = ВТ_Остатки.Номенклатура
			|				ИНАЧЕ ПоступлениеНоменклатура.Номенклатура = ВТ_Остатки.Номенклатура
			|			КОНЕЦ)
			|ГДЕ
			|	ПоступлениеНоменклатура.Ссылка = &Ссылка");
			
		Запрос.УстановитьПараметр("Организация",	ДанныеЗаполнения.Организация);
		Запрос.УстановитьПараметр("МестоХранения",	ДанныеЗаполнения.МестоХранения);
		Запрос.УстановитьПараметр("Ссылка", 		ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Период", 		Новый Граница(ДанныеЗаполнения.Дата, ВидГраницы.Включая));
		                                                   
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Номенклатура.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ИзменятьЦену				= Ложь;
			НоваяСтрока.РазрешатьПеретаскивание		= Ложь;
			НоваяСтрока.РазрешатьУдалять			= Истина;
			НоваяСтрока.ОбслуживаемаяНоменклатура	= Истина;
			
		КонецЦикла;		
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаКомплектация") Тогда
		
		Основание			= ДанныеЗаполнения;
		Организация			= ДанныеЗаполнения.Организация;
		МестоХранения		= ДанныеЗаполнения.МестоХранения;
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОстаткиОстатки.Номенклатура,
			|	ОстаткиОстатки.Партия,
			|	ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
			|	ЕСТЬNULL(ОстаткиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ОстаткиОстатки.СуммаОстаток / ОстаткиОстатки.КоличествоОстаток
			|	КОНЕЦ КАК Себестоимость
			|ПОМЕСТИТЬ ВТ_Остатки
			|ИЗ
			|	РегистрНакопления.Остатки.Остатки(
			|			&Период,
			|			Организация = &Организация
			|				И МестоХранения = &МестоХранения) КАК ОстаткиОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СборкаКомплектацияНоменклатура.НомерСтроки КАК НомерСтроки,
			|	СборкаКомплектацияНоменклатура.Номенклатура КАК Номенклатура,
			|	СборкаКомплектацияНоменклатура.КарточкаНоменклатуры,
			|	СборкаКомплектацияНоменклатура.Партия КАК Партия,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СборкаКомплектацияНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА СборкаКомплектацияНоменклатура.Количество
			|		ИНАЧЕ СборкаКомплектацияНоменклатура.Количество * СборкаКомплектацияНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Количество,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СборкаКомплектацияНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * СборкаКомплектацияНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Цена,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СборкаКомплектацияНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость * СборкаКомплектацияНоменклатура.Количество
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * СборкаКомплектацияНоменклатура.Количество * СборкаКомплектацияНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Сумма,
			|	СборкаКомплектацияНоменклатура.ЕдиницаИзмерения
			|ИЗ
			|	Документ.СборкаКомплектация.Номенклатура КАК СборкаКомплектацияНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
			|		ПО СборкаКомплектацияНоменклатура.Партия = ВТ_Остатки.Партия
			|			И (ВЫБОР
			|				КОГДА СборкаКомплектацияНоменклатура.Номенклатура.ВидНоменклатуры.ВестиУчетПоКарточкамНоменклатуры
			|					ТОГДА СборкаКомплектацияНоменклатура.КарточкаНоменклатуры = ВТ_Остатки.Номенклатура
			|				ИНАЧЕ СборкаКомплектацияНоменклатура.Номенклатура = ВТ_Остатки.Номенклатура
			|			КОНЕЦ)
			|ГДЕ
			|	СборкаКомплектацияНоменклатура.Ссылка = &Ссылка");
			
		Запрос.УстановитьПараметр("Организация",	ДанныеЗаполнения.Организация);
		Запрос.УстановитьПараметр("МестоХранения",	ДанныеЗаполнения.МестоХранения);
		Запрос.УстановитьПараметр("Ссылка", 		ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Период", 		Новый Граница(ДанныеЗаполнения.Дата, ВидГраницы.Включая));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Номенклатура.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ИзменятьЦену				= Ложь;
			НоваяСтрока.РазрешатьПеретаскивание		= Ложь;
			НоваяСтрока.РазрешатьУдалять			= Истина;
			НоваяСтрока.ОбслуживаемаяНоменклатура	= Истина;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Перемещение") Тогда
		
		Основание			= ДанныеЗаполнения;
		Организация			= ДанныеЗаполнения.ОрганизацияПрихода;
		МестоХранения		= ДанныеЗаполнения.МестоХраненияПрихода;
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОстаткиОстатки.Номенклатура,
			|	ОстаткиОстатки.Партия,
			|	ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
			|	ЕСТЬNULL(ОстаткиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ОстаткиОстатки.СуммаОстаток / ОстаткиОстатки.КоличествоОстаток
			|	КОНЕЦ КАК Себестоимость
			|ПОМЕСТИТЬ ВТ_Остатки
			|ИЗ
			|	РегистрНакопления.Остатки.Остатки(
			|			&Период,
			|			Организация = &Организация
			|				И МестоХранения = &МестоХранения) КАК ОстаткиОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПеремещениеНоменклатура.НомерСтроки КАК НомерСтроки,
			|	ПеремещениеНоменклатура.Номенклатура КАК Номенклатура,
			|	ПеремещениеНоменклатура.КарточкаНоменклатуры,
			|	ПеремещениеНоменклатура.Партия КАК Партия,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(ПеремещениеНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ПеремещениеНоменклатура.Количество
			|		ИНАЧЕ ПеремещениеНоменклатура.Количество * ПеремещениеНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Количество,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(ПеремещениеНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * ПеремещениеНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Цена,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(ПеремещениеНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость * ПеремещениеНоменклатура.Количество
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * ПеремещениеНоменклатура.Количество * ПеремещениеНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Сумма,
			|	ПеремещениеНоменклатура.ЕдиницаИзмерения
			|ИЗ
			|	Документ.Перемещение.Номенклатура КАК ПеремещениеНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
			|		ПО ПеремещениеНоменклатура.Партия = ВТ_Остатки.Партия
			|			И (ВЫБОР
			|				КОГДА ПеремещениеНоменклатура.Номенклатура.ВидНоменклатуры.ВестиУчетПоКарточкамНоменклатуры
			|					ТОГДА ПеремещениеНоменклатура.КарточкаНоменклатуры = ВТ_Остатки.Номенклатура
			|				ИНАЧЕ ПеремещениеНоменклатура.Номенклатура = ВТ_Остатки.Номенклатура
			|			КОНЕЦ)
			|ГДЕ
			|	ПеремещениеНоменклатура.Ссылка = &Ссылка");
			
		Запрос.УстановитьПараметр("Организация",	ДанныеЗаполнения.ОрганизацияПрихода);
		Запрос.УстановитьПараметр("МестоХранения",	ДанныеЗаполнения.МестоХраненияПрихода);
		Запрос.УстановитьПараметр("Ссылка", 		ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Период", 		Новый Граница(ДанныеЗаполнения.Дата, ВидГраницы.Включая));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Номенклатура.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ИзменятьЦену				= Ложь;
			НоваяСтрока.РазрешатьПеретаскивание		= Ложь;
			НоваяСтрока.РазрешатьУдалять			= Истина;
			НоваяСтрока.ОбслуживаемаяНоменклатура	= Истина;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РазбиениеКомплектации") Тогда
		
		Основание			= ДанныеЗаполнения;
		Организация			= ДанныеЗаполнения.Организация;
		МестоХранения		= ДанныеЗаполнения.МестоХранения;
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОстаткиОстатки.Номенклатура,
			|	ОстаткиОстатки.Партия,
			|	ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
			|	ЕСТЬNULL(ОстаткиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ОстаткиОстатки.КоличествоОстаток, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ОстаткиОстатки.СуммаОстаток / ОстаткиОстатки.КоличествоОстаток
			|	КОНЕЦ КАК Себестоимость
			|ПОМЕСТИТЬ ВТ_Остатки
			|ИЗ
			|	РегистрНакопления.Остатки.Остатки(
			|			&Период,
			|			Организация = &Организация
			|				И МестоХранения = &МестоХранения) КАК ОстаткиОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РазбиениеКомплектацииНоменклатура.НомерСтроки КАК НомерСтроки,
			|	РазбиениеКомплектацииНоменклатура.Номенклатура КАК Номенклатура,
			|	РазбиениеКомплектацииНоменклатура.КарточкаНоменклатуры,
			|	РазбиениеКомплектацииНоменклатура.Партия КАК Партия,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(РазбиениеКомплектацииНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА РазбиениеКомплектацииНоменклатура.Количество
			|		ИНАЧЕ РазбиениеКомплектацииНоменклатура.Количество * РазбиениеКомплектацииНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Количество,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(РазбиениеКомплектацииНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * РазбиениеКомплектацииНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Цена,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(РазбиениеКомплектацииНоменклатура.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
			|			ТОГДА ВТ_Остатки.Себестоимость * РазбиениеКомплектацииНоменклатура.Количество
			|		ИНАЧЕ ВТ_Остатки.Себестоимость * РазбиениеКомплектацииНоменклатура.Количество * РазбиениеКомплектацииНоменклатура.ЕдиницаИзмерения.Коэффициент
			|	КОНЕЦ КАК Сумма,
			|	РазбиениеКомплектацииНоменклатура.ЕдиницаИзмерения
			|ИЗ
			|	Документ.РазбиениеКомплектации.Номенклатура КАК РазбиениеКомплектацииНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
			|		ПО РазбиениеКомплектацииНоменклатура.Партия = ВТ_Остатки.Партия
			|			И (ВЫБОР
			|				КОГДА РазбиениеКомплектацииНоменклатура.Номенклатура.ВидНоменклатуры.ВестиУчетПоКарточкамНоменклатуры
			|					ТОГДА РазбиениеКомплектацииНоменклатура.КарточкаНоменклатуры = ВТ_Остатки.Номенклатура
			|				ИНАЧЕ РазбиениеКомплектацииНоменклатура.Номенклатура = ВТ_Остатки.Номенклатура
			|			КОНЕЦ)
			|ГДЕ
			|	РазбиениеКомплектацииНоменклатура.Ссылка = &Ссылка");
			
		Запрос.УстановитьПараметр("Организация",	ДанныеЗаполнения.Организация);
		Запрос.УстановитьПараметр("МестоХранения",	ДанныеЗаполнения.МестоХранения);
		Запрос.УстановитьПараметр("Ссылка", 		ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Период", 		Новый Граница(ДанныеЗаполнения.Дата, ВидГраницы.Включая));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Номенклатура.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ИзменятьЦену				= Ложь;
			НоваяСтрока.РазрешатьПеретаскивание		= Ложь;
			НоваяСтрока.РазрешатьУдалять			= Истина;
			НоваяСтрока.ОбслуживаемаяНоменклатура	= Истина;
			
		КонецЦикла;
				
	КонецЕсли;
	
	// Получаем комплект (верхнюю строку)
	Для Каждого Строки Из Номенклатура Цикл
		
		Если ЗначениеЗаполнено(Строки.Партия) Тогда
			
			Родитель			= Строки.Партия;
			ПредыдущийРодитель 	= Родитель;
			Пока ЗначениеЗаполнено(Родитель) Цикл
				ПредыдущийРодитель = Родитель;
				СтрокаПоиска = Номенклатура.Найти(Родитель, "КарточкаНоменклатуры");
				Если СтрокаПоиска <> Неопределено Тогда
					Родитель = СтрокаПоиска.Партия;
				Иначе
					Родитель = Справочники.КарточкиНоменклатуры.ПустаяСсылка();
				КонецЕсли;
			КонецЦикла;
			
			Если НЕ ЗначениеЗаполнено(Родитель) И ЗначениеЗаполнено(ПредыдущийРодитель) Тогда
				Строки.Комплект = ПредыдущийРодитель;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Строки.Сумма > 0 Тогда
			Строки.Всего = Строки.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет документ перед проведением, возвращает СписокЗначений с ошибками,
// если пустой, то ошибок нет.
Функция ПроверитьДокументПередПроведением()
	
	СписокОшибок = Неопределено;
	
	// Если не заполнен контрагент
	Если (ВидОкончанияОбслуживания = Перечисления.ВидыОкончанияОбслуживания.ОбслуживаниеКонтрагентом) И НЕ ЗначениеЗаполнено(Контрагент) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "Объект.Контрагент", НСтр("ru='Не выбран контрагент для обслуживания оборудования'"), "");
	КонецЕсли;
	
	// Если не заполнено Место обслуживания
	Если (ВидОкончанияОбслуживания = Перечисления.ВидыОкончанияОбслуживания.ВнутреннееОбслуживание) И НЕ ЗначениеЗаполнено(МестоОбслуживания) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "Объект.МестоОбслуживания", НСтр("ru='Не выбрано место, куда будет перемещено оборудование для обслуживания'"), "");
	КонецЕсли;
	
	// Проверим, заполненность места установки
	ЕстьУстановки 	= Ложь;
	ЕстьПеремещения = Ложь;
	Для Каждого Строки Из Номенклатура Цикл
		Если Строки.Событие = Перечисления.СобытиеОбслуживания.СоСклада Тогда
			ЕстьУстановки = Истина;
		КонецЕсли;
		Если Строки.Событие = Перечисления.СобытиеОбслуживания.НаСклад Тогда
			ЕстьПеремещения = Истина;
		КонецЕсли;
		Если НЕ Строки.ОбслуживаемаяНоменклатура И НЕ ЗначениеЗаполнено(Строки.Событие) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "Объект.Номенклатура", СтрШаблон(НСтр("ru = 'Не заполнено событие в номенклатуре, которая была добавлена и не принадлежит к обслуживаемому оборудованию(%1)'"), Строки.Номенклатура), "");
		КонецЕсли;
		Если УправлениеITОтделом8УФПовтИсп.ВестиУчетПоКарточкамНоменклатуры(Строки.Номенклатура) И Строки.Количество <> 1 Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "Объект.Номенклатура", СтрШаблон(НСтр("ru = 'Для номенклатуры %1 ведется учет по карточкам. Количество не может быть не равно единице.'"), Строки.Номенклатура), "");
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьПеремещения И НЕ ЗначениеЗаполнено(МестоХраненияНаСклад) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "Объект.МестоХраненияНаСклад", НСтр("ru = 'Не выбрано место хранения для перемещений (на склад), куда будет перемещено оборудование с событием <На склад>'"), "");
	КонецЕсли;
	Если ЕстьУстановки И НЕ ЗначениеЗаполнено(МестоХраненияСоСклада) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "Объект.МестоХраненияСоСклада", НСтр("ru = 'Не выбрано место хранения для установок (со склада), откуда будет производится использование номенклатуры для оборудования с событием <Со склада>'"), "");
	КонецЕсли;	
	
	Если РаспределятьУслуги = Истина Тогда
		Если Номенклатура.Итог("СуммаРасходов") = 0 Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, 
				"Объект.РаспределятьУслуги", 
				НСтр("ru = 'В документе включено ""Распределение услуг"", при этом распределенная сумма доп.расходов по номенклатуре равна 0.'"), "");
		КонецЕсли;
			
		Если Номенклатура.Итог("СуммаРасходов") > Услуги.Итог("Всего") Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, 
				"Объект.Услуги", 
				НСтр("ru = 'Распределенная сумма доп.расходов по номенклатуре больше суммы услуг.'"), "");
		КонецЕсли;			
	КонецЕсли;
	
	Возврат СписокОшибок;
	
КонецФункции

#КонецОбласти

#КонецЕсли