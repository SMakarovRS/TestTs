#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
КонецПроцедуры

// Проверка объекта на обязательные реквизиты перед проведением.
Процедура ПроверитьДокументПередПроведением(ДополнительныеСвойства, Отказ) Экспорт
	
	// Проверка, что нет дублей в ТЧ по Месту хранения.
	ТЗ = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗакреплениеСотрудников.Скопировать();
	ТЗ.Колонки.Добавить("КоличествоМестХранения");	
	ТЗ.ЗаполнитьЗначения(1, "КоличествоМестХранения");	
	ТЗ.Свернуть("МестоХранения", "КоличествоМестХранения");
	
	Для Каждого Стр Из ТЗ Цикл 
		Если Стр.КоличествоМестХранения > 1 Тогда   
			УправлениеITОтделом8УФ.СообщитьОбОшибке(ЭтотОбъект, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В таблице найдено повторяющееся место хранения %1'"), "'" + Строка(Стр.МестоХранения) + "'"),,,
					"Сотрудники", Отказ);
		КонецЕсли;
	КонецЦикла;
	
	// Проверка, был ли закреплен сотрудник за местом хранения ранее.
	ЗапросОтветственных = Новый Запрос();
	ЗапросОтветственных.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтветственныеСотрудникиСрезПоследних.МестоХранения,
		|	ОтветственныеСотрудникиСрезПоследних.Сотрудник,
		|	ОтветственныеСотрудникиСрезПоследних.Регистратор
		|ИЗ
		|	РегистрСведений.ОтветственныеСотрудники.СрезПоследних(&Дата, ) КАК ОтветственныеСотрудникиСрезПоследних
		|ГДЕ
		|	ОтветственныеСотрудникиСрезПоследних.МестоХранения = &МестоХранения";
		
	ЗапросОтветственных.УстановитьПараметр("МестоХранения", ЭтотОбъект.Сотрудники[0].МестоХранения);
	ЗапросОтветственных.УстановитьПараметр("Дата", ЭтотОбъект.Дата);
	НоваяТЗ = ЗапросОтветственных.Выполнить().Выгрузить();
	
	ПараметрыОтбора = Новый Структура;
	Для Каждого Строки Из НоваяТЗ Цикл
		ПараметрыОтбора.Вставить("Сотрудник", Строки.Сотрудник);
		ПараметрыОтбора.Вставить("МестоХранения", Строки.МестоХранения);
		ПараметрыОтбора.Вставить("Регистратор", Строки.Регистратор);
		НайденныеСтроки = НоваяТЗ.НайтиСтроки(ПараметрыОтбора);
		Если ЗначениеЗаполнено(НайденныеСтроки[0].Сотрудник) И ЭтотОбъект.Сотрудники[0].Сотрудник = НайденныеСтроки[0].Сотрудник Тогда
			УправлениеITОтделом8УФ.СообщитьОбОшибке(ЭтотОбъект, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В таблице за сотрудником %1 уже закреплено место хранения %2'"), "'" + Строка(ЭтотОбъект.Сотрудники[0].Сотрудник) + "'", Строка(ЭтотОбъект.Сотрудники[0].МестоХранения))
			, , , "Сотрудники", Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	СЛС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);	
	
	// Проверка объекта.
	ПроверитьДокументПередПроведением(ДополнительныеСвойства, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Подготовка наборов записей.
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	СЛС.ОтразитьДвиженияВРазделахУчета(Ссылка, ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
		
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		Организация = ДанныеЗаполнения.Организация;
		Комментарий = Строка(ДанныеЗаполнения);
		Основание = ДанныеЗаполнения;
		
		НоваяСтрока = Сотрудники.Добавить();
		НоваяСтрока.Сотрудник = ДанныеЗаполнения;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.МестаХранения") Тогда
		Организация = ДанныеЗаполнения.Организация;
		Комментарий = Строка(ДанныеЗаполнения);
		Основание = ДанныеЗаполнения;
		
		НоваяСтрока = Сотрудники.Добавить();
		НоваяСтрока.МестоХранения = ДанныеЗаполнения;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Задание") Тогда
		Организация					= ДанныеЗаполнения.Организация;
		Комментарий					= ДанныеЗаполнения.Тема;
		Основание					= ДанныеЗаполнения;
		НоваяСтрока					= Сотрудники.Добавить();
		НоваяСтрока.МестоХранения	= ДанныеЗаполнения.МестоХранения;
		Если ТипЗнч(ДанныеЗаполнения.Инициатор) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			НоваяСтрока.Сотрудник	= УправлениеITОтделом8УФ.СотрудникПоОрганизацииИФизЛицу(Организация, ДанныеЗаполнения.Инициатор);
		КонецЕсли;
	КонецЕсли
КонецПроцедуры

#КонецОбласти

#КонецЕсли