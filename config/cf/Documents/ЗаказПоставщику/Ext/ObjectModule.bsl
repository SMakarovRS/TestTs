#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = Номенклатура.Итог("Всего");
	
	Если ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		Для каждого СтрокаТабличнойЧасти Из Номенклатура Цикл
			СтрокаТабличнойЧасти.ДатаПоступления = ДатаПоступления;
		КонецЦикла;
	КонецЕсли;
	Если ПоложениеПодразделения = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		Для каждого СтрокаТабличнойЧасти Из Номенклатура Цикл
			СтрокаТабличнойЧасти.Подразделение = Подразделение;
		КонецЦикла;
	КонецЕсли;
	Если ПоложениеСтатьиДоходовРасходов = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		Для каждого СтрокаТабличнойЧасти Из Номенклатура Цикл
			СтрокаТабличнойЧасти.СтатьяДоходовРасходов = СтатьяДоходовРасходов;
		КонецЦикла;
	КонецЕсли;
	Если ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Если Номенклатура.Количество() > 0 Тогда
			ДатаПоступления = Номенклатура[0].ДатаПоступления;
		КонецЕсли;
	КонецЕсли;
	
	КоличествоВДокументе = Номенклатура.Итог("Количество");
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда	
		Возврат;		
	КонецЕсли;
	
	Если ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ДатаПоступления"));
	Иначе
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Номенклатура.ДатаПоступления"));
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	СЛС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);	
	
	// Подготовка наборов записей.
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	СЛС.ОтразитьДвиженияВРазделахУчета(Ссылка, ДополнительныеСвойства, Движения, Отказ);		
		
	// Запись наборов записей.
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль.
	СЛС.ВыполнитьКонтрольОтрицательныхОстатков(Ссылка, ДополнительныеСвойства, Отказ);		
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа.
	УправлениеITОтделом8УФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеITОтделом8УФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей.
	УправлениеITОтделом8УФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль.
	СЛС.ВыполнитьКонтрольОтрицательныхОстатков(Ссылка, ДополнительныеСвойства, Отказ, Истина);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Задание") Тогда
		
		Организация			= ДанныеЗаполнения.Организация;
		МестоХранения		= ДанныеЗаполнения.МестоХранения;
		Комментарий			= ДанныеЗаполнения.Тема;
		Ответственный		= ДанныеЗаполнения.ТекущийИсполнитель;
		Инициатор			= ДанныеЗаполнения.Инициатор;
		НоваяСтрока			= Основания.Добавить();
		НоваяСтрока.Основание = ДанныеЗаполнения.Ссылка;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланированиеБюджета") Тогда
		
		ПоложениеСтатьиДоходовРасходов			= ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
		СтатьяДоходовРасходов			= ДанныеЗаполнения.СтатьяДоходовРасходов;
		ПоложениеПодразделения			= ДанныеЗаполнения.ПоложениеПодразделения;
		Подразделение					= ДанныеЗаполнения.Подразделение;
		Бюджет							= ДанныеЗаполнения.ПланируемыйБюджет;
		НоваяСтрока						= Основания.Добавить();
		НоваяСтрока.Основание 			= ДанныеЗаполнения.Ссылка;
		СуммаВключаетНДС				= ДанныеЗаполнения.СуммаВключаетНДС;

		Если ДанныеЗаполнения.ПоложениеПериодаБюджета = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
			ПериодБюджета				= ДанныеЗаполнения.ПериодБюджета;
		КонецЕсли;
		
		Для Каждого Строки Из ДанныеЗаполнения.Бюджеты Цикл
			НоваяСтрока					= Номенклатура.Добавить();
			НоваяСтрока.Подразделение 	= Строки.Подразделение;			
			НоваяСтрока.СтатьяДоходовРасходов	= Строки.СтатьяДоходовРасходов;
			НоваяСтрока.Описание		= Строки.Описание;			
			НоменклатураОписание		= Строки.Описание;
			КоличествоДляЗаказа		    = Строки.Количество;
			НоваяСтрока.Количество		= КоличествоДляЗаказа;
			Если ЗначениеЗаполнено(НоменклатураОписание) Тогда
				Если ТипЗнч(НоменклатураОписание) = Тип("СправочникСсылка.Номенклатура") Тогда
					НоваяСтрока.Номенклатура 	 = НоменклатураОписание;
					НоваяСтрока.СтавкаНДС	 	 = Строки.СтавкаНДС;
					НоваяСтрока.ЕдиницаИзмерения = НоменклатураОписание.ЕдиницаИзмерения;									
					НоваяСтрока.Цена  			 = Строки.Цена;
					НоваяСтрока.Сумма 			 = КоличествоДляЗаказа * НоваяСтрока.Цена;
					СтавкаНДС 			 		 = УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеСтавкиНДС(НоваяСтрока.СтавкаНДС);
					НоваяСтрока.СуммаНДС 		 = ?(СуммаВключаетНДС, 
						НоваяСтрока.Сумма - (НоваяСтрока.Сумма) / ((СтавкаНДС + 100) / 100),
						НоваяСтрока.Сумма * СтавкаНДС / 100);
					НоваяСтрока.Всего 			 = НоваяСтрока.Сумма + ?(СуммаВключаетНДС, 0, НоваяСтрока.СуммаНДС);
					
				ИначеЕсли ТипЗнч(НоменклатураОписание) = Тип("СправочникСсылка.КарточкиНоменклатуры") Тогда
					НоваяСтрока.Номенклатура 	 = НоменклатураОписание.Владелец;
					НоваяСтрока.СтавкаНДС	 	 = Строки.СтавкаНДС;
					НоваяСтрока.ЕдиницаИзмерения = НоменклатураОписание.Владелец.ЕдиницаИзмерения;
				    НоваяСтрока.Цена			 = Строки.Цена;
					НоваяСтрока.Сумма 			 = КоличествоДляЗаказа * НоваяСтрока.Цена;
					СтавкаНДС 			 		 = УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеСтавкиНДС(НоваяСтрока.СтавкаНДС);
					НоваяСтрока.СуммаНДС 		 = ?(СуммаВключаетНДС, 
						НоваяСтрока.Сумма - (НоваяСтрока.Сумма) / ((СтавкаНДС + 100) / 100),
						НоваяСтрока.Сумма * СтавкаНДС / 100);
					НоваяСтрока.Всего 			 = НоваяСтрока.Сумма + ?(СуммаВключаетНДС, 0, НоваяСтрока.СуммаНДС);
				Иначе
					НоваяСтрока.Цена			 = Строки.Цена;
					НоваяСтрока.Сумма			 = КоличествоДляЗаказа * НоваяСтрока.Цена;
					НоваяСтрока.СтавкаНДС		 = Строки.СтавкаНДС;
					СтавкаНДС					 = УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеСтавкиНДС(Строки.СтавкаНДС);
					НоваяСтрока.СуммаНДС 		 = ?(СуммаВключаетНДС, 
						НоваяСтрока.Сумма - (НоваяСтрока.Сумма) / ((СтавкаНДС + 100) / 100),
						НоваяСтрока.Сумма * СтавкаНДС / 100);
					НоваяСтрока.Всего 			 = НоваяСтрока.Сумма + ?(СуммаВключаетНДС, 0, НоваяСтрока.СуммаНДС);
				КонецЕсли;
			КонецЕсли;
						
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.НачалоОбслуживания") Тогда
		
		Организация				= ДанныеЗаполнения.Организация;
		МестоХранения			= ДанныеЗаполнения.МестоХранения;
		Бюджет					= ДанныеЗаполнения.Бюджет;
		ПериодБюджета			= ДанныеЗаполнения.ПериодБюджета;
		Ответственный			= Пользователи.ТекущийПользователь();
		ПоложениеСтатьиДоходовРасходов	= ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
		СтатьяДоходовРасходов			= ДанныеЗаполнения.СтатьяДоходовРасходов;
		ПоложениеПодразделения	= ДанныеЗаполнения.ПоложениеПодразделения;
		Подразделение			= ДанныеЗаполнения.Подразделение;
		НоваяСтрока				= Основания.Добавить();
		НоваяСтрока.Основание 	= ДанныеЗаполнения.Ссылка;
		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			НоваяСтрока					= Номенклатура.Добавить();
			НоваяСтрока.Номенклатура 	= Строки.Номенклатура;
			НоваяСтрока.Количество		= Строки.Количество;
			НоваяСтрока.ЕдиницаИзмерения= Строки.ЕдиницаИзмерения;
			НоваяСтрока.Описание		= Строки.Описание;
			НоваяСтрока.СтавкаНДС		= УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяСтавкаНДС");
		КонецЦикла;		
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОкончаниеОбслуживания") Тогда
		
		Организация				= ДанныеЗаполнения.Организация;
		МестоХранения			= ДанныеЗаполнения.МестоХранения;
		Бюджет					= ДанныеЗаполнения.Бюджет;
		ПериодБюджета			= ДанныеЗаполнения.ПериодБюджета;
		Ответственный			= Пользователи.ТекущийПользователь();
		ПоложениеСтатьиДоходовРасходов	= ДанныеЗаполнения.ПоложениеСтатьиДоходовРасходов;
		СтатьяДоходовРасходов			= ДанныеЗаполнения.СтатьяДоходовРасходов;
		ПоложениеПодразделения	= ДанныеЗаполнения.ПоложениеПодразделения;
		Подразделение			= ДанныеЗаполнения.Подразделение;
		НоваяСтрока				= Основания.Добавить();
		НоваяСтрока.Основание 	= ДанныеЗаполнения.Ссылка;

		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			Если Строки.Событие = Перечисления.СобытиеОбслуживания.Списание Тогда				
				НоваяСтрока					= Номенклатура.Добавить();
				НоваяСтрока.Номенклатура 	= Строки.Номенклатура;
				НоваяСтрока.Количество		= Строки.Количество;
				НоваяСтрока.ЕдиницаИзмерения= Строки.ЕдиницаИзмерения;
				НоваяСтрока.Описание		= Строки.Описание;
				НоваяСтрока.СтавкаНДС		= УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяСтавкаНДС");
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Списание") Тогда
		
		Организация				= ДанныеЗаполнения.Организация;
		МестоХранения			= ДанныеЗаполнения.МестоХранения;
		ПоложениеПодразделения	= Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
		Подразделение			= ДанныеЗаполнения.Подразделение;
		Ответственный			= Пользователи.ТекущийПользователь();
		НоваяСтрока				= Основания.Добавить();
		НоваяСтрока.Основание 	= ДанныеЗаполнения.Ссылка;

		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			НоваяСтрока					= Номенклатура.Добавить();
			НоваяСтрока.Номенклатура 	= Строки.Номенклатура;
			НоваяСтрока.Количество		= Строки.Количество;
			НоваяСтрока.ЕдиницаИзмерения= Строки.ЕдиницаИзмерения;
			НоваяСтрока.Описание		= Строки.Описание;
			НоваяСтрока.СтавкаНДС		= УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяСтавкаНДС");
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Контрагент 				= ДанныеЗаполнения.Ссылка;
		Ответственный			= Пользователи.ТекущийПользователь();
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
		
		Организация				= ДанныеЗаполнения.Организация;
		ВидОперации				= Перечисления.ВидыОперацийЗаказПоставщику.ЗаказНаЗакупку;
		МестоХранения			= ДанныеЗаполнения.МестоХранения;
		СтатьяДоходовРасходов	= ДанныеЗаполнения.СтатьяДоходовРасходов;
		Бюджет					= ДанныеЗаполнения.Бюджет;
		ПериодБюджета			= ДанныеЗаполнения.ПериодБюджета;
		Ответственный			= ДанныеЗаполнения.Ответственный;
		НомерВходящегоДокумента	= ДанныеЗаполнения.Номер;
		ДатаВходящегоДокумента	= ДанныеЗаполнения.Дата;
		
		Для Каждого Строки Из ДанныеЗаполнения.Номенклатура Цикл
			НоваяСтрока					= Номенклатура.Добавить();
			НоваяСтрока.Номенклатура	= Строки.Номенклатура;
			НоваяСтрока.Спецификация	= Строки.Спецификация;
			НоваяСтрока.Количество		= Строки.Количество;
			НоваяСтрока.ЕдиницаИзмерения= Строки.ЕдиницаИзмерения;
			НоваяСтрока.Цена			= Строки.Цена;
			НоваяСтрока.Сумма			= Строки.Сумма;
			НоваяСтрока.СтавкаНДС		= Строки.СтавкаНДС;
			НоваяСтрока.СуммаНДС		= Строки.СуммаНДС;
			НоваяСтрока.Всего			= Строки.Всего;
			НоваяСтрока.Описание		= Строки.Описание;
		КонецЦикла;
		
		НоваяСтрока				= Основания.Добавить();
		НоваяСтрока.Основание	= ДанныеЗаполнения;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Инициатор) И ЗначениеЗаполнено(МестоХранения) Тогда
		Сотрудник		= УправлениеITОтделом8УФ.ПолучитьОтветственногоСотрудникаМестаХранения(ТекущаяДатаСеанса(), МестоХранения);
		Если ЗначениеЗаполнено(Сотрудник) Тогда
			Инициатор	= Сотрудник.Физлицо;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения

Процедура ПриКопировании(ОбъектКопирования)
	
	УправлениеITОтделом8УФ.ОчиститьДатуНомерВходящегоДокумента(ЭтотОбъект);
	
	ЗаполнитьПриКопировании();
	 
КонецПроцедуры // ПриКопировании

#КонецОбласти

#Область СлужебныеПроцедурыИФункции	

// Процедура заполняет документ при копировании.
//
Процедура ЗаполнитьПриКопировании()
	
	СостояниеЗаказа = Справочники.СостоянияЗаказовПоставщикам.Открыт;
	Закрыт = Ложь;
	
КонецПроцедуры // ЗаполнитьПриКопировании()

#КонецОбласти

#КонецЕсли