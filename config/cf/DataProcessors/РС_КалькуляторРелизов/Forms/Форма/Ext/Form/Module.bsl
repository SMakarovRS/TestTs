
&НаКлиенте
Процедура Рассчитать(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Конфигурация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите конфигурацию",
			,
			"Конфигурация",
			"Объект.Конфигурация");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ТекущаяВерсия) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите текущую версию, с которой нужно обновлять",
			,
			"ТекущаяВерсия",
			"Объект.ТекущаяВерсия");
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.ТребуемаяВерсия) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите требуемую версию, до которой нужно обновлять",
			,
			"ТребуемаяВерсия",
			"Объект.ТребуемаяВерсия");
		Возврат;
	КонецЕсли;
	
	РассчитатьНаСервере();
	
	УстановитьУсловноеОформлениеТаблицы();
	
	ЗаполнитьПодвалТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодвалТаблицы()
	
	КоличествоОбновлений = Объект.СписокРелизов.Количество() - 1;
	
	Если КоличествоОбновлений <= 0 Тогда
		Элементы.СписокРелизовВерсия.ТекстПодвала = "";
	Иначе
		Элементы.СписокРелизовВерсия.ТекстПодвала = "Итоговое количество обновлений - " + КоличествоОбновлений;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеТаблицы()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРелизов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.СписокРелизов.НомерСтроки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоЗеленый);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокРелизов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.СписокРелизов.НомерСтроки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Объект.СписокРелизов.Количество();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
	
КонецПроцедуры // УстановитьУсловноеОформлениеТаблицы()

&НаСервере
Процедура РассчитатьНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПолучитьСписокРелизов();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДанныеАвторизации = ИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
	
	Если ДанныеАвторизации <> Неопределено Тогда
		
		Объект.Логин = ДанныеАвторизации.Логин;
		Объект.Пароль = ДанныеАвторизации.Пароль;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВерсииКонфигурации(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Конфигурация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите конфигурацию, которую нужно обновить",
			,
			"Конфигурация",
			"Объект.Конфигурация");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Логин)
		ИЛИ Не ЗначениеЗаполнено(Объект.Пароль) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите логин и пароль подключения к сайту ИТС",
			,
			"Логин",
			"Объект.Логин");
			Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ОбновитьВерсииКонфигурацииНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПриОбновленииВерсийКонфигурации", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОбновленииВерсийКонфигурации(Результат, ДополнительныеПараметры) Экспорт
	
	ПоказатьПредупреждение(, "Обновление версий конфигурации завершено");
	
	КонфигурацияПриИзмененииНаСервере();
	
КонецПроцедуры 

&НаСервере
Функция ОбновитьВерсииКонфигурацииНаСервере()
	
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(, "Справочники.РС_ТиповыеКонфигурации.ОбновитьКонфигурацию",
			    	Объект.Конфигурация, Объект.Логин, Объект.Пароль);
	
КонецФункции

&НаСервере
Процедура КонфигурацияПриИзмененииНаСервере()
	
	Объект.ТребуемаяВерсия = ПолучитьПоследнююВерсиюКонфигурации(Объект.Конфигурация);
	УстановитьОписаниеВерсии();
	Объект.СписокРелизов.Очистить();
	ЗаполнитьПодвалТаблицы();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПоследнююВерсиюКонфигурации(Конфигурация)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РС_ВерсииКонфигураций.Ссылка КАК Ссылка,
		|	РС_ВерсииКонфигураций.Наименование КАК Наименование,
		|	РС_ВерсииКонфигураций.ДатаВыхода КАК ДатаВыхода
		|ПОМЕСТИТЬ ВТ_ВерсииКонфигурации
		|ИЗ
		|	Справочник.РС_ВерсииКонфигураций КАК РС_ВерсииКонфигураций
		|ГДЕ
		|	РС_ВерсииКонфигураций.Владелец = &Конфигурация
		|	И НЕ РС_ВерсииКонфигураций.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_ВерсииКонфигурации.ДатаВыхода) КАК ДатаВыхода
		|ПОМЕСТИТЬ ВТ_ПоследняяДатаВыпуска
		|ИЗ
		|	ВТ_ВерсииКонфигурации КАК ВТ_ВерсииКонфигурации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_ВерсииКонфигурации.Ссылка) КАК Ссылка
		|ИЗ
		|	ВТ_ВерсииКонфигурации КАК ВТ_ВерсииКонфигурации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследняяДатаВыпуска КАК ВТ_ПоследняяДатаВыпуска
		|		ПО ВТ_ВерсииКонфигурации.ДатаВыхода = ВТ_ПоследняяДатаВыпуска.ДатаВыхода";
	
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.РС_ВерсииКонфигураций.ПустаяСсылка();
	КонецЕсли;

КонецФункции //  ПолучитьПоследнююВерсиюКонфигурации(Объект.Конфигурация)()

&НаКлиенте
Процедура КонфигурацияПриИзменении(Элемент)
	КонфигурацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТребуемаяВерсияПриИзмененииНаСервере()
	
	УстановитьОписаниеВерсии();
	Объект.СписокРелизов.Очистить();
	ЗаполнитьПодвалТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОписаниеВерсии()

	ОписаниеВерсии = СокрЛП(Объект.ТребуемаяВерсия.Описание);
	Объект.Комментарий = "Описание версии " + Объект.ТребуемаяВерсия + ": " + ОписаниеВерсии;
	
	Элементы.Комментарий.Видимость = Не ПустаяСтрока(ОписаниеВерсии);

КонецПроцедуры // УстановитьОписаниеВерсии()

&НаКлиенте
Процедура ТребуемаяВерсияПриИзменении(Элемент)
	ТребуемаяВерсияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТекущаяВерсияПриИзмененииНаСервере()
	
	Объект.СписокРелизов.Очистить();
	ЗаполнитьПодвалТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяВерсияПриИзменении(Элемент)
	ТекущаяВерсияПриИзмененииНаСервере();
КонецПроцедуры
