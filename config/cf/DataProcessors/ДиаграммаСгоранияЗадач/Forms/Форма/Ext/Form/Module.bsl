
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Диаграмма.Очистить();
    Массив = ЗаданияСервер.АктивныеСпринты();
    Если Массив.Количество() > 0 Тогда
    	Спринт = Массив[0];
    КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
    
    СформироватьНаСервере();
    
КонецПроцедуры

&НаКлиенте
Процедура СпринтАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элементы.Спринт.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;
	МассивТипов = СформироватьСписокСпринтов();
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(МассивТипов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьНаСервере()
	
	Если Не ЗначениеЗаполнено(Спринт) Тогда
		Диаграмма.Очистить();
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не заполнен спринт'"));
		Возврат;		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Спринт.ДатаНачала) Тогда 
		Диаграмма.Очистить();
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не заполнена дата начала спринта'"));
		Возврат;
    КонецЕсли;
    
    Запрос = Новый Запрос();
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ЕСТЬNULL(СУММА(1), 0) КАК КоличествоЗадач,
        |   ЕСТЬNULL(СУММА(Задание.Баллы), 0) КАК СуммаБаллов
        |ИЗ
        |   Документ.Задание КАК Задание
        |ГДЕ
        |   Задание.Спринт = &Спринт
        |   И Задание.ПометкаУдаления = ЛОЖЬ";
    Запрос.УстановитьПараметр("Спринт", Спринт);
    ВыборкаСумм = Запрос.Выполнить().Выбрать();
    Если ВыборкаСумм.Следующий() Тогда
    	КоличествоЗадач = ВыборкаСумм.КоличествоЗадач;
        СуммаБаллов = ВыборкаСумм.СуммаБаллов;
    Иначе
        КоличествоЗадач = 0;
        СуммаБаллов = 0;
    КонецЕсли;
    
	// Получение всех дат, входящих в выбранный спринт
	ТаблицаДат      = ПолучениеДат(Спринт.ДатаНачала, Спринт.ДатаОкончания);
	КоличествоДней  = ТаблицаДат.Количество();
    
    ИдеальноеВыполнение = ?(ВыводитьБаллы, СуммаБаллов, 100);
    Если КоличествоДней = 1 Тогда
        СгораниеДень = ИдеальноеВыполнение;        
    Иначе
        СгораниеДень = ?(ВыводитьБаллы, ИдеальноеВыполнение, 100) / (КоличествоДней - 1);
    КонецЕсли;

    Диаграмма.ОсьЗначений.МаксимальноеЗначение = ?(ВыводитьБаллы, СуммаБаллов, 100);
    Диаграмма.ОбластьПостроения.ШкалаЗначений.ТекстЗаголовка = ?(ВыводитьБаллы, "Баллы", "Процент выполнения, %");
    
	Диаграмма.Очистить();	
	Диаграмма.АвтоТранспонирование	= Ложь;
	Диаграмма.Обновление			= Ложь;
	
	Диаграмма.Серии.Добавить(НСтр("ru = 'Идеальное выполнение'"));
    Диаграмма.Серии.Добавить(НСтр("ru = 'Количество задач'"));	
	Диаграмма.Обновление = Истина;
    
    Запрос.Текст = "";
    Для Каждого Строка Из ТаблицаДат Цикл
        
        Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
        	Запрос.Текст = Запрос.Текст + "
                |ОБЪЕДИНИТЬ ВСЕ
                |";
        КонецЕсли; 
        
        Запрос.Текст = Запрос.Текст +
            "ВЫБРАТЬ
            |   &ТекДата КАК Дата,
            |   СУММА(ВЫБОР
            |           КОГДА &ИспользоватьБаллы = ИСТИНА
            |                   И Задание.Выполнено
            |                   И НАЧАЛОПЕРИОДА(Задание.ДатаВыполнения, ДЕНЬ) = &ТекДата
            |               ТОГДА Задание.Баллы
            |           КОГДА &ИспользоватьБаллы = ЛОЖЬ
            |                   И Задание.Выполнено
            |                   И НАЧАЛОПЕРИОДА(Задание.ДатаВыполнения, ДЕНЬ) = &ТекДата
            |               ТОГДА &СгораниеДень
            |           ИНАЧЕ 0
            |       КОНЕЦ) КАК Выполнено,
            |   СУММА(ВЫБОР
            |           КОГДА Задание.Выполнено
            |                   И НАЧАЛОПЕРИОДА(Задание.ДатаВыполнения, ДЕНЬ) = &ТекДата
            |               ТОГДА 1
            |           ИНАЧЕ 0
            |       КОНЕЦ) КАК КоличествоВыполнено
            |ИЗ
            |   Документ.Задание КАК Задание
            |ГДЕ
            |   Задание.ПометкаУдаления = ЛОЖЬ
            |   И Задание.Спринт = &Спринт";
        
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекДата", "ДАТАВРЕМЯ(" + Формат(Строка.Дата, "ДФ=yyyy") + "," + Формат(Строка.Дата, "ДФ=M") + "," + Формат(Строка.Дата, "ДФ=dd") + ",0,0,0)");
        
    КонецЦикла;    
    Запрос.УстановитьПараметр("Спринт", Спринт);
    Запрос.УстановитьПараметр("ИспользоватьБаллы", ВыводитьБаллы);
    Запрос.УстановитьПараметр("СгораниеДень", СгораниеДень);
    Таблица = Запрос.Выполнить().Выгрузить();
    
    ПроцентВыполненоЗадач = 0;
    КоличествоВыполненныхЗадач = 0;
    ВыполненоИтого = ИдеальноеВыполнение;
    ВыполненоЗадач = 0;
    ВсегоВыполнено = 0;
    
    Для Каждого Строка Из ТаблицаДат Цикл
        
		// Заполнение показателя "Идеальное выполнение"
		Точка = Диаграмма.УстановитьТочку(Формат(Строка.Дата, "ДЛФ=ДД"));
		Диаграмма.УстановитьЗначение(Точка,
            Диаграмма.Серии[0],
            ИдеальноеВыполнение,
            НСтр("ru = 'Идеальное выполнение'"),
            ?(ВыводитьБаллы, 
                СтрШаблон(НСтр("ru = 'Идеальное выполнение
								|Баллов: %1'"),
                    Окр(ИдеальноеВыполнение, 1)),
                СтрШаблон(НСтр("ru = 'Идеальное выполнение
								|Процент: %1%2'"),
                    Окр(ИдеальноеВыполнение, 1), "%")
            ));
		ИдеальноеВыполнение = ИдеальноеВыполнение - СгораниеДень;
        
        // Выполнено.        
        Отбор = Новый Структура;
        Отбор.Вставить("Дата", Строка.Дата);
        Строки = Таблица.НайтиСтроки(Отбор);
        Если Строки.Количество() <> 0 Тогда
            КоличествоВыполненныхЗадач = Строки[0].КоличествоВыполнено;
            Если ВыводитьБаллы Тогда
                ВыполненоЗадач = ВыполненоЗадач + (КоличествоВыполненныхЗадач * 100) / КоличествоЗадач;	
                ПроцентВыполненоЗадач = ПроцентВыполненоЗадач + ВыполненоЗадач;
                Выполнено = Строки[0].Выполнено;
                ВыполненоИтого = ВыполненоИтого - Выполнено;
            Иначе
                Если КоличествоВыполненныхЗадач > 0 И КоличествоЗадач > 0 Тогда
                    ВыполненоЗадач = (КоличествоВыполненныхЗадач * 100) / КоличествоЗадач;
                    ПроцентВыполненоЗадач = ВыполненоЗадач;
                    ВыполненоИтого = ВыполненоИтого - ВыполненоЗадач;                	
                КонецЕсли; 
            КонецЕсли;
            ВсегоВыполнено = ВсегоВыполнено + КоличествоВыполненныхЗадач;
        Иначе
            Выполнено = 0;
        КонецЕсли;
        
        Точка = Диаграмма.УстановитьТочку(Формат(Строка.Дата,  "ДЛФ=ДД"));
        Диаграмма.УстановитьЗначение(Точка,
            Диаграмма.Серии[1],
            ВыполненоИтого,
            НСтр("ru = 'Количество выполненных задач на дату'"),
            ?(ВыводитьБаллы, 
                СтрШаблон(НСтр("ru = 'Выполнено задач: %1
								|Выполнено баллов: %2'"),
                                    КоличествоВыполненныхЗадач, Выполнено),            
                СтрШаблон(НСтр("ru = 'Выполнено задач: %1
								|Процент выполненых задач: %2%3'"),
                    КоличествоВыполненныхЗадач, Окр(ПроцентВыполненоЗадач, 1), "%")
            ));
    
    КонецЦикла;
    
	Диаграмма.ОбластьЗаголовка.Текст= СтрШаблон(НСтр("ru = 'Всего задач: %1
													  |Выполнено: %2'"), КоличествоЗадач, ВсегоВыполнено);
	Диаграмма.АвтоТранспонирование	= Истина;
	Диаграмма.Обновление			= Истина;
    
КонецПроцедуры

&НаСервере
Функция ПолучениеДат(ДатаНачала, ДатаОкончания)
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	 "ВЫБРАТЬ
	 |	aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d КАК НомерДняИзДиапазона
	 |ПОМЕСТИТЬ ВТ_Дни
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		0 КАК a
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		1
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		2
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		3
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		4
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		5
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		6
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		7
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		8
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		9) КАК aa
	 |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |			0 КАК b
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			1
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			2
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			3
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			4
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			5
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			6
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			7
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			8
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			9) КАК bb
	 |		ПО (ИСТИНА)
	 |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |			0 КАК c
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			1
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			2
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			3
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			4
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			5
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			6
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			7
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			8
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			9) КАК cc
	 |		ПО (ИСТИНА)
	 |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |			0 КАК d
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			1
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			2
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			3
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			4
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			5
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			6
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			7
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			8
	 |		
	 |		ОБЪЕДИНИТЬ ВСЕ
	 |		
	 |		ВЫБРАТЬ
	 |			9) КАК dd
	 |		ПО (ИСТИНА)
	 |ГДЕ
	 |	aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d <= РАЗНОСТЬДАТ(&НачалоПериода, &КонецПериода, ДЕНЬ)
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, ВТ_Дни.НомерДняИзДиапазона) КАК Дата
	 |ИЗ
	 |	ВТ_Дни КАК ВТ_Дни";
	
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);
	
	ТаблицаДат = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаДат;
		
КонецФункции

&НаКлиенте
Процедура ДиаграммаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьСписокСпринтов()
	
	Возврат Справочники.Спринты.АвтоПодборСпринтовВыполнения();
	
КонецФункции

#КонецОбласти

