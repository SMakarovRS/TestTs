#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ОбновитьДанныеTelegram();
    ОбновитьВидимостьДоступность();
    
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ОбновитьДанныеTelegram" Тогда
		ОбновитьДанныеTelegram();
        ОбновитьВидимостьДоступность();
	КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьTelegramПриИзменении(Элемент)
    
    ИзменитьКонстанту("ИспользоватьTelegram", ИспользоватьTelegram);
    ОбновитьВидимостьДоступность();
    
КонецПроцедуры

&НаКлиенте
Процедура TelegramИспользоватьСписокПроксиСерверовПриИзменении(Элемент)
    
    ИзменитьКонстанту("TelegramИспользоватьСписокПроксиСерверов", TelegramИспользоватьСписокПроксиСерверов);
    ОбновитьВидимостьДоступность();
    
КонецПроцедуры

&НаКлиенте
Процедура TelegramСрокХраненияСообщенийПриИзменении(Элемент)
    
    ИзменитьКонстанту("TelegramСрокХраненияСообщений", TelegramСрокХраненияСообщений);
    
КонецПроцедуры

&НаКлиенте
Процедура TelegramТаймаутПодключенийПриИзменении(Элемент)
    
    ИзменитьКонстанту("TelegramТаймаутПодключений", TelegramТаймаутПодключений);
    
КонецПроцедуры

&НаКлиенте
Процедура TelegramДействиеКомандаНеНайденаПриИзменении(Элемент)
    
    ИзменитьКонстанту("TelegramДействиеКомандаНеНайдена", TelegramДействиеКомандаНеНайдена);
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СтатьиКакНастроить(Команда)
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://softonit.ru/FAQ/courses/?COURSE_ID=1&CHAPTER_ID=0678"
		+ "&id=it3&referrer=utm_source&utm_campaign=from1c&utm_content=settings_telegram");
	
КонецПроцедуры

&НаКлиенте
Процедура БотыТелеграмм(Команда)
	
	ОткрытьФорму("Справочник.TelegramБоты.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ТелеграммКоманды(Команда)
	
	ОткрытьФорму("Справочник.TelegramКоманды.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ТелеграммПользователи(Команда)
	
	ОткрытьФорму("Справочник.TelegramПользователи.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ТелеграммСообщения(Команда)
	
	ОткрытьФорму("Документ.TelegramСообщениеВходящее.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура TelegramИсходящиеСообщения(Команда)
    
    ОткрытьФорму("Документ.TelegramСообщениеИсходящее.ФормаСписка");
    
КонецПроцедуры

&НаКлиенте
Процедура ТелеграммПроксиСерверы(Команда)
	
	ОткрытьФорму("Справочник.TelegramПрокси.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ТелеграммЗапуститьОбработкуСообщений(Команда)
	
	ДлительнаяОперация = TelegramПолучитьСообщенияНаСервере();
	Если ДлительнаяОперация <> Неопределено Тогда
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания       = Истина;
		ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
		ПараметрыОжидания.ТекстСообщения       		 = 
			НСтр("ru = 'Получение/отправка сообщений ботов Telegram. Это может занять некоторое время'");
		ПараметрыОжидания.Интервал             		 = 2;
		ОповещениеОЗавершении 						 = 
			Новый ОписаниеОповещения("TelegramПослеЗавершенияВыполненияСервернойКомандыВФоне", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция TelegramПолучитьСообщенияНаСервере()
	
	Если ДлительнаяОперация <> Неопределено Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ДлительнаяОперация.ИдентификаторЗадания);
	КонецЕсли;
	                                                            
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение           = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = "ПолучениеОтправкаСообщенияВФоне";
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;		
	ПараметрыЗадания 								= Новый Структура;	
	Результат = ДлительныеОперации.ВыполнитьВФоне("TelegramСервер.ПолучениеОтправкаСообщенияВФоне",
													ПараметрыЗадания, ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура TelegramПослеЗавершенияВыполненияСервернойКомандыВФоне(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат.Статус = "Ошибка" Тогда
		Попытка
			СтрокаОшибки = Результат.КраткоеПредставлениеОшибки;
		Исключение
			СтрокаОшибки = НСтр("ru = 'Ошибка не идентифицирована'");
		КонецПопытки;
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не удалось получить сообщения Telegram: %1.'"), СтрокаОшибки);
	Иначе
		Оповестить("ОбновитьДанныеTelegram");
	КонецЕсли;		
			
КонецПроцедуры

&НаКлиенте
Процедура ТелеграммСтатистикаОтправкиСообщенийПроксиСерверов(Команда)
	
	ОткрытьФорму("РегистрСведений.TelegramСтатистикаОтправкиСообщений.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ТелеграммДействия(Команда)
	
	ОткрытьФорму("Справочник.TelegramДействия.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура TelegramКлавиатуры(Команда)
    
    ОткрытьФорму("Справочник.TelegramКлавиатуры.ФормаСписка");
    
КонецПроцедуры

&НаКлиенте
Процедура TelegramУсловия(Команда)
	
	ОткрытьФорму("Справочник.TelegramУсловия.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура TelegramПараметрыДействий(Команда)
	
	ОткрытьФорму("ПланВидовХарактеристик.TelegramПараметрыДействий.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура TelegramEmoji(Команда)
    
    ОткрытьФорму("Справочник.TelegramEmoji.ФормаСписка");
    
КонецПроцедуры

&НаКлиенте
Процедура TelegramПараметрыЧатов(Команда)
	
	ОткрытьФорму("РегистрСведений.TelegramЧаты.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура TelegramНастройкиОчистить(Команда)
    
	ПоказатьВопрос(Новый ОписаниеОповещения("TelegramОчиститьНастройкиЗавершение", ЭтотОбъект), 
		НСтр("ru = 'Действительно очистить ВСЕ настройки Telegram?'"), РежимДиалогаВопрос.ДаНет);
    
КонецПроцедуры

&НаКлиенте
Процедура TelegramОчиститьНастройкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса; 
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	TelegramСервер.ОчиститьНастройки();
	ОбновитьДанныеTelegram();
	ПоказатьПредупреждение(, НСтр("ru = 'Очистка настроек Telegram завершена'"));

КонецПроцедуры

&НаКлиенте
Процедура TelegramОбновитьДанные(Команда)
    
    ОбновитьДанныеTelegram();
    
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеTelegram()
    
    Попытка
    	Структура = TelegramСервер.КоличествоДанных();
    Исключение
        Структура = Неопределено;
    КонецПопытки;
    
    УстановитьПривилегированныйРежим(Истина);
    
    ИспользоватьTelegram                = Константы.ИспользоватьTelegram.Получить();
    TelegramДействиеКомандаНеНайдена    = Константы.TelegramДействиеКомандаНеНайдена.Получить();
    TelegramИспользоватьСписокПроксиСерверов = Константы.TelegramИспользоватьСписокПроксиСерверов.Получить();
    TelegramСрокХраненияСообщений       = Константы.TelegramСрокХраненияСообщений.Получить();
    TelegramТаймаутПодключений          = Константы.TelegramТаймаутПодключений.Получить();
        
    Элементы.TelegramБоты.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Telegram боты'"), Структура, 
        "КоличествоБотов");
    Элементы.TelegramПользователи.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Пользователи'"), Структура, 
        "Пользователи");
    Элементы.TelegramПроксиСерверы.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Прокси-серверы'"), Структура, 
        "Прокси");
    Элементы.TelegramКоманды.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Команды'"), Структура, 
        "Команды");
    Элементы.TelegramДействия.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Действия'"), Структура, 
        "Действия");
    Элементы.TelegramУсловия.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Условия'"), Структура, 
        "Условия");
    Элементы.TelegramПараметрыДействий.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Параметры действий'"), Структура,
        "Параметры");
    Элементы.TelegramEmoji.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Emoji'"), Структура, 
        "Emoji");
    Элементы.TelegramСообщениеВходящее.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Входящие сообщения'"), Структура,
        "КоличествоВходящихСообщений");
    Элементы.TelegramИсходящиеСообщения.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Исходящие сообщения'"), Структура,
        "КоличествоИсходящихСообщений");
    Элементы.TelegramСтатистикаОтправкиСообщенийПроксиСерверов.Заголовок =
        СтрокаСКоличеством(НСтр("ru = 'Статистика отправки прокси'"), Структура, "ПопытокОтправки");
    Элементы.TelegramКлавиатуры.Заголовок = СтрокаСКоличеством(НСтр("ru = 'Клавиатуры'"), Структура, 
        "Клавиатуры"); 
    
КонецПроцедуры

&НаКлиенте
Процедура TelegramНастройкиСохранить(Команда)
    
    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
    Диалог.Фильтр = НСтр("ru = 'Архивы (*.zip)|*.zip'");
    Диалог.Показать(Новый ОписаниеОповещения("TelegramНастройкиСохранитьЗавершение", ЭтотОбъект, 
    	Новый Структура("Диалог", Диалог)));    
        
КонецПроцедуры

&НаКлиенте
Процедура TelegramНастройкиСохранитьЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
    Диалог = ДополнительныеПараметры.Диалог;
    
    Если ВыбранныеФайлы <> Неопределено Тогда
        
        ИмяФайла = Диалог.ПолноеИмяФайла;
        
        Адрес = TelegramСервер.ВыгрузитьНастройки();
        ДД = ПолучитьИзВременногоХранилища(Адрес);
        ДД.Записать(ИмяФайла);
        УдалитьИзВременногоХранилища(Адрес);
		ПоказатьПредупреждение(, НСтр("ru = 'Сохранение настроек Telegram завершено'"));
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура TelegramНастройкиЗагрузить(Команда)
    
    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    Диалог.Фильтр = НСтр("ru = 'Архивы (*.zip)|*.zip'");
    Диалог.Показать(Новый ОписаниеОповещения("TelegramНастройкиЗагрузитьЗавершение", ЭтотОбъект, 
    	Новый Структура("Диалог", Диалог)));    

КонецПроцедуры

&НаКлиенте
Процедура TelegramНастройкиЗагрузитьЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
    Диалог = ДополнительныеПараметры.Диалог;
    
    Если ВыбранныеФайлы <> Неопределено Тогда
        
        ИмяФайла = Диалог.ПолноеИмяФайла;        
        ДД		= Новый ДвоичныеДанные(ИмяФайла);
        Адрес  = ПоместитьВоВременноеХранилище(ДД);
        TelegramСервер.ЗагрузитьНастройки(Адрес);
        ОбновитьДанныеTelegram();
        ПоказатьПредупреждение(, НСтр("ru = 'Загрузка настроек Telegram завершена'"));
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура TelegramНастройкиЗаполнитьПредопределенные(Команда)
    
    ПоказатьВопрос(Новый ОписаниеОповещения("TelegramНастройкиЗаполнитьПредопределенныеЗавершение", ЭтотОбъект), 
    	НСтр("ru = 'Вы уверены, что хотите перезаписать настройки Telegram настойками по умолчанию?'"), 
    	РежимДиалогаВопрос.ДаНет); 
    
КонецПроцедуры

&НаКлиенте
Процедура TelegramНастройкиЗаполнитьПредопределенныеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
        TelegramСервер.ЗаполнитьНастройкиTelegramПоУмолчанию(Ложь);
		ОбновитьДанныеTelegram();
		ПоказатьПредупреждение(, НСтр("ru = 'Загрузка предопределенных настроек Telegram завершена'"));
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СтрокаСКоличеством(Строка, Структура, Реквизит)
    
    Попытка
    	Количество = Структура[Реквизит];
    Исключение
        Количество = 0;
    КонецПопытки;
    
    Возврат Строка + ?(Количество <> 0, " (" + Формат(Количество, "ЧРД=; ЧРГ=; ЧН=0; ЧГ=") + ")", "");
    
КонецФункции

&НаСервере
Процедура ИзменитьКонстанту(Знач Имя, Знач Значение)
    
    УстановитьПривилегированныйРежим(Истина);
    Константы[Имя].Установить(Значение);
    
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьДоступность()
    
    Элементы.ГруппаОбщаяПанельTelegram.Видимость 				= ИспользоватьTelegram;
    Элементы.TelegramПроксиСерверы.Видимость 					= TelegramИспользоватьСписокПроксиСерверов;
    Элементы.TelegramСтатистикаОтправкиСообщенийПроксиСерверов.Видимость = TelegramИспользоватьСписокПроксиСерверов;
    Элементы.ГруппаСрокХранения.Видимость 						= ИспользоватьTelegram;
    Элементы.ГруппаТаймаут.Видимость 							= ИспользоватьTelegram;
    Элементы.TelegramИспользоватьСписокПроксиСерверов.Видимость = ИспользоватьTelegram;
    Элементы.TelegramДействиеКомандаНеНайдена.Видимость 		= ИспользоватьTelegram;
    
КонецПроцедуры

#КонецОбласти