
#Область ОписаниеПеременных

&НаКлиенте
Перем ОбновитьИнтерфейс;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НомерВерсииКонфигурации = ОбновлениеИнформационнойБазы.ВерсияИБ(Метаданные.Имя);
	Элементы.ПанельОбщая.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;	
		
	ТолькоПросмотр = УправлениеITОтделом8УФ.ЭтоДемоСерверОграниченныеПрава();
	Элементы.ГруппаКнопокВнизу.Доступность = НЕ ТолькоПросмотр;
		
	БазовыеЦвета = ЗначениеИзСтрокиВнутр(ПолучитьОбщийМакет("БазовыеЦвета").ПолучитьТекст());
	Попытка
		РедактируемыйЦветФонаПросроченногоЗадания 	= 
			РаботаСЦветомКлиентСервер.HexВЦвет(НаборКонстант.ЦветФонаПросроченнойЗадачи);
		РедактируемыйЦветТекстаПросроченногоЗадания = 
			РаботаСЦветомКлиентСервер.HexВЦвет(НаборКонстант.ЦветТекстаПросроченнойЗадачи);			
	Исключение
		РедактируемыйЦветФонаПросроченногоЗадания 	= Новый Цвет(255, 153, 153);
		РедактируемыйЦветТекстаПросроченногоЗадания = WebЦвета.Черный;
	КонецПопытки;
	
	Попытка
		РедактируемыйЦветФонаПомеченногоЗадания 	= 
			РаботаСЦветомКлиентСервер.HexВЦвет(НаборКонстант.ЦветФонаПомеченнойЗадачи);
		РедактируемыйЦветТекстаПомеченногоЗадания	= 
			РаботаСЦветомКлиентСервер.HexВЦвет(НаборКонстант.ЦветТекстаПомеченнойЗадачи);			
	Исключение
		РедактируемыйЦветФонаПомеченногоЗадания 	= Новый Цвет(255, 255, 204);
		РедактируемыйЦветТекстаПомеченногоЗадания	= WebЦвета.Черный;
	КонецПопытки;
	
	НоваяСтрока = ПримерТекстаПросроченногоЗадания.Добавить();
	НоваяСтрока.Пример = НСтр("ru = 'Пример текста,'");
	НоваяСтрока = ПримерТекстаПросроченногоЗадания.Добавить();
	НоваяСтрока.Пример = НСтр("ru = 'который будет выводиться'");
	НоваяСтрока = ПримерТекстаПросроченногоЗадания.Добавить();
	НоваяСтрока.Пример = НСтр("ru = 'в списке заданий для просроченного задания'");
	
	НоваяСтрока = ПримерТекстаПомеченногоЗадания.Добавить();
	НоваяСтрока.Пример = НСтр("ru = 'Пример текста,'");
	НоваяСтрока = ПримерТекстаПомеченногоЗадания.Добавить();
	НоваяСтрока.Пример = НСтр("ru = 'который будет выводиться'");
	НоваяСтрока = ПримерТекстаПомеченногоЗадания.Добавить();
	
	НоваяСтрока.Пример = НСтр("ru = 'в списке заданий для помеченного (выделенного) задания'");
	
	ОбновитьЦветТекстаИФона();	
	ЗаполнитьДеревоДействий();
	
	ИспользоватьДинамическиеПриоритеты = Константы.ИспользоватьДинамическиеПриоритеты.Получить();
	
КонецПроцедуры

&НаСервере
Функция ДобавитьДействиеВДерево(СтрокаРодитель, Знач Картинка, Знач Заголовок, Знач Идентификатор)
	
	НоваяСтрока 				= СтрокаРодитель.Строки.Добавить();
	НоваяСтрока.Картинка 		= Картинка;
	НоваяСтрока.Заголовок 		= Заголовок;
	НоваяСтрока.Идентификатор 	= Идентификатор;
	
	Возврат НоваяСтрока;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВидимость();
	
	Элементы.ПанельБаза.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	ИнициализацияЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(НаборКонстант.МаркерыНомераЗаданияВТемеЭлектронныхПисемПриОтвете) 
		И ЗначениеЗаполнено(НаборКонстант.МаркерыНомераКомментарияВТемеЭлектронныхПисем) Тогда
		
		МассивМаркеровНомераЗадания = Новый Массив;
		СтрокаМаркеров = НаборКонстант.МаркерыНомераЗаданияВТемеЭлектронныхПисемПриОтвете; 
		Для Индекс = 1 По СтрЧислоСтрок(СтрокаМаркеров) Цикл
			Маркер = СокрЛП(СтрПолучитьСтроку(СтрокаМаркеров, Индекс));
			Если НЕ ПустаяСтрока(Маркер) Тогда
				МассивМаркеровНомераЗадания.Добавить(Маркер);
			КонецЕсли;
		КонецЦикла;
		
		МассивМаркеровНомераКомментария = Новый Массив;
		СтрокаМаркеров = НаборКонстант.МаркерыНомераКомментарияВТемеЭлектронныхПисем; 
		Для Индекс = 1 По СтрЧислоСтрок(СтрокаМаркеров) Цикл
			Маркер = СокрЛП(СтрПолучитьСтроку(СтрокаМаркеров, Индекс));
			Если НЕ ПустаяСтрока(Маркер) Тогда
				МассивМаркеровНомераКомментария.Добавить(Маркер);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого МаркерНомера Из МассивМаркеровНомераКомментария Цикл
			Если МассивМаркеровНомераЗадания.Найти(МаркерНомера) <> Неопределено Тогда
				Отказ = Истина;
				ПоказатьПредупреждение(, 
					НСтр("ru = 'Маркеры номера задания уже содержат один или несколько указанных маркеров номера комментария.
                          |Необходимо использовать только уникальные маркеры номера комментария.'"));
				Возврат;
			КонецЕсли;	
		КонецЦикла;	
		
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьИнтерфейс();
	ПервыйЗапуск();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗУПНаходитсяНаСервереПриИзменении(Элемент)
	
	ИнициализацияЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗагрузкуСотрудниковИзЗУППриИзменении(Элемент)
	ИнициализацияЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ЗУПКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораКаталогЭкспорта = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталогЭкспорта.Заголовок = НСтр("ru = 'Каталог с конфигурацией'");
	ДиалогВыбораКаталогЭкспорта.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораКаталогЭкспорта.Каталог = НаборКонстант.ЗагрузкаСотрудниковКаталог;
	ДиалогВыбораКаталогЭкспорта.Показать(Новый ОписаниеОповещения("ЗУПКаталогНачалоВыбораЗавершение", ЭтотОбъект, 
		Новый Структура("ДиалогВыбораКаталогЭкспорта", ДиалогВыбораКаталогЭкспорта)));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗУПКаталогНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогВыбораКаталогЭкспорта = ДополнительныеПараметры.ДиалогВыбораКаталогЭкспорта;
	
	Если Не (ВыбранныеФайлы <> Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	НаборКонстант.ЗагрузкаСотрудниковКаталог = ДиалогВыбораКаталогЭкспорта.Каталог;

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИмяSMSотправителяПриИзменении(Элемент)
	ОбновитьВидимость();
КонецПроцедуры

&НаСервере
Функция ПоместитьОбщийМакетВХранилище(ИмяМакета)
	Макет = ПолучитьОбщийМакет(ИмяМакета);
	Возврат ПоместитьВоВременноеХранилище(Макет);
КонецФункции

&НаКлиенте
Процедура РедактируемыйЦветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("РедактируемыйЦветНачалоВыбораЗавершение", ЭтотОбъект), 
		БазовыеЦвета, Элемент, БазовыеЦвета.НайтиПоЗначению(РедактируемыйЦветФонаПросроченногоЗадания));
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Результат = ВыбранныйЭлемент;
    Если Результат <> Неопределено Тогда
        
        Если ТипЗнч(Результат.Значение) = Тип("Строка") Тогда           
			РедактируемыйЦветНачалоВыбораЗавершениеОписаниеОповещения = 
				Новый ОписаниеОповещения ("РедактируемыйЦветНачалоВыбораЗавершениеОписаниеОповещения",ЭтаФорма);
			ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
			ДиалогВыбораЦвета.Показать(РедактируемыйЦветНачалоВыбораЗавершениеОписаниеОповещения);
        Иначе
            РедактируемыйЦветФонаПросроченногоЗадания = Результат.Значение;
        КонецЕсли;
		ОбновитьЦветаПросроченнойЗадачиНаСервере();
		ОбновитьЦветТекстаИФона();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветНачалоВыбораЗавершениеОписаниеОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		РедактируемыйЦветФонаПросроченногоЗадания = Результат;
	КонецЕсли;	
	ОбновитьЦветаПросроченнойЗадачиНаСервере();
	ОбновитьЦветТекстаИФона();
	
КонецПроцедуры	

&НаКлиенте
Процедура РедактируемыйЦветОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Цвет") Тогда
		РедактируемыйЦветФонаПросроченногоЗадания = ВыбранноеЗначение;		
		ОбновитьЦветаПросроченнойЗадачиНаСервере();
		ОбновитьЦветТекстаИФона();
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветФонаПомеченногоЗаданияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("РедактируемыйЦветФонаПомеченногоЗаданияНачалоВыбораЗавершение", 
		ЭтотОбъект), БазовыеЦвета, Элемент, БазовыеЦвета.НайтиПоЗначению(РедактируемыйЦветФонаПомеченногоЗадания));
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветФонаПомеченногоЗаданияНачалоВыбораЗавершение(ВыбранныйЭлемент, 
	ДополнительныеПараметры) Экспорт
    
    Результат = ВыбранныйЭлемент;
    Если Результат <> Неопределено Тогда
        
        Если ТипЗнч(Результат.Значение) = Тип("Строка") Тогда           
			Оповещение = Новый ОписаниеОповещения (
				"РедактируемыйЦветФонаПомеченногоЗаданияНачалоВыбораЗавершениеОписаниеОповещения", ЭтаФорма);
			ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
			ДиалогВыбораЦвета.Показать(Оповещение);
        Иначе
            РедактируемыйЦветФонаПомеченногоЗадания = Результат.Значение;
        КонецЕсли;
		ОбновитьЦветаПомеченнойЗадачиНаСервере();
		ОбновитьЦветТекстаИФона();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветФонаПомеченногоЗаданияНачалоВыбораЗавершениеОписаниеОповещения(Результат, 
	ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		РедактируемыйЦветФонаПомеченногоЗадания = Результат;
	КонецЕсли;	
	ОбновитьЦветаПомеченнойЗадачиНаСервере();
	ОбновитьЦветТекстаИФона();
	
КонецПроцедуры	

&НаКлиенте
Процедура РедактируемыйЦветФонаПомеченногоЗаданияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Цвет") Тогда
		РедактируемыйЦветФонаПомеченногоЗадания = ВыбранноеЗначение;		
		ОбновитьЦветаПомеченнойЗадачиНаСервере();
		ОбновитьЦветТекстаИФона();
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("РедактируемыйЦветТекстаНачалоВыбораЗавершение", ЭтотОбъект),
		БазовыеЦвета, Элемент, БазовыеЦвета.НайтиПоЗначению(РедактируемыйЦветТекстаПросроченногоЗадания));
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Результат = ВыбранныйЭлемент;
    Если Результат <> Неопределено Тогда
        
        Если ТипЗнч(Результат.Значение) = Тип("Строка") Тогда
			РедактируемыйЦветТекстаНачалоВыбораЗавершениеОписаниеОповещения = 
				Новый ОписаниеОповещения ("РедактируемыйЦветТекстаНачалоВыбораЗавершениеОписаниеОповещения", ЭтаФорма);
			ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
			ДиалогВыбораЦвета.Показать(РедактируемыйЦветТекстаНачалоВыбораЗавершениеОписаниеОповещения);			
        Иначе
            РедактируемыйЦветТекстаПросроченногоЗадания = Результат.Значение;			
        КонецЕсли;
        ОбновитьЦветаПросроченнойЗадачиНаСервере();
        ОбновитьЦветТекстаИФона();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаНачалоВыбораЗавершениеОписаниеОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		РедактируемыйЦветТекстаПросроченногоЗадания = Результат;
	КонецЕсли;	
	ОбновитьЦветаПросроченнойЗадачиНаСервере();
	ОбновитьЦветТекстаИФона();
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Цвет") Тогда
		РедактируемыйЦветТекстаПросроченногоЗадания = ВыбранноеЗначение;
		ОбновитьЦветаПросроченнойЗадачиНаСервере();
		ОбновитьЦветТекстаИФона();
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаПомеченногоЗаданияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("РедактируемыйЦветТекстаПомеченногоЗаданияНачалоВыбораЗавершение", 
		ЭтотОбъект);
	ПоказатьВыборИзСписка(Оповещение, БазовыеЦвета, Элемент, 
		БазовыеЦвета.НайтиПоЗначению(РедактируемыйЦветТекстаПомеченногоЗадания));
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаПомеченногоЗаданияНачалоВыбораЗавершение(ВыбранныйЭлемент, 
	ДополнительныеПараметры) Экспорт
    
    Результат = ВыбранныйЭлемент;
    Если Результат <> Неопределено Тогда
        
        Если ТипЗнч(Результат.Значение) = Тип("Строка") Тогда
			Оповещение = Новый ОписаниеОповещения(
				"РедактируемыйЦветТекстаПомеченногоЗаданияНачалоВыбораЗавершениеОписаниеОповещения", ЭтаФорма);
			ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
			ДиалогВыбораЦвета.Показать(Оповещение);
        Иначе
            РедактируемыйЦветТекстаПомеченногоЗадания = Результат.Значение;			
        КонецЕсли;
        ОбновитьЦветаПомеченнойЗадачиНаСервере();
        ОбновитьЦветТекстаИФона();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаПомеченногоЗаданияНачалоВыбораЗавершениеОписаниеОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		РедактируемыйЦветТекстаПомеченногоЗадания = Результат;
	КонецЕсли;	
	ОбновитьЦветаПомеченнойЗадачиНаСервере();
	ОбновитьЦветТекстаИФона();
	
КонецПроцедуры

&НаКлиенте
Процедура РедактируемыйЦветТекстаПомеченногоЗаданияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Цвет") Тогда
		РедактируемыйЦветТекстаПомеченногоЗадания = ВыбранноеЗначение;
		ОбновитьЦветаПомеченнойЗадачиНаСервере();
		ОбновитьЦветТекстаИФона();
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПубликацииИнформационнойБазыВИнтернетеПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПубликацииИнформационнойБазыВИнтернетеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПодключитьОбработчикОжидания("АдресПубликацииИнформационнойБазыВИнтернетеНачалоВыбораЗавершение", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПубликацииИнформационнойБазыВИнтернетеНачалоВыбораЗавершение()
	
	Если ОбщегоНазначенияКлиент.КлиентПодключенЧерезВебСервер() Тогда
		АдресПубликацииИнформационнойБазыВИнтернетеНачалоВыбораНаСервере(СтрокаСоединенияИнформационнойБазы());
		Подключаемый_ПриИзмененииРеквизита(Элементы.АдресПубликацииИнформационнойБазыВИнтернете);
	Иначе
		ПоказатьПредупреждение(, 
			НСтр("ru = 'Не удалось автоматически заполнить поле, т.к. клиентское приложение не подключено через веб-сервер.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АдресПубликацииИнформационнойБазыВИнтернетеНачалоВыбораНаСервере(СтрокаСоединения)
	
	ПараметрыСоединения = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(СтрокаСоединения);
	Если ПараметрыСоединения.Свойство("WS") Тогда
		НаборКонстант.АдресПубликацииИнформационнойБазыВИнтернете = ПараметрыСоединения.WS;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
		
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура АдресПубликацииИнформационнойБазыВИнтернетеДляОценкиЗаданийНачалоВыбора(Элемент, ДанныеВыбора, 
	СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПодключитьОбработчикОжидания("АдресПубликацииИнформационнойБазыВИнтернетеДляОценкиЗаданийНачалоВыбораЗавершение", 
		0.1, Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПубликацииИнформационнойБазыВИнтернетеДляОценкиЗаданийНачалоВыбораЗавершение()
	
	Если ОбщегоНазначенияКлиент.КлиентПодключенЧерезВебСервер() Тогда
		АдресПубликацииИнформационнойБазыВИнтернетеДляОценкиНачалоВыбораНаСервере(СтрокаСоединенияИнформационнойБазы());
		Подключаемый_ПриИзмененииРеквизита(Элементы.АдресПубликацииИнформационнойБазыВИнтернетеДляОценкиЗаданий);
	Иначе
		ПоказатьПредупреждение(,
			НСтр("ru = 'Не удалось автоматически заполнить поле, т.к. клиентское приложение не подключено через веб-сервер.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладскойУчетКлиентовПриИзменении(Элемент)
	
	Если НЕ НаборКонстант.СкладскойУчетКлиентов Тогда
		ТекстОшибки = "";
		ТекстОшибки = СкладскойУчетКлиентовПриИзмененииНаСервере();
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			НаборКонстант.СкладскойУчетКлиентов = Истина;
			ПоказатьПредупреждение(, ТекстОшибки); 
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДействийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоДействий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПанельОбщая.ТекущаяСтраница = Элементы[ТекущиеДанные.Идентификатор];
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПланированиеВыполненияЗаданийПриИзменении(Элемент)
	
	ИспользоватьДинамическиеПриоритеты 						= НЕ ИспользоватьДинамическиеПриоритеты;	
	Элементы.ШагКорректировкиВеса.Доступность				= ИспользоватьДинамическиеПриоритеты;
	Элементы.ВесКритическогоПриоритетаЗадания.Доступность	= ИспользоватьДинамическиеПриоритеты;
	Элементы.ВесВысокогоПриоритетаЗадания.Доступность		= ИспользоватьДинамическиеПриоритеты;
	Элементы.ВесСреднегоПриоритетаЗадания.Доступность		= ИспользоватьДинамическиеПриоритеты;
	Элементы.ВесНизкогоПриоритетаЗадания.Доступность		= ИспользоватьДинамическиеПриоритеты;
	Элементы.ВесОченьНизкогоПриоритетаЗадания.Доступность	= ИспользоватьДинамическиеПриоритеты;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьВыражениеПредставленияКарточкиПоУмолчанию(Команда)
	
	УстановитьВыражениеПредставленияКарточкиПоУмолчаниюНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура OK(Команда)
	
	Применить(Команда);
	Закрыть();	
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	Записать();
	ПослеЗаписиКонстант();
	Оповестить("ОбновитьЦветаЭтаповПроцесса");
	СтандартныеПодсистемыКлиент.УстановитьРасширенныйЗаголовокПриложения();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроксиСервера(Команда)	
	
	ОткрытьФорму("ОбщаяФорма.ПараметрыПроксиСервера");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСотрудниковИзЗУП(Команда)
	ЗагрузкаСотрудниковИзЗУПНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПровайдераСМС(Команда)
	ОткрытьФорму("ОбщаяФорма.НастройкаОтправкиSMS",,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПараметровСистемнойУчетнойЗаписи(Команда)
	
	Структура = Новый Структура();	
	Структура.Вставить("Ключ", 
		ПредопределенноеЗначение("Справочник.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты"));
	
	ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаОбъекта", Структура,,,,,, 
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПравилаОбмена(Команда)
	
	мПрограмма = НаборКонстант.ПрограммаДляЗагрузкиСотрудников;
	
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите куда сохранить'");
	
	Структура = Новый Структура;
	
	Если мПрограмма = 
		ПредопределенноеЗначение("Перечисление.ПрограммаДляЗагрузкиСотрудников.ЗарплатаИУправлениеПерсоналом25") Тогда
		ДиалогОткрытияФайла.ПолноеИмяФайла = "ЗагрузкаСотрудниковЗУП_2_5.xml";
	ИначеЕсли мПрограмма = 
		ПредопределенноеЗначение("Перечисление.ПрограммаДляЗагрузкиСотрудников.ЗарплатаИУправлениеПерсоналом31") Тогда	
		ДиалогОткрытияФайла.ПолноеИмяФайла = "ЗагрузкаСотрудниковЗУП_3_1.xml";
	ИначеЕсли мПрограмма = 
		ПредопределенноеЗначение("Перечисление.ПрограммаДляЗагрузкиСотрудников.БухгалтерияПредприятия30") Тогда
		ДиалогОткрытияФайла.ПолноеИмяФайла = "ЗагрузкаСотрудниковБП_3_0.xml";
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выберите программу загрузки'"));
		Возврат;
	КонецЕсли;
	
	Структура.Вставить("ДиалогОткрытияФайла", ДиалогОткрытияФайла);
	Структура.Вставить("ПрограммаДляЗагрузкиСотрудников", мПрограмма);
	
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("СохранитьПравилаОбменаЗавершение", ЭтотОбъект, Структура));
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПравилаОбменаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	мПрограмма = ДополнительныеПараметры.ПрограммаДляЗагрузкиСотрудников;
	ДиалогОткрытияФайла = ДополнительныеПараметры.ДиалогОткрытияФайла;	
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		Если мПрограмма = 
			ПредопределенноеЗначение("Перечисление.ПрограммаДляЗагрузкиСотрудников.ЗарплатаИУправлениеПерсоналом25") Тогда
			Данные = ПолучитьИзВременногоХранилища(ПоместитьОбщийМакетВХранилище("ЗагрузкаСотрудниковЗУП_2_5"));
		ИначеЕсли мПрограмма = 
			ПредопределенноеЗначение("Перечисление.ПрограммаДляЗагрузкиСотрудников.ЗарплатаИУправлениеПерсоналом31") Тогда	
			Данные = ПолучитьИзВременногоХранилища(ПоместитьОбщийМакетВХранилище("ЗагрузкаСотрудниковЗУП_3_1"));
		ИначеЕсли мПрограмма = 
			ПредопределенноеЗначение("Перечисление.ПрограммаДляЗагрузкиСотрудников.БухгалтерияПредприятия30") Тогда	
			Данные = ПолучитьИзВременногоХранилища(ПоместитьОбщийМакетВХранилище("ЗагрузкаСотрудниковБП_3_0"));
		Иначе
			Возврат;
		КонецЕсли;
		
		Данные.Записать(ДиалогОткрытияФайла.ПолноеИмяФайла);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура АвтоматическоеВыполнениеЗаданий(Команда)
	
	ЗаданияСервер.АвтоматическоеВыполнениеЗаданий(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическоеЗавершениеЗаданий(Команда)
	
	ЗаданияСервер.АвтоматическоеЗавершениеЗаданий(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОформлениеОповещений(Команда)
	
	ОткрытьФорму("Справочник.ОформленияОповещенийEmailПравилСобытий.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыражениеПредставленияМестаХраненияПоУмолчанию(Команда)
	УстановитьФормулуПредставленияМестаХраненияПоУмолчаниюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройкиЦветаПросроченногоЗадания(Команда)
	РедактируемыйЦветФонаПросроченногоЗадания 	= WebЦвета.ТемноКрасный;
	РедактируемыйЦветТекстаПросроченногоЗадания = WebЦвета.Белый;
	ОбновитьЦветаПросроченнойЗадачиНаСервере();
	ОбновитьЦветТекстаИФона();
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройкиЦветаПомеченногоЗадания(Команда)
	РедактируемыйЦветФонаПомеченногоЗадания 	= Новый Цвет(255, 255, 204);
	РедактируемыйЦветТекстаПомеченногоЗадания	= WebЦвета.Черный;
	ОбновитьЦветаПомеченнойЗадачиНаСервере();
	ОбновитьЦветТекстаИФона();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМаркерыПоУмолчанию(Команда)
	
	УстановитьМаркерыПоУмолчаниюНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеЗакрытиеЗаданияПоТекстовымФразамВСообщенияхПриИзменении(Элемент)
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаСобытийЗаполнитьПредопределенными(Команда)
	
	ПравилаСобытийЗаполнитьПредопределеннымиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиТелефонии(Команда)
	
	ОткрытьФорму("ОбщаяФорма.сфпОбщиеНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналВыполненияПравилСобытий(Команда)
	
	ОткрытьФорму("РегистрСведений.ВыполнениеПравилСобытий.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОценкиЗаданий(Команда)
	
	ОткрытьФорму("Справочник.ОценкиЗаданий.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВидимость()
		
	Элементы.ИмяSMSОтправителя.Доступность = НаборКонстант.ИспользоватьИмяSMSотправителя;

	ОбновитьЦветТекстаИФона();
	
	Элементы.МаркерыВыполненияЗадания.Доступность = 
		НаборКонстант.ИспользованиеВыполнениеЗаданияПоТекстовымФразамВСообщениях;
	
	рСТАНДАРТ 	= Перечисления.РедакцияКонфигурации.СТАНДАРТ;
	//@skip-warning
	рПРОФ 		= Перечисления.РедакцияКонфигурации.ПРОФ;
	рКОРП 		= Перечисления.РедакцияКонфигурации.КОРП;
	
	// Делаем недоступными для редакции настройки.
	Редакция 														= УправлениеITОтделом8УФ.РедакцияКонфигурации();	
	Элементы.ДекорацияРедакция.Видимость 							= Редакция <> рКОРП;
	Элементы.СкладскойУчетКлиентов.Доступность 						= Редакция = рКОРП;
	Элементы.SLAСервисыРаботы.Доступность 							= Редакция <> рСТАНДАРТ;
	Элементы.ИспользоватьУдаленноеУправление.Доступность 			= Редакция = рКОРП;
	Элементы.ИспользоватьДоступКИнформационнымРесурсам.Доступность 	= Редакция = рКОРП;
	Элементы.ИспользоватьБюджетирование.Доступность 				= Редакция = рКОРП;
	Элементы.ИспользоватьРемонтыИОбслуживание.Доступность 			= Редакция <> рСТАНДАРТ;
	Элементы.ИспользоватьУчетВремени.Доступность 					= Редакция = рКОРП;
	Элементы.ИспользоватьСинхронизациюДанных.Доступность 			= Редакция <> рСТАНДАРТ;
	Элементы.ИспользоватьПроблемы.Доступность 						= Редакция = рКОРП;
	Элементы.ИспользоватьCRM.Доступность 							= Редакция = рКОРП;
	Элементы.ИспользоватьМетрики.Доступность 						= Редакция = рКОРП;
    Элементы.ИспользоватьTelegram.Доступность 						= Редакция <> рСТАНДАРТ;
	Элементы.ИспользоватьУправлениеПроектами.Доступность			= Редакция <> рСТАНДАРТ;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦветТекстаИФона()
	
	Элементы.ПримерТекстаПросроченногоЗаданияПример.ЦветФона 	= РедактируемыйЦветФонаПросроченногоЗадания;
	Элементы.ПримерТекстаПросроченногоЗаданияПример.ЦветТекста 	= РедактируемыйЦветТекстаПросроченногоЗадания;
	
	Элементы.ПримерТекстаПомеченногоЗаданияПример.ЦветФона 		= РедактируемыйЦветФонаПомеченногоЗадания;
	Элементы.ПримерТекстаПомеченногоЗаданияПример.ЦветТекста 	= РедактируемыйЦветТекстаПомеченногоЗадания;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиКонстант()
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаСотрудниковИзЗУПНаСервере()
	УправлениеITОтделом8УФ.ЗагрузкаСотрудников();
КонецПроцедуры

&НаСервере
Процедура ИнициализацияЭлементов()
	
	Если НаборКонстант.ЗагрузкаСотрудниковНаходитсяНаСервере Тогда
		Элементы.ПанельБаза.ТекущаяСтраница = Элементы.СтраницаСервер;
	Иначе
		Элементы.ПанельБаза.ТекущаяСтраница = Элементы.СтраницаКаталог;
	КонецЕсли;
	
	Элементы.ЗУПНаходитсяНаСервере.Доступность			= НаборКонстант.ИспользоватьЗагрузкуСотрудников;
	Элементы.ПанельБаза.Доступность						= НаборКонстант.ИспользоватьЗагрузкуСотрудников;
	Элементы.ГруппаПользовательПароль.Доступность		= НаборКонстант.ИспользоватьЗагрузкуСотрудников;
	Элементы.ГруппаЗагрузки.Доступность					= НаборКонстант.ИспользоватьЗагрузкуСотрудников;
	Элементы.ПрограммаДляЗагрузкиСотрудников.Доступность= НаборКонстант.ИспользоватьЗагрузкуСотрудников;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВыражениеПредставленияКарточкиПоУмолчаниюНаСервере()
	
	НаборКонстант.ВыражениеПредставленияКарточкиНоменклатурыПоУмолчанию = 
		УправлениеITОтделом8УФ.ПолучитьВыражениеНаименованияКарточкиПоУмолчанию();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦветаПросроченнойЗадачиНаСервере()
	
	НаборКонстант.ЦветТекстаПросроченнойЗадачи 	= 
		РаботаСЦветомКлиентСервер.ЦветВHex(РедактируемыйЦветТекстаПросроченногоЗадания);
	НаборКонстант.ЦветФонаПросроченнойЗадачи 	= 
		РаботаСЦветомКлиентСервер.ЦветВHex(РедактируемыйЦветФонаПросроченногоЗадания);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦветаПомеченнойЗадачиНаСервере()
	
	НаборКонстант.ЦветТекстаПомеченнойЗадачи 	= 
		РаботаСЦветомКлиентСервер.ЦветВHex(РедактируемыйЦветТекстаПомеченногоЗадания);
	НаборКонстант.ЦветФонаПомеченнойЗадачи 		= 
		РаботаСЦветомКлиентСервер.ЦветВHex(РедактируемыйЦветФонаПомеченногоЗадания);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФормулуПредставленияМестаХраненияПоУмолчаниюНаСервере()
	
	НаборКонстант.ВыражениеПредставленияМестаХранения = 
		УправлениеITОтделом8УФ.ПолучитьВыражениеНаименованияМестаХраненияПоУмолчанию();
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АдресПубликацииИнформационнойБазыВИнтернетеДляОценкиНачалоВыбораНаСервере(СтрокаСоединения)
	
	ПараметрыСоединения = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(СтрокаСоединения);
	Если ПараметрыСоединения.Свойство("WS") Тогда
		НаборКонстант.АдресПубликацииИнформационнойБазыВИнтернетеДляОценкиЗаданий = ПараметрыСоединения.WS;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМаркерыПоУмолчаниюНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	УправлениеITОтделом8УФОбновлениеИнформационнойБазыБСП.УстановкаМаркеровЗадания();
	
	НаборКонстант.МаркерыВыполненияЗадания					= 
		Константы.МаркерыВыполненияЗадания.Получить();
	НаборКонстант.МаркерыОкончанияЭлектронныхПисемЗадания	= 
		Константы.МаркерыОкончанияЭлектронныхПисемЗадания.Получить();
	НаборКонстант.МаркерыУстановкиСрокаЗадания				= 
		Константы.МаркерыУстановкиСрокаЗадания.Получить();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ПравилаСобытийЗаполнитьПредопределеннымиНаСервере()
	
	Справочники.ПравилаСобытий.ЗаполнитьПравилаСобытийПриПервоначальномЗаполнении();
	
КонецПроцедуры

&НаСервере
Функция СкладскойУчетКлиентовПриИзмененииНаСервере()
	
	Возврат УправлениеITОтделом8УФ.ОтказСнятьУчетПоКонтрагентам();
			
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоДействий()
	
	ДЗ = РеквизитФормыВЗначение("ДеревоДействий", Тип("ДеревоЗначений"));
	ДЗ.Строки.Очистить();
	
	// Основные данные
	Строка = ДобавитьДействиеВДерево(ДЗ, БиблиотекаКартинок.БазаЗнанийКнопка,
		НСтр("ru = 'Основные данные'"), "СтраницаОсновныеДанные");
	Строка = ДобавитьДействиеВДерево(ДЗ, БиблиотекаКартинок.сстГалочка,
		НСтр("ru = 'Функциональность'"), "СтраницаФункциональность");
	Строка = ДобавитьДействиеВДерево(ДЗ, БиблиотекаКартинок.Коробка,
		НСтр("ru = 'Склад'"), "СтраницаСклад");	
	Строка = ДобавитьДействиеВДерево(ДЗ, БиблиотекаКартинок.Деньги,
		НСтр("ru = 'Финансы'"), "СтраницаФинансы");
	Строка = ДобавитьДействиеВДерево(ДЗ, БиблиотекаКартинок.ОтложитьРассмотрениеВзаимодействия,
		НСтр("ru = 'Правила событий'"), "СтраницаПравилаСобытий");
	
	// Service Desk
	Строка = ДобавитьДействиеВДерево(ДЗ, БиблиотекаКартинок.сстВыполнение,
		НСтр("ru = 'Service Desk'"), "СтраницаServiceDesk");
	ДобавитьДействиеВДерево(Строка, БиблиотекаКартинок.ОтправитьПолучитьПочту,
		НСтр("ru = 'Электронная почта'"), "СтраницаServiceDeskЭлектроннаяПочта");
	ДобавитьДействиеВДерево(Строка, БиблиотекаКартинок.ОтправитьSMS,
		НСтр("ru = 'SMS'"), "СтраницаServiceDeskSMS");
	ДобавитьДействиеВДерево(Строка, БиблиотекаКартинок.Позвонить,
		НСтр("ru = 'Телефония'"), "СтраницаТелефония");
	ДобавитьДействиеВДерево(Строка, БиблиотекаКартинок.ДиаграммаГантаПоЗадаче,
		НСтр("ru = 'Динамические приоритеты'"), "СтраницаДинамическиеПриоритеты");
	
	// Обмены
	Строка = ДобавитьДействиеВДерево(ДЗ, БиблиотекаКартинок.ПользователиВыполнитьСинхронизацию,
		НСтр("ru = 'Обмен данными'"), "СтраницаОбменДанными");
	Строка = ДобавитьДействиеВДерево(Строка, БиблиотекаКартинок.ВариантыОтчетовДоступныеВсемПользователям,
		НСтр("ru = 'Загрузка из ЗУП'"), "СтраницаЗагрузкаИзЗУП");
	
	// Интернет
	Строка = ДобавитьДействиеВДерево(ДЗ, БиблиотекаКартинок.СтраницаВИнтернете,
		НСтр("ru = 'Интернет'"), "СтраницаИнтернет");
	
	// Дела
	Строка = ДобавитьДействиеВДерево(ДЗ, БиблиотекаКартинок.ДелаВРаботе,
		НСтр("ru = 'Дела'"), "СтраницаДела");
	
	ЗначениеВРеквизитФормы(ДЗ, "ДеревоДействий");
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОчередьВыполненияЗаданийПриИзменении(Элемент)
	
	ИспользоватьОчередь = НаборКонстант.ИспользоватьОчередьВыполненияЗаданий;
	Если ИспользоватьОчередь Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаИспользоватьОчередьВыполнения", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, 
			НСтр("ru = 'Очереди выполнения заданий для текущих исполнителей будут перезаполнены.
                  |Это может занять некоторое время. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаИспользоватьОчередьВыполнения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		НаборКонстант.ИспользоватьОчередьВыполненияЗаданий = Ложь;
		Записать();
		Возврат;
	КонецЕсли;
	
	Записать();
	
	ДлительнаяОперация = ВыполнитьЗаполнениеОчередиВыполненияНаСервере();
	Если ДлительнаяОперация <> Неопределено Тогда
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ПараметрыОжидания.ТекстСообщения	= НСтр("ru = 'Идет подготовка данных. Это может занять некоторое время'");
		ПараметрыОжидания.Интервал			= 2;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, , ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗаполнениеОчередиВыполненияНаСервере()
	
	Если ДлительнаяОперация <> Неопределено Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ДлительнаяОперация.ИдентификаторЗадания);
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение           = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = "ЗаполнитьОчередьВыполненияПоВсемЗаданиямВФоне";
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;		
	ПараметрыЗадания 								= Новый Структура;	
	Результат = ДлительныеОперации.ВыполнитьВФоне(
		"ЗаданияСервер.ЗаполнитьОчередьВыполненияПоВсемЗаданиямВФоне",
		ПараметрыЗадания, ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПервыйЗапуск()
	
	УправлениеITОтделом8УФОбновлениеИнформационнойБазыБСП.ПервыйЗапуск();
	
КонецПроцедуры

#КонецОбласти