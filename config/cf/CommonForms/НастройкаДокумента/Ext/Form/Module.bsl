
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БылиВнесеныИзменения = Ложь;
	ЗапомнитьВыбор = Ложь;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
		АвтоЗаголовок = Ложь;
	КонецЕсли;
		
	Если Параметры.Свойство("ПоложениеДатыПоступленияВЗаказеПоставщику") Тогда
		ПоложениеДатыПоступленияВЗаказеПоставщику = Параметры.ПоложениеДатыПоступленияВЗаказеПоставщику;
		ПоложениеДатыПоступленияВЗаказеПоставщикуПриОткрытии = Параметры.ПоложениеДатыПоступленияВЗаказеПоставщику;
		Элементы.ГруппаПоложениеДатыПоступленияВЗаказеПоставщику.Видимость = Истина;
		Элементы.ПоложениеДатыПоступленияВЗаказеПоставщику.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеДатыПоступленияВЗаказеПоставщику.Видимость = Ложь;
		Элементы.ПоложениеДатыПоступленияВЗаказеПоставщику.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеДатыПоступленияВЗаказеКлиента") Тогда
		ПоложениеДатыПоступленияВЗаказеКлиента = Параметры.ПоложениеДатыПоступленияВЗаказеКлиента;
		ПоложениеДатыПоступленияВЗаказеКлиентаПриОткрытии = Параметры.ПоложениеДатыПоступленияВЗаказеКлиента;
		Элементы.ГруппаПоложениеДатыПоступленияВЗаказеКлиента.Видимость = Истина;
		Элементы.ПоложениеДатыПоступленияВЗаказеКлиента.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеДатыПоступленияВЗаказеКлиента.Видимость = Ложь;
		Элементы.ПоложениеДатыПоступленияВЗаказеКлиента.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеЗаказаКлиентаВДокументахПоступления") Тогда
		ПоложениеЗаказаКлиентаВДокументахПоступления = Параметры.ПоложениеЗаказаКлиентаВДокументахПоступления;
		ПоложениеЗаказаКлиентаВДокументахПоступленияПриОткрытии = Параметры.ПоложениеЗаказаКлиентаВДокументахПоступления;
		Элементы.ГруппаПоложениеЗаказаКлиентаВДокументахПоступления.Видимость = Истина;
		Элементы.ПоложениеЗаказаКлиентаВДокументахПоступления.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеЗаказаКлиентаВДокументахПоступления.Видимость = Ложь;
		Элементы.ПоложениеЗаказаКлиентаВДокументахПоступления.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеЗаказаКлиентаВДокументахПродажа") Тогда
		ПоложениеЗаказаКлиентаВДокументахПродажа = Параметры.ПоложениеЗаказаКлиентаВДокументахПродажа;
		ПоложениеЗаказаКлиентаВДокументахПродажаПриОткрытии = Параметры.ПоложениеЗаказаКлиентаВДокументахПродажа;
		Элементы.ГруппаПоложениеЗаказаКлиентаВДокументахПродажа.Видимость = Истина;
		Элементы.ПоложениеЗаказаКлиентаВДокументахПродажа.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеЗаказаКлиентаВДокументахПродажа.Видимость = Ложь;
		Элементы.ПоложениеЗаказаКлиентаВДокументахПродажа.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеЗаказаПоставщикуВДокументахПоступления") Тогда
		ПоложениеЗаказаПоставщикуВДокументахПоступления = Параметры.ПоложениеЗаказаПоставщикуВДокументахПоступления;
		ПоложениеЗаказаПоставщикуВДокументахПоступленияПриОткрытии = Параметры.ПоложениеЗаказаПоставщикуВДокументахПоступления;
		Элементы.ГруппаПоложениеЗаказаПоставщикуВДокументахПоступления.Видимость = Истина;
		Элементы.ПоложениеЗаказаПоставщикуВДокументахПоступления.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеЗаказаПоставщикуВДокументахПоступления.Видимость = Ложь;
		Элементы.ПоложениеЗаказаПоставщикуВДокументахПоступления.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеИсполнитель") Тогда
		ПоложениеИсполнитель = Параметры.ПоложениеИсполнитель;
		ПоложениеИсполнительПриОткрытии = Параметры.ПоложениеИсполнитель;
		Элементы.ГруппаПоложениеИсполнитель.Видимость = Истина;
		Элементы.ПоложениеИсполнитель.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеИсполнитель.Видимость = Ложь;
		Элементы.ПоложениеИсполнитель.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеОтветственный") Тогда
		ПоложениеОтветственный = Параметры.ПоложениеОтветственный;
		ПоложениеПоложениеОтветственныйПриОткрытии = Параметры.ПоложениеОтветственный;
		Элементы.ГруппаПоложениеОтветственный.Видимость = Истина;
		Элементы.ПоложениеОтветственный.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеОтветственный.Видимость = Ложь;
		Элементы.ПоложениеОтветственный.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеСтатьиДоходовРасходов") Тогда
		ПоложениеСтатьиДоходовРасходов = Параметры.ПоложениеСтатьиДоходовРасходов;
		ПоложениеСтатьиДоходовРасходовПриОткрытии = Параметры.ПоложениеСтатьиДоходовРасходов;
		Элементы.ГруппаПоложениеСтатьиДоходовРасходов.Видимость = Истина;
		Элементы.ПоложениеСтатьиДоходовРасходов.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеСтатьиДоходовРасходов.Видимость = Ложь;
		Элементы.ПоложениеСтатьиДоходовРасходов.Видимость = Ложь;
	КонецЕсли;
		
	Если Параметры.Свойство("ПоложениеПодразделения") Тогда
		ПоложениеПодразделения = Параметры.ПоложениеПодразделения;
		ПоложениеПодразделенияПриОткрытии = Параметры.ПоложениеПодразделения;
		Элементы.ГруппаПоложениеПодразделения.Видимость = Истина;
		Элементы.ПоложениеПодразделения.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеПодразделения.Видимость = Ложь;
		Элементы.ПоложениеПодразделения.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеМестаХранения") Тогда
		ПоложениеМестаХранения = Параметры.ПоложениеМестаХранения;
		ПоложениеМестаХраненияПриОткрытии = Параметры.ПоложениеМестаХранения;
		Элементы.ГруппаПоложениеМестаХранения.Видимость = Истина;
		Элементы.ПоложениеМестаХранения.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеМестаХранения.Видимость = Ложь;
		Элементы.ПоложениеМестаХранения.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеВидаЗначения") Тогда
		ПоложениеВидаЗначения = Параметры.ПоложениеВидаЗначения;
		ПоложениеВидаЗначенияПриОткрытии = Параметры.ПоложениеВидаЗначения;
		Элементы.ГруппаПоложениеВидаЗначения.Видимость = Истина;
		Элементы.ПоложениеВидаЗначения.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеВидаЗначения.Видимость = Ложь;
		Элементы.ПоложениеВидаЗначения.Видимость = Ложь;
	КонецЕсли;	
	
	Если Параметры.Свойство("ПоложениеРеквизитаПользователь") Тогда
		ПоложениеРеквизитаПользователь = Параметры.ПоложениеРеквизитаПользователь;
		ПоложениеРеквизитаПользовательПриОткрытии = Параметры.ПоложениеРеквизитаПользователь;
		Элементы.ГруппаПоложениеПользователь.Видимость = Истина;
		Элементы.ПоложениеРеквизитаПользователь.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеПользователь.Видимость = Ложь;
		Элементы.ПоложениеРеквизитаПользователь.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоложениеРеквизитаЗадание") Тогда
		ПоложениеРеквизитаЗадание = Параметры.ПоложениеРеквизитаЗадание;
		ПоложениеРеквизитаЗаданиеПриОткрытии = Параметры.ПоложениеРеквизитаЗадание;
		Элементы.ГруппаПоложениеРеквизитаЗадание.Видимость = Истина;
		Элементы.ПоложениеРеквизитаЗадание.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеРеквизитаЗадание.Видимость = Ложь;
		Элементы.ПоложениеРеквизитаЗадание.Видимость = Ложь;
	КонецЕсли;
		
	Если Параметры.Свойство("ПоложениеСотрудника") Тогда
		ПоложениеСотрудника = Параметры.ПоложениеСотрудника;
		ПоложениеСотрудникаПриОткрытии = Параметры.ПоложениеСотрудника;
		Элементы.ГруппаПоложениеСотрудника.Видимость = Истина;
		Элементы.ПоложениеСотрудника.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеСотрудника.Видимость = Ложь;
		Элементы.ПоложениеСотрудника.Видимость = Ложь;
	КонецЕсли;	
	
	Если Параметры.Свойство("ПоложениеИнициатора") Тогда
		ПоложениеИнициатора = Параметры.ПоложениеИнициатора;
		ПоложениеИнициатораПриОткрытии = Параметры.ПоложениеИнициатора;
		Элементы.ГруппаПоложениеИнициатора.Видимость = Истина;
		Элементы.ПоложениеИнициатора.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеИнициатора.Видимость = Ложь;
		Элементы.ПоложениеИнициатора.Видимость = Ложь;
	КонецЕсли;	
	
	Если Параметры.Свойство("ПоложениеПериодаБюджета") Тогда
		ПоложениеПериодаБюджета = Параметры.ПоложениеПериодаБюджета;
		ПоложениеПериодаБюджетаПриОткрытии = Параметры.ПоложениеПериодаБюджета;
		Элементы.ГруппаПоложениеПериодаБюджета.Видимость = Истина;
		Элементы.ПоложениеПериодаБюджета.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеПериодаБюджета.Видимость = Ложь;
		Элементы.ПоложениеПериодаБюджета.Видимость = Ложь;
	КонецЕсли;	
	
	Если Параметры.Свойство("ПоложениеДаты") Тогда
		ПоложениеДаты = Параметры.ПоложениеДаты;
		ПоложениеДатыПриОткрытии = Параметры.ПоложениеДаты;
		Элементы.ГруппаПоложениеДаты.Видимость = Истина;
		Элементы.ПоложениеДаты.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоложениеДаты.Видимость = Ложь;
		Элементы.ПоложениеДаты.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Процедура - обработчик события нажатия кнопки ОК.
//
Процедура ОК(Команда)
	
	СтруктураРеквизитовФормы = Новый Структура;
	
	ПроверитьМодифицированностьФормы(СтруктураРеквизитовФормы);
	
	Закрыть(СтруктураРеквизитовФормы);
	
КонецПроцедуры // КомандаОК()

&НаКлиенте
// Процедура - обработчик события нажатия кнопки ОК.
//
Процедура ЗапомнитьВыбор(Команда)
	
	СтруктураРеквизитовФормы = Новый Структура;
	
	ПроверитьМодифицированностьФормы(СтруктураРеквизитовФормы);
	
	ЗаписатьНовыеНастройки();
	
	Закрыть(СтруктураРеквизитовФормы);
	
КонецПроцедуры // ЗапомнитьВыбор()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ИмяРеквизитаСохранения(Знач ИмяНастройки)
	
	ИмяНастройкиВнутреннее = ИмяНастройки;
	
	Если ИмяНастройкиВнутреннее = "ПоложениеСтатьиДоходовРасходов" Тогда
		ИмяНастройкиВнутреннее = "ПоложениеРеквизитаСтатьяДоходовРасходовВДокументах";
	ИначеЕсли ИмяНастройкиВнутреннее = "ПоложениеПодразделения" Тогда
		ИмяНастройкиВнутреннее = "ПоложениеРеквизитаПодразделениеВДокументах";		
	ИначеЕсли ИмяНастройкиВнутреннее = "ПоложениеДатыПоступления" Тогда
		ИмяНастройкиВнутреннее = "ПоложениеДатыПоступленияВЗаказеПоставщику";
	ИначеЕсли ИмяНастройкиВнутреннее = "ПоложениеВидаЗначения" Тогда
		ИмяНастройкиВнутреннее = "ПоложениеВидаЗначенияИзменениеПоказателейОборудования";
	КонецЕсли;
	
	Попытка
		ТестоваяПроверка = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройкиВнутреннее];
	Исключение
	    Возврат Неопределено;
	КонецПопытки;
	
	Возврат ИмяНастройкиВнутреннее; 
	
КонецФункции

&НаСервере
// Процедура записывает настройки пользователя в регистр.
//
Процедура УстановитьНастройку(Знач ИмяНастройки)	
	
	ИмяНастройкиВнутреннее = ИмяРеквизитаСохранения(ИмяНастройки);
	
	Если ИмяНастройкиВнутреннее = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Пользователь = Пользователи.ТекущийПользователь();
	
	НаборЗаписей = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Пользователь.Использование = Истина;
	НаборЗаписей.Отбор.Пользователь.Значение	  = Пользователь;
	НаборЗаписей.Отбор.Настройка.Использование	  = Истина;
	НаборЗаписей.Отбор.Настройка.Значение		  = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройкиВнутреннее];
	
	Запись = НаборЗаписей.Добавить();
	
	Запись.Пользователь = Пользователь;
	Запись.Настройка    = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройкиВнутреннее];
	Запись.Значение     = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройкиВнутреннее].ТипЗначения.ПривестиЗначение(ЭтаФорма[ИмяНастройки]);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры // ЗаписатьНовыеНастройки()

&НаСервере
// Процедура записывает настройки пользователя в регистр.
//
Процедура ЗаписатьНовыеНастройки()
	
	Если ЗначениеЗаполнено(ПоложениеДатыПоступленияВЗаказеПоставщику) Тогда
		УстановитьНастройку("ПоложениеДатыПоступленияВЗаказеПоставщику");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеДатыПоступленияВЗаказеПоставщику) Тогда
		УстановитьНастройку("ПоложениеДатыПоступленияВЗаказеКлиента");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеЗаказаПоставщикуВДокументахПоступления) Тогда
		УстановитьНастройку("ПоложениеЗаказаПоставщикуВДокументахПоступления");
	КонецЕсли;	
	Если ЗначениеЗаполнено(ПоложениеЗаказаКлиентаВДокументахПоступления) Тогда
		УстановитьНастройку("ПоложениеЗаказаКлиентаВДокументахПоступления");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеЗаказаКлиентаВДокументахПродажа) Тогда
		УстановитьНастройку("ПоложениеЗаказаКлиентаВДокументахПродажа");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеИсполнитель) Тогда
		УстановитьНастройку("ПоложениеИсполнитель");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеОтветственный) Тогда
		УстановитьНастройку("ПоложениеОтветственный");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеСтатьиДоходовРасходов) Тогда
		УстановитьНастройку("ПоложениеСтатьиДоходовРасходов");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеПодразделения) Тогда
		УстановитьНастройку("ПоложениеПодразделения");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеМестаХранения) Тогда
		УстановитьНастройку("ПоложениеМестаХранения");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеВидаЗначения) Тогда
		УстановитьНастройку("ПоложениеВидаЗначения");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеРеквизитаЗадание) Тогда
		УстановитьНастройку("ПоложениеРеквизитаЗадание");
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоложениеРеквизитаПользователь) Тогда
		УстановитьНастройку("ПоложениеРеквизитаПользователь");
	КонецЕсли;	
	Если ЗначениеЗаполнено(ПоложениеРеквизитаВидРаботы) Тогда
		УстановитьНастройку("ПоложениеРеквизитаВидРаботы");
	КонецЕсли;	
	Если ЗначениеЗаполнено(ПоложениеСотрудника) Тогда
		УстановитьНастройку("ПоложениеСотрудника");
	КонецЕсли;	
	Если ЗначениеЗаполнено(ПоложениеИнициатора) Тогда
		УстановитьНастройку("ПоложениеИнициатора");
	КонецЕсли;	
	Если ЗначениеЗаполнено(ПоложениеПериодаБюджета) Тогда
		УстановитьНастройку("ПоложениеПериодаБюджета");
	КонецЕсли;	
	Если ЗначениеЗаполнено(ПоложениеДаты) Тогда
		УстановитьНастройку("ПоложениеДаты");
	КонецЕсли;	
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры // ЗаписатьНовыеНастройки()

&НаКлиенте
// Процедура проверяет модифицированность формы.
//
Процедура ПроверитьМодифицированностьФормы(СтруктураРеквизитовФормы)

	БылиВнесеныИзменения = Ложь;
	
	ИзмененияПоложениеДатыПоступленияВЗаказеПоставщику			= ПоложениеДатыПоступленияВЗаказеПоставщикуПриОткрытии <> ПоложениеДатыПоступленияВЗаказеПоставщику;
	ИзмененияПоложениеДатыПоступленияВЗаказеКлиента				= ПоложениеДатыПоступленияВЗаказеКлиентаПриОткрытии <> ПоложениеДатыПоступленияВЗаказеКлиента;
	ИзмененияПоложениеЗаказаПоставщикуВДокументахПоступления	= ПоложениеЗаказаПоставщикуВДокументахПоступленияПриОткрытии <> ПоложениеЗаказаПоставщикуВДокументахПоступления;
	ИзмененияПоложениеЗаказаКлиентаВДокументахПоступления		= ПоложениеЗаказаКлиентаВДокументахПоступленияПриОткрытии <> ПоложениеЗаказаКлиентаВДокументахПоступления;
	ИзмененияПоложениеЗаказаКлиентаВДокументахПродажа			= ПоложениеЗаказаКлиентаВДокументахПродажаПриОткрытии <> ПоложениеЗаказаКлиентаВДокументахПродажа;
	ИзмененияПоложениеИсполнитель								= ПоложениеИсполнительПриОткрытии <> ПоложениеИсполнитель;
	ИзмененияПоложениеОтветственный								= ПоложениеОтветственныйПриОткрытии <> ПоложениеОтветственный;
	ИзмененияПоложениеСтатьиДоходовРасходов						= ПоложениеСтатьиДоходовРасходовПриОткрытии <> ПоложениеСтатьиДоходовРасходов; 
	ИзмененияПоложениеПодразделения								= ПоложениеПодразделенияПриОткрытии <> ПоложениеПодразделения; 
	ИзмененияПоложениеМестоХранения								= ПоложениеМестаХраненияПриОткрытии <> ПоложениеМестаХранения;
	ИзмененияПоложениеВидаЗначения								= ПоложениеВидаЗначенияПриОткрытии <> ПоложениеВидаЗначения;
	ИзмененияПоложениеПользователь								= ПоложениеРеквизитаПользователь <> ПоложениеРеквизитаПользовательПриОткрытии;
	ИзмененияПоложениеРеквизитаЗадание							= ПоложениеРеквизитаЗадание <> ПоложениеРеквизитаЗаданиеПриОткрытии;
	ИзмененияПоложениеРеквизитаВидРаботы						= ПоложениеРеквизитаВидРаботы <> ПоложениеРеквизитаВидРаботыПриОткрытии;
	ИзмененияПоложениеСотрудника								= ПоложениеСотрудника <> ПоложениеСотрудникаПриОткрытии;
	ИзмененияПоложениеИнициатора								= ПоложениеИнициатора <> ПоложениеИнициатораПриОткрытии;
	ИзмененияПоложениеПериодаБюджета							= ПоложениеПериодаБюджета <> ПоложениеПериодаБюджетаПриОткрытии;
	ИзмененияПоложениеДаты										= ПоложениеДаты <> ПоложениеДатыПриОткрытии;
	
	Если ИзмененияПоложениеДатыПоступленияВЗаказеПоставщику
	 ИЛИ ИзмененияПоложениеДатыПоступленияВЗаказеКлиента
	 ИЛИ ИзмененияПоложениеЗаказаПоставщикуВДокументахПоступления 
	 ИЛИ ИзмененияПоложениеЗаказаКлиентаВДокументахПоступления
	 ИЛИ ИзмененияПоложениеЗаказаКлиентаВДокументахПродажа
	 ИЛИ ИзмененияПоложениеИсполнитель
	 ИЛИ ИзмененияПоложениеОтветственный
	 ИЛИ ИзмененияПоложениеСтатьиДоходовРасходов
	 ИЛИ ИзмененияПоложениеОтветственный
	 ИЛИ ИзмененияПоложениеПодразделения 
	 ИЛИ ИзмененияПоложениеМестоХранения
	 ИЛИ ИзмененияПоложениеВидаЗначения
	 ИЛИ ИзмененияПоложениеПользователь
	 ИЛИ ИзмененияПоложениеРеквизитаЗадание
	 ИЛИ ИзмененияПоложениеРеквизитаВидРаботы
	 ИЛИ ИзмененияПоложениеСотрудника
	 ИЛИ ИзмененияПоложениеИнициатора
	 ИЛИ ИзмененияПоложениеПериодаБюджета
	 ИЛИ ИзмененияПоложениеДаты Тогда
	 
		
		БылиВнесеныИзменения = Истина;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.Вставить("БылиВнесеныИзменения",							 		БылиВнесеныИзменения);
	СтруктураРеквизитовФормы.Вставить("ПоложениеДатыПоступленияВЗаказеПоставщику",		 		ПоложениеДатыПоступленияВЗаказеПоставщику);
	СтруктураРеквизитовФормы.Вставить("ПоложениеДатыПоступленияВЗаказеКлиента",		 			ПоложениеДатыПоступленияВЗаказеКлиента);
	СтруктураРеквизитовФормы.Вставить("ПоложениеЗаказаПоставщикуВДокументахПоступления", 		ПоложениеЗаказаПоставщикуВДокументахПоступления);
	СтруктураРеквизитовФормы.Вставить("ПоложениеЗаказаКлиентаВДокументахПоступления",	 		ПоложениеЗаказаКлиентаВДокументахПоступления);
	СтруктураРеквизитовФормы.Вставить("ПоложениеЗаказаКлиентаВДокументахПродажа",		 		ПоложениеЗаказаКлиентаВДокументахПродажа);
	СтруктураРеквизитовФормы.Вставить("ПоложениеОтветственный",							 		ПоложениеОтветственный);
	СтруктураРеквизитовФормы.Вставить("ПоложениеИсполнитель",							 		ПоложениеИсполнитель);
	СтруктураРеквизитовФормы.Вставить("ПоложениеСтатьиДоходовРасходов",							ПоложениеСтатьиДоходовРасходов);
	СтруктураРеквизитовФормы.Вставить("ПоложениеПодразделения",							 		ПоложениеПодразделения);
	СтруктураРеквизитовФормы.Вставить("ПоложениеМестаХранения",							 		ПоложениеМестаХранения);
	СтруктураРеквизитовФормы.Вставить("ПоложениеВидаЗначения",							 		ПоложениеВидаЗначения);
	СтруктураРеквизитовФормы.Вставить("ПоложениеРеквизитаПользователь",							ПоложениеРеквизитаПользователь);
	СтруктураРеквизитовФормы.Вставить("ПоложениеРеквизитаЗадание",								ПоложениеРеквизитаЗадание);
	СтруктураРеквизитовФормы.Вставить("ПоложениеРеквизитаВидРаботы",							ПоложениеРеквизитаВидРаботы);
	СтруктураРеквизитовФормы.Вставить("ПоложениеСотрудника",									ПоложениеСотрудника);
	СтруктураРеквизитовФормы.Вставить("ПоложениеИнициатора",									ПоложениеИнициатора);
	СтруктураРеквизитовФормы.Вставить("ПоложениеПериодаБюджета",								ПоложениеПериодаБюджета);
	СтруктураРеквизитовФормы.Вставить("ПоложениеДаты",											ПоложениеДаты);
	
КонецПроцедуры // ПроверитьМодифицированностьФормы()

#КонецОбласти
