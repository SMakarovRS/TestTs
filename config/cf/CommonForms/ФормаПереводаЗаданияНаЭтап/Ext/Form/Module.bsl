
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЭтоВебКлиент = УправлениеITОтделом8УФ.ПриложениеЯвляетсяВебКлиентом();
	
	Если НЕ Параметры.Свойство("СсылкаНаОбъект") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Параметры.ПереданаСсылка Тогда
		ПолученаСсылка 	 = Истина;
		СсылкаНаОбъект 	 = Параметры.СсылкаНаОбъект;
		ОбъектЗадание	 = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, "Процесс,Сервис,Услуга,ТекущийЭтап");
	Иначе
		ПолученаСсылка   = Ложь;
		СтруктураОбъекта = Параметры.ДанныеФормыЗадания;
		ОбъектЗадание	 = СтруктураОбъекта.ОбъектЗадание;
		СсылкаНаОбъект   = ОбъектЗадание.Ссылка;
	КонецЕсли;	
	
	ТекущийПроцесс 	 	= ОбъектЗадание.Процесс;
	Сервис		   	 	= ОбъектЗадание.Сервис;
	Услуга			 	= ОбъектЗадание.Услуга;
	ТекущийЭтап	   	 	= ОбъектЗадание.ТекущийЭтап;
	
	Если Параметры.Свойство("Источник") Тогда
		Источник = Параметры.Источник;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаписатьОбъект") Тогда
		ЗаписатьОбъект = Параметры.ЗаписатьОбъект;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущийПроцесс) Тогда
		Элементы.КартинкаТекущийЭтап.Видимость 	= Ложь;
		Элементы.НадписьТекущийЭтап.Видимость 	= Истина;
		Элементы.НадписьТекущийЭтап.Заголовок 	= НСтр("ru = 'Ошибка! Не выбран процесс в задании!'");
		Элементы.ГруппаЭтапы.Видимость 			= Ложь;
		Возврат;
	КонецЕсли;	
	
	мWebЦветаБелый 			= WebЦвета.Белый;
	мWebЦветаЧерный 		= WebЦвета.Черный;
	мКартинка				= БиблиотекаКартинок.сстВыполнение;
	мТекущийПользователь 	= Пользователи.ТекущийПользователь();
	
	Если ПолученаСсылка Тогда
		ВыполненПодпроцесс = ЗаданияСервер.ВыполненПодпроцесс(СсылкаНаОбъект);
	Иначе
		ЗаданиеСтруктура = Новый Структура;
		ЗаданиеСтруктура.Вставить("ТекущийЭтап", ТекущийЭтап);
		ЗаданиеСтруктура.Вставить("Ссылка", 	 СсылкаНаОбъект);
		ВыполненПодпроцесс = ЗаданияСервер.ВыполненПодпроцесс(ЗаданиеСтруктура);
	КонецЕсли;	
	
	Элементы.СоздатьПодпроцесс.Видимость = ТипЗнч(ТекущийЭтап) = Тип("СправочникСсылка.Процессы") И (НЕ ВыполненПодпроцесс);				
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПроцессыЭтапыПроцесса.КонечныйЭтап.Код КАК КодЭтапа,
		|	ПроцессыЭтапыПроцесса.КонечныйЭтап КАК Этап,
		|	ПроцессыЭтапыПроцесса.КонечныйЭтап.Наименование КАК НаименованиеЭтапа,
		|	ПроцессыЭтапыПроцесса.КонечныйЭтап.ВидЭтапа КАК ВидЭтапа
		|ИЗ
		|	Справочник.Процессы.ЭтапыПроцесса КАК ПроцессыЭтапыПроцесса
		|ГДЕ
		|	ПроцессыЭтапыПроцесса.Ссылка = &Процесс
		|	И ПроцессыЭтапыПроцесса.НачальныйЭтап = &НачальныйЭтап
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПроцессыЭтапыПроцесса.КонечныйЭтап
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Процесс", 	   ТекущийПроцесс);
	Запрос.УстановитьПараметр("НачальныйЭтап", ТекущийЭтап);
	Результат = Запрос.Выполнить();
	
	// Очищаем.
	Для Индекс = 0 По Элементы.ГруппаПеревестиНаЭтап.ПодчиненныеЭлементы.Количество()-1 Цикл
		Элементы.Удалить(Элементы.ГруппаПеревестиНаЭтап.ПодчиненныеЭлементы.Получить(0));
	КонецЦикла;
	
	Элементы.НадписьТекущийЭтап.Заголовок 					= ТекущийЭтап.Наименование;
	Попытка
		Элементы.КартинкаТекущийЭтап.Картинка 				= ТекущийЭтап.Картинка.Получить();
	Исключение
		Элементы.КартинкаТекущийЭтап.Картинка				= мКартинка;
	КонецПопытки;
	
	Попытка
		Элементы.ГруппаТекущийЭтапКартинкаТекст.ЦветФона 	= РаботаСЦветомКлиентСервер.HexВЦвет(ТекущийЭтап.ЦветФона);
		Элементы.НадписьТекущийЭтап.ЦветТекста 				= РаботаСЦветомКлиентСервер.HexВЦвет(ТекущийЭтап.ЦветТекста);
	Исключение
		Элементы.ГруппаТекущийЭтапКартинкаТекст.ЦветФона 	= мWebЦветаБелый;
		Элементы.НадписьТекущийЭтап.ЦветТекста 				= мWebЦветаЧерный;
	КонецПопытки;
	
	Элементы.НадписьНетЭтапов.Видимость = Результат.Пустой();
	Если НЕ Элементы.НадписьНетЭтапов.Видимость Тогда
		
		МассивДоступныхЭтапов = ЗаданияСервер.МассивДоступныхЭтаповДляПеревода(мТекущийПользователь, ТекущийПроцесс);
		
		// Добавляем новые.
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Этап 		= Выборка.Этап;			
			ИмяКоманды	= "Этап_" + Выборка.ВидЭтапа + "_" + СтрЗаменить(Этап.УникальныйИдентификатор(), "-", "");			
			Кнопка		= Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы.ГруппаПеревестиНаЭтап);
					
			КомандаЭтапа = Команды.Найти(ИмяКоманды);
				
			Если КомандаЭтапа = Неопределено Тогда
				
				КомандаЭтапа				= Команды.Добавить(ИмяКоманды);
				КомандаЭтапа.Действие		= "ПеревестиНаЭтап"; 
				КомандаЭтапа.Заголовок		= СтрЗаменить(Выборка.НаименованиеЭтапа, " ", Символы.НПП);
				Попытка
					КомандаЭтапа.Картинка	= Этап.Картинка.Получить();
				Исключение
					КомандаЭтапа.Картинка 	= мКартинка;
				КонецПопытки;
				КомандаЭтапа.Отображение	= ОтображениеКнопки.КартинкаИТекст;
				
			КонецЕсли;
			
			Кнопка.ИмяКоманды 				= ИмяКоманды;
			Кнопка.Высота 					= 2;
			Кнопка.ВысотаЗаголовка 			= 2;
			Кнопка.Ширина					= 30;			
			Попытка
				ЗначенияЦветов				= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Этап, "ЦветФона,ЦветТекста");
				Кнопка.ЦветФона 			= РаботаСЦветомКлиентСервер.HexВЦвет(ЗначенияЦветов.ЦветФона);
				Кнопка.ЦветТекста 			= РаботаСЦветомКлиентСервер.HexВЦвет(ЗначенияЦветов.ЦветТекста);
			Исключение
				Кнопка.ЦветФона 			= мWebЦветаБелый;
				Кнопка.ЦветТекста 			= мWebЦветаЧерный;
			КонецПопытки;
			
			Если МассивДоступныхЭтапов <> Неопределено Тогда
				Кнопка.Доступность = МассивДоступныхЭтапов.Найти(Этап) <> Неопределено;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия  = "Задание_СмененЭтап" Тогда
		Если Параметр = СсылкаНаОбъект ИЛИ Параметр.Источник = Источник Тогда
			СтруктураВозврата	 = Новый Структура();
			СтруктураВозврата.Вставить("ВыполненПеревод", Истина);
			Закрыть(СтруктураВозврата);
		КонецЕсли;	
	ИначеЕсли ИмяСобытия  = "Задание_ДобавитьКомментарийИПеревестиНаЭтап" И Параметр.Источник = Источник Тогда				
		Закрыть();		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеревестиНаЭтап(Команда)
	
	ДатаАктуальности = ПолучитьДатуНаСервере();
	
	// Проверка, что текущий этап подпроцесс и он не выполнен.
	Если ПолученаСсылка Тогда
		ВыполненПодпроцесс = ЗаданияСервер.ВыполненПодпроцесс(СсылкаНаОбъект);
	Иначе
		ЗаданиеСтруктура = Новый Структура;
		ЗаданиеСтруктура.Вставить("ТекущийЭтап", ТекущийЭтап);
		ЗаданиеСтруктура.Вставить("Ссылка", 	 СсылкаНаОбъект);
		ВыполненПодпроцесс = ЗаданияСервер.ВыполненПодпроцесс(ЗаданиеСтруктура);
	КонецЕсли;	
	Если НЕ ВыполненПодпроцесс Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Текущий этап - подпроцесс. 
                  |Для его выполнения необходимо запустить и выполнить подпроцесс.
                  |После этого можно перейти на другой этап.'"));
		Возврат;
	КонецЕсли;
	
	СтруктураЭтапа = ЗаданияСервер.ПолучитьСтруктуруЭтапаПоИмениКоманды(Команда.Имя);
	
	Если СтруктураЭтапа = Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Этап не найден.'"), СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	ЭтапПерехода = СтруктураЭтапа.Этап;	
		
	Если ПолученаСсылка Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НовыйЭтап", 			СтруктураЭтапа.Этап);
		СтруктураПараметров.Вставить("ПереданаСсылка", 		Истина);
		СтруктураПараметров.Вставить("ЗаписатьОбъект", 		Истина);
		СтруктураПараметров.Вставить("ФормаПереводаНаЭтап", Ложь);
		СтруктураПараметров.Вставить("Источник",       		?(ЗначениеЗаполнено(Источник), Источник, ЭтаФорма.УникальныйИдентификатор));
		Результат 			= ЗаданияКлиент.ПеревестиЗаданиеНаЭтап(СсылкаНаОбъект, СтруктураПараметров);
	Иначе
		СтруктураПараметров = СтруктураОбъекта;
		СтруктураПараметров.Вставить("Источник",       		?(ЗначениеЗаполнено(Источник), Источник, ЭтаФорма.УникальныйИдентификатор));
		СтруктураПараметров.Вставить("НовыйЭтап",      		СтруктураЭтапа.Этап);
		СтруктураПараметров.Вставить("ПереданаСсылка", 		Ложь);
		СтруктураПараметров.Вставить("ЗаписатьОбъект", 		Ложь);
		СтруктураПараметров.Вставить("ФормаПереводаНаЭтап", Истина);
		ОбъектЗадание 		= СтруктураОбъекта.ОбъектЗадание;	
		Результат 			= ЗаданияКлиент.ПеревестиЗаданиеНаЭтап(ОбъектЗадание, СтруктураПараметров);
	КонецЕсли;	
	
	Если Результат.ВыполненПеревод  = Истина Тогда
		Закрыть(Результат);	 		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодпроцесс(Команда)
	
	СтруктураОбъекта = ПолучитьСтруктуруЗадания();		
	Форма = ПолучитьФорму("Документ.Задание.Форма.ФормаДокумента", Новый Структура("ОткрываетсяИзВне, Объект", Истина, СтруктураОбъекта),,Новый УникальныйИдентификатор(),);	
	ЭтаФорма.Закрыть();
	Форма.Открыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьСтруктуруЗадания()
	
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("Дата",					ТекущаяДатаСеанса());
	СтруктураОбъекта.Вставить("Процесс",				СсылкаНаОбъект.ТекущийЭтап);
	СтруктураОбъекта.Вставить("Тема",					СсылкаНаОбъект.Тема);
	СтруктураОбъекта.Вставить("КрайняяДатаВыполнения",	СсылкаНаОбъект.КрайняяДатаВыполнения);
	СтруктураОбъекта.Вставить("Родитель",				СсылкаНаОбъект.Ссылка);
	
	Возврат СтруктураОбъекта;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуНаСервере()
	
	Возврат ТекущаяДатаСеанса();
	
КонецФункции

&НаСервере
Функция ПолучитьИсполнителяПоУмолчанию()
	
	Процесс		 = ?(ЗначениеЗаполнено(ТекущийПроцесс), ТекущийПроцесс, СсылкаНаОбъект.Процесс);  	
	ЭтапыТаблица = Процесс.Этапы.Выгрузить();
	Отбор 		 = Новый Структура("Этап", ЭтапПерехода);
	МассивЭтапов = ЭтапыТаблица.НайтиСтроки(Отбор);
	
	Возврат МассивЭтапов[0].ИсполнительПоУмолчанию;
	
КонецФункции	

#КонецОбласти
