///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "СПАРКРиски".
// ОбщийМодуль.СПАРКРискиПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет свойства справочников контрагентов.
// Параметры:
//	СвойстваСправочников - ТаблицаЗначений - в таблице заполняется список
//		справочников контрагентов и их свойства. Колонки таблицы:
//		* Имя - Строка - имя справочника;
//		* Иерархический - Булево - справочник является иерархическим;
//		* РеквизитИНН - Строка- имя реквизита ИНН;
//		* ИмяФормыПодбора - Строка - если для справочника определена собственная
//			форма подбора контрагентов, в этом поле можно указать ее полное имя.
//			Форма должна возвращать в оповещении о выборе Массив ссылок на
//			элементы справочника контрагентов.
//			Если не определена, тогда используется стандартная форма подбора.
//
Процедура ПриОпределенииСвойствСправочниковКонтрагентов(СвойстваСправочников) Экспорт
	
	//<< УИТ
	ОписаниеСправочника = СвойстваСправочников.Добавить();
	ОписаниеСправочника.Иерархический = Истина;
	ОписаниеСправочника.Имя           = "Контрагенты";
	ОписаниеСправочника.РеквизитИНН   = "ИНН";
	
	ОписаниеСправочника = СвойстваСправочников.Добавить();
	ОписаниеСправочника.Имя         = "Организации";
	ОписаниеСправочника.РеквизитИНН = "ИНН";
	//>>
	
КонецПроцедуры

// В методе заполняется список контрагентов для постановки на мониторинг и для
// снятия с мониторинга.
// Используется регламентным заданием ВсеОбновленияСПАРКРискиРазделенное
// и методом программного интерфейса СПАРКРиски.ЗаполнитьКонтрагентовНаМониторинге().
// При получении списком контрагентов можно использовать обращение к регистру сведений
// КонтрагентыНаМониторингеСПАРКРиски: если запись присутствует в регистре сведений,
// то это означает, что контрагент уже поставлен на мониторинг.
// Допускается обращение к регистру сведений КонтрагентыНаМониторингеСПАРКРиски:
// контрагент уже добавлен в список для мониторинга, если в регистре существует
// запись со значениями измерений:
//	- Контрагент = <Текущий контрагент>;
//	- РучноеДобавление = Ложь.
//
// Параметры:
//	ПоставитьНаМониторинг - Массив из ОпределяемыйТипСсылка.КонтрагентБИП - контрагенты для постановки на мониторинг;
//	СнятьСМониторинга - Массив из ОпределяемыйТипСсылка.КонтрагентБИП -  контрагенты для снятия с мониторинга;
//
Процедура КонтрагентыДляМониторинга(ПоставитьНаМониторинг, СнятьСМониторинга) Экспорт
	
	//<< УИТ
	// Постановка всех контрагентов в ИБ.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	_ДемоКонтрагенты.Ссылка КАК КонтрагентСсылка
	|ИЗ
	|	Справочник.Контрагенты КАК _ДемоКонтрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтрагентыНаМониторингеСПАРКРиски КАК КонтрагентыНаМониторингеСПАРКРиски
	|		ПО _ДемоКонтрагенты.Ссылка = КонтрагентыНаМониторингеСПАРКРиски.Контрагент
	|ГДЕ
	|	НЕ _ДемоКонтрагенты.ЭтоГруппа
	|	И КонтрагентыНаМониторингеСПАРКРиски.Контрагент ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	_ДемоОрганизации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК _ДемоОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтрагентыНаМониторингеСПАРКРиски КАК КонтрагентыНаМониторингеСПАРКРиски
	|		ПО _ДемоОрганизации.Ссылка = КонтрагентыНаМониторингеСПАРКРиски.Контрагент
	|ГДЕ
	|	КонтрагентыНаМониторингеСПАРКРиски.Контрагент ЕСТЬ NULL");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПоставитьНаМониторинг.Добавить(Выборка.КонтрагентСсылка);
	КонецЦикла;
	//>>
	
КонецПроцедуры

// Определяет параметры отображения отчетов.
//
// Параметры:
//	ПараметрыОтображения - Структура - параметры отображения отчетов.
//		Поля структуры:
//		* ИмяМакетаОформления - Строка - имя макета оформления отчетов,
//			По умолчанию используются стандартный макет оформления.
//
Процедура ПараметрыОтображенияОтчетов(ПараметрыОтображения) Экспорт
	
	//<< УИТ
	ПараметрыОтображения.ИмяМакетаОформления = "Зеленый";
	//>>
	
КонецПроцедуры

#Область ИндексыСПАРКРиски

// Вызывается из форм, в которые встроен показ индексов 1СПАРК Риски.
//
// Параметры:
//  Форма                - ФормаКлиентскогоПриложения - форма, в которой инициировано событие;
//  КонтрагентОбъект     - Объект, Неопределено - заполняется в том случае, если форма - это форма элемента справочника, а не форма документа.
//  Контрагент           - ОпределяемыйТип.КонтрагентБИП, Строка - Контрагент или ИНН контрагента;
//  ПараметрыОтображения - Структура - прочие параметры. Возможные ключи:
//    * ВариантОтображения - Строка - см. описание в СПАРКРиски.ОтобразитьИндексыСПАРК.
//  ИспользованиеРазрешено          - Булево - признак разрешения использования функциональности;
//  СтандартнаяОбработкаБиблиотекой - Булево - в этот параметр возвратить Ложь, если надо запретить стандартную обработку события библиотекой.
//
Процедура ПриСозданииНаСервере(Форма, КонтрагентОбъект, Контрагент, ПараметрыОтображения, ИспользованиеРазрешено, СтандартнаяОбработкаБиблиотекой) Экспорт

	//<< УИТ

	// Справочник._ДемоОрганизации.Форма.ФормаЭлемента.
	// Документ._ДемоПлатежноеПоручение.Форма.ФормаДокумента.
	СтандартнаяОбработкаБиблиотекой = Истина;

	Если Форма.ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда
		
		// Для формы "_ДемоКонтрагенты" заполнение индексами осуществляется своим способом - много декораций.
		СтандартнаяОбработкаБиблиотекой = Ложь;
		
		Если Не ИспользованиеРазрешено Тогда
			Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Ложь;
			Возврат;
		КонецЕсли;
		
		ТипСтруктура = Тип("Структура");
		
		Если ТипЗнч(Форма.ИндексыСПАРКРиски) <> ТипСтруктура Тогда
			Форма.ИндексыСПАРКРиски = СПАРКРиски.ИндексыСПАРККонтрагента(Контрагент, Истина);
		КонецЕсли;
		
		// Заполнение индексами может осуществляться как из ПриСозданииНаСервере, так и при изменении ИНН.
		СПАРКРискиКлиентСерверПереопределяемый.ОтобразитьИндексыСПАРК(
			Форма.ИндексыСПАРКРиски,
			КонтрагентОбъект,
			Форма.Объект.Ссылка,
			Форма,
			ИспользованиеРазрешено,
			Неопределено,
			Истина);
		
	КонецЕсли;
	//>>

КонецПроцедуры

// Переопределяет время ожидания завершения фонового задания получения индексов СПАРК Риски.
//
// Параметры:
//  ОжидатьЗавершение - Число - значение ключа "ОжидатьЗавершение" для параметра ПараметрыВыполнения.ОжидатьЗавершение
//           процедуры ДлительныеОперации.ВыполнитьВФоне. Если = 0, то не ожидать завершения.
//
Процедура ВремяОжиданияФоновогоЗадания(ОжидатьЗавершение) Экспорт

	//<< УИТ
	ОжидатьЗавершение = 0;
	//>>

КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИБ

// Вызывается при переходе на версию конфигурации с внедренной подсистемой СПАРКРиски.
// Возвращает параметры, необходимые для начального заполнения данных
// в объектах метаданных подсистемы.
//
// Параметры:
//	ПараметрыЗаполнения - Структура - в параметре возвращаются значения для
//		начального заполнения данных подсистемы.
//		Поля структуры:
//		* ЗапросСвойствКонтрагентов - Строка - текст запроса для получения свойств
//			контрагентов, подлежащих проверке в сервисе 1СПАРК Риски: только
//			юридические лица, не являющиеся иностранными.
//			В запросе должны быть определены колонки:
//			** Контрагент - ОпределяемыйТип.КонтрагентБИП - ссылка на элемент
//				справочника контрагентов;
//			** ИНН - Строка - ИНН контрагента;
//			** СвояОрганизация - Булево - признак того, что контрагент является собственным -
//				дочерним по отношению к организации, в которой ведется учет.
//				Свойство может быть использовано для отбора данных в отчетах;
//			Значение по умолчанию: Неопределено.
//			Если значение свойства Неопределено, будет вызвано исключение.
//			Если значение - пустая строка - получение свойств контрагентов
//			не будет выполнено;
//		* ЗаполнитьКонтрагентовНаМониторинге - Булево - провести заполнение
//			списка контрагентов на мониторинге в соответствии с алгоритмом,
//			определенным в методе КонтрагентыДляМониторинга() текущего модуля.
//			Значение по умолчанию: Ложь;
//		* ЗаполнитьИндексыКонтрагентов - Булево - заполнить значения индексов
//			контрагентов. Истина - заполнить, Ложь - не заполнять.
//			Для заполненных индексов значения будут обновлены при следующем
//			обновлении значений индексов по расписанию (в регламентов).
//			Если индексы не заполнены, тогда контрагенты будут добавляться в
//			список индексов "По требованию";
//			Правило заполнения определяется значением поля
//			ЗапросКонтрагентовДляЗаполненияИндексов.
//		* ЗапросКонтрагентовДляЗаполненияИндексов - Строка - текст запроса для
//			получения контрагентов для заполнения индексов. Используется только
//			при ЗаполнитьИндексыКонтрагентов = Истина.
//			Если значение <Пустая строка>, список индексов будет заполнен
//			всеми контрагентами, полученными при выполнении запроса
//			ЗапросСвойствКонтрагентов, иначе - в соответствии с текстом запроса.
//			Значение по умолчанию: <Пустая строка>.
//			В запросе должна быть определена колонка:
//			** Контрагент - ОпределяемыйТип.КонтрагентБИП - ссылка на элемент
//				справочника контрагентов;
//
Процедура ПараметрыНачальногоЗаполненияДанных1СПАРКРиски(ПараметрыЗаполнения) Экспорт
	
	//<< УИТ
	// Для примера все элементы справочника Организации определяются как собственные контрагенты.
	ПараметрыЗаполнения.ЗапросСвойствКонтрагентов =
	"ВЫБРАТЬ
	|	_ДемоКонтрагенты.Ссылка КАК Контрагент,
	|	_ДемоКонтрагенты.ИНН КАК ИНН,
	|	ЛОЖЬ КАК СвояОрганизация
	|ИЗ
	|	Справочник.Контрагенты КАК _ДемоКонтрагенты
	|ГДЕ
	|	НЕ _ДемоКонтрагенты.ЭтоГруппа
	|	И _ДемоКонтрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидКонтрагента.ЮридическоеЛицо)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	_ДемоОрганизации.Ссылка,
	|	_ДемоОрганизации.ИНН,
	|	ИСТИНА
	|ИЗ
	|	Справочник.Организации КАК _ДемоОрганизации
	|ГДЕ
	|	_ДемоОрганизации.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидКонтрагента.ЮридическоеЛицо)";
	
	ПараметрыЗаполнения.ЗаполнитьКонтрагентовНаМониторинге = Истина;
	ПараметрыЗаполнения.ЗаполнитьИндексыКонтрагентов       = Истина;
	//>>
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
