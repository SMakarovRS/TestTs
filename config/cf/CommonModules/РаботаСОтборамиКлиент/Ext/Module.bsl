
#Область ПрограммныйИнтерфейс

// Устанавливает видимость панели отборов.
//
// Параметры:
//	Форма 			- УправляемаяФорма - исходная форма с отборами.
//	Видимость		- Булево - значение видимости.
//	ДопПараметры 	- Структура - содержит дополнительные параметры для настройки панели отборов:
//		* СтруктураИменЭлементов	- Структура - имена элементов формы, если они не совпадают по умолчанию.
//		* пШирина					- Число - значение ширины панели отборов.
//
Процедура ПоказатьСкрытьПанельОтборов(Форма, Знач Видимость, Знач ДопПараметры = Неопределено) Экспорт	
	
	ИнтерфейсТакси	= Истина;
	Элементы 		= Форма.Элементы;
	
	// Получение параметров процедуры.
	СтруктураИменЭлементов	= ЗначениеСвойстваСтруктуры(ДопПараметры, "СтруктураИменЭлементов");
	пШирина					= ЗначениеСвойстваСтруктуры(ДопПараметры, "пШирина", 25);
	
	Если ДопПараметры <> Неопределено Тогда
		ДопПараметры.Свойство("СтруктураИменЭлементов",	СтруктураИменЭлементов);
		ДопПараметры.Свойство("пШирина",				пШирина);
	КонецЕсли;	
	
	#Если ВебКлиент ИЛИ МобильныйКлиент Тогда
	ИнтерфейсТакси = Истина;
	#КонецЕсли

	Если СтруктураИменЭлементов = Неопределено Тогда		
		Элементы.ПанельОтборов.Видимость				= Видимость;
		Элементы.ГруппаСкрытьОчиститьОтборы.Видимость	= Видимость;
		Элементы.ДекорацияПоказатьОтборы.Видимость		= НЕ Видимость;
		Элементы.ГруппаПраво.Ширина = ?(Видимость, ?(ИнтерфейсТакси, пШирина, пШирина - 1), 0);
		
	Иначе
		Форма.Элементы[СтруктураИменЭлементов.ПанельОтборов].Видимость	= Видимость;
		Форма.Элементы[СтруктураИменЭлементов.ДекорацияПоказатьОтборы].Видимость = НЕ Видимость;
		Форма.Элементы[СтруктураИменЭлементов.ПанельОтборов].Ширина = 
			?(Видимость, ?(ИнтерфейсТакси, пШирина, пШирина - 1), 0);
		
	КонецЕсли;
	
КонецПроцедуры

// Показывает диалог редактирования стандартного периода.
//
// Параметры:
//	Форма 			- УправляемаяФорма - исходная форма с отборами.
//	ДопПараметры 	- Структура - содержит дополнительные параметры для настройки отборов:
//		* ИмяСпискаОтбора			- Строка - имя динамического списка - указывается, если на форме несколько списков.
//		* ИмяПоляОтбора				- Строка - имя поля дин. списка для наложения отбора.
//		* СтруктураИменЭлементов	- Структура - имена элементов формы, если они не совпадают по умолчанию.
//		* УстановитьОтбор			- Булево - применять отбор по периоду.
//		* ОписаниеОповещенияОВыбореПериода - Строка - имя события для Обработки Оповещения в передаваемой форме с отборами.
//
Процедура ПредставлениеПериодаВыбратьПериод(Форма, Знач ДопПараметры = Неопределено) Экспорт 
	
	// Получение параметров процедуры.
	ИмяСпискаОтбора					= ЗначениеСвойстваСтруктуры(ДопПараметры, "ИмяСпискаОтбора", "Список");
	ИмяПоляОтбора					= ЗначениеСвойстваСтруктуры(ДопПараметры, "ИмяПоляОтбора", "Дата");
	СтруктураИменЭлементов			= ЗначениеСвойстваСтруктуры(ДопПараметры, "СтруктураИменЭлементов");
	УстановитьОтбор					= ЗначениеСвойстваСтруктуры(ДопПараметры, "УстановитьОтбор", Истина);
	ОписаниеОповещенияОВыбореПериода= ЗначениеСвойстваСтруктуры(ДопПараметры, "ОписаниеОповещенияОВыбореПериода");
	
	Параметры = Новый Структура;
	Параметры.Вставить("Форма", 			Форма);
	Параметры.Вставить("ИмяСпискаОтбора",	ИмяСпискаОтбора);
	Параметры.Вставить("ИмяПоляОтбора", 	ИмяПоляОтбора);	
	
	Если НЕ (СтруктураИменЭлементов = Неопределено) Тогда
		Параметры.Вставить("СтруктураИменЭлементов", СтруктураИменЭлементов);
	КонецЕсли;
	
	Если ОписаниеОповещенияОВыбореПериода <> Неопределено Тогда
		Параметры.Вставить("ОписаниеОповещенияОВыбореПериода", ОписаниеОповещенияОВыбореПериода);
	КонецЕсли;
	
	Параметры.Вставить("УстановитьОтбор", УстановитьОтбор);
	
	Оповещение	= Новый ОписаниеОповещения("ПредставлениеПериодаНажатиеЗавершение", ЭтотОбъект, Параметры);	
	Диалог		= Новый ДиалогРедактированияСтандартногоПериода;
	
	Если СтруктураИменЭлементов = Неопределено Тогда
		Диалог.Период = Форма.ОтборПериод;
	Иначе
		Диалог.Период = Форма[СтруктураИменЭлементов.ОтборПериод];
	КонецЕсли;
	
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

// Описание оповещения для процедуры ПредставлениеПериодаВыбратьПериод.
//
// Параметры:
//	НовыйПериод	- СтандартныйПериод, Дата, Неопределено - результат выбора.
//	Параметры 	- Структура - см. РаботаСОтборамиКлиент.ПредставлениеПериодаВыбратьПериод.
//
Процедура ПредставлениеПериодаНажатиеЗавершение(НовыйПериод, Параметры) Экспорт
	
	Если НовыйПериод = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма			= Параметры.Форма;
	ИмяСпискаОтбора = Параметры.ИмяСпискаОтбора;
	ИмяПоляОтбора	= Параметры.ИмяПоляОтбора;
	
	Если Параметры.Свойство("СтруктураИменЭлементов") Тогда
	
		Если ТипЗнч(НовыйПериод) = Тип("СтандартныйПериод") Тогда
			Форма[Параметры.СтруктураИменЭлементов.ОтборПериод] = НовыйПериод;
			
		ИначеЕсли ТипЗнч(НовыйПериод) = Тип("Дата") Тогда
			Форма[Параметры.СтруктураИменЭлементов.ОтборПериод].ДатаОкончания = НовыйПериод;
			
		КонецЕсли;
		
		Форма[Параметры.СтруктураИменЭлементов.ПредставлениеПериода] = 
			РаботаСОтборамиКлиентСервер.ОбновитьПредставлениеПериода(Форма[Параметры.СтруктураИменЭлементов.ОтборПериод]);
		
		Если Параметры.УстановитьОтбор Тогда
			
			РаботаСОтборамиКлиентСервер.УстановитьОтборПоПериоду(
				Форма[ИмяСпискаОтбора].КомпоновщикНастроек.Настройки.Отбор, 
				Форма[Параметры.СтруктураИменЭлементов.ОтборПериод].ДатаНачала, 
				Форма[Параметры.СтруктураИменЭлементов.ОтборПериод].ДатаОкончания, 
				ИмяПоляОтбора);
				
		КонецЕсли;
		
		Если Параметры.СтруктураИменЭлементов.Свойство("СобытиеОповещения") Тогда
			Оповестить(Параметры.СтруктураИменЭлементов.СобытиеОповещения);
		КонецЕсли;
			
	Иначе
		
		Если ТипЗнч(НовыйПериод) = Тип("СтандартныйПериод") Тогда
			Форма.ОтборПериод = НовыйПериод;
			
		ИначеЕсли ТипЗнч(НовыйПериод) = Тип("Дата") Тогда
			Форма.ОтборПериод.ДатаОкончания = НовыйПериод;
			
		КонецЕсли;
		
		Форма.ПредставлениеПериода = РаботаСОтборамиКлиентСервер.ОбновитьПредставлениеПериода(Форма.ОтборПериод);
		
		Если Параметры.УстановитьОтбор Тогда
			РаботаСОтборамиКлиентСервер.УстановитьОтборПоПериоду(Форма[ИмяСпискаОтбора].КомпоновщикНастроек.Настройки.Отбор,
				Форма.ОтборПериод.ДатаНачала, Форма.ОтборПериод.ДатаОкончания, ИмяПоляОтбора);
				
		КонецЕсли;
		
		Если Параметры.Свойство("ОписаниеОповещенияОВыбореПериода") Тогда
			Оповестить(Параметры.ОписаниеОповещенияОВыбореПериода);
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗначениеСвойстваСтруктуры(Знач Структура, Знач ИмяСвойства, Знач ЗначениеПоУмолчанию = Неопределено)
	
	Если Структура <> Неопределено Тогда
		
		Если Структура.Свойство(ИмяСвойства) Тогда
			Возврат Структура[ИмяСвойства];
		Иначе
			Возврат ЗначениеПоУмолчанию;		
		КонецЕсли;
		
	Иначе	
	    Возврат ЗначениеПоУмолчанию;
		
	КонецЕсли;
	
КонецФункции	

#КонецОбласти
