
#Область ПрограммныйИнтерфейс

// Функция создает документ "Телефонный звонок"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Функция сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, ДанныеЗаполнения) Экспорт
	
	НовыйЗвонок								= Документы["ТелефонныйЗвонок"].СоздатьДокумент();
	НовыйЗвонок["Дата"]						= сфпСофтФонПроСервер.сфпТекущаяДата();
	НовыйЗвонок["Входящий"]					= СтруктураЗвонка.ВходящийЗвонок;
	НовыйЗвонок["АбонентКакСвязаться"]		= СтруктураЗвонка.НомерТелефона; 
	НовыйЗвонок["Автор"]					= сфпСофтФонПроСервер.сфпТекущийПользователь();
	НовыйЗвонок["Важность"]					= Перечисления["ВариантыВажностиВзаимодействия"].Обычная;
	НовыйЗвонок["Ответственный"]			= НовыйЗвонок["Автор"];
	НовыйЗвонок["сфпИдентификаторЗвонка"]	= СтруктураЗвонка.hCall;
	НовыйЗвонок["сфпИдентификаторЗаписи"]	= СтруктураЗвонка.ИдентификаторЗаписи;
	НовыйЗвонок["сфпДлительностьЗвонка"]	= 0;
	НовыйЗвонок["Тема"]						= сфпСофтФонПроСервер.сфпЗаполнитьТемуТелефонногоЗвонка(НовыйЗвонок["Входящий"], НовыйЗвонок["Дата"]);
	НовыйЗвонок["Описание"]					= сфпСофтФонПроСервер.сфпЗаполнитьОписаниеТелефонногоЗвонка(НовыйЗвонок["сфпДлительностьЗвонка"]);		
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	НастройкаПриВходящемЗвонке = сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриВходящемЗвонке");
	НастройкаПриИсходящемЗвонке = сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриИсходящемЗвонке");				
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если НЕ (СтруктураЗвонка.МассивЗвонящих = Неопределено) Тогда
			// по новому алгоритму мы всегда в телефонный звонок подставляем первый элемент из массива звонящих
			// если только не стоит настройка "Открывать телефонный звонок"
			Если (СтруктураЗвонка.ВходящийЗвонок И НастройкаПриВходящемЗвонке = Нстр("ru='Открыть телефонный звонок'")) 
				ИЛИ (НЕ СтруктураЗвонка.ВходящийЗвонок И НастройкаПриИсходящемЗвонке = Нстр("ru='Открыть телефонный звонок'")) Тогда
				Если СтруктураЗвонка.МассивЗвонящих.Количество() = 1 Тогда
					СтруктураЗвонка.Контакт	= СтруктураЗвонка.МассивЗвонящих[0];
				КонецЕсли;				
			Иначе
				Если СтруктураЗвонка.МассивЗвонящих.Количество() > 0 Тогда
					СтруктураЗвонка.Контакт	= СтруктураЗвонка.МассивЗвонящих[0];
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		НовыйЗвонок["АбонентКонтакт"]		= СтруктураЗвонка.Контакт;
		НовыйЗвонок["АбонентПредставление"]	= сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт);

		Если Найти(Строка(СтруктураЗвонка.Контакт), НСтр("ru = '<Объект не найден>'")) > 0 Тогда
			НовыйЗвонок["Комментарий"]	= 
			    СтрШаблон(НСтр("ru = '%1: %2, номер: %3
                                |К данному абоненту в доступе отказано. Для разрешения работы с абонентом обратитесь к руководителю или администратору.'"), 
					Строка(ТипЗнч(СтруктураЗвонка.Контакт)), 
					сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт),
					сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона))
		КонецЕсли;	
	ИначеЕсли СтруктураЗвонка.ВнешнийЗвонок Тогда
		Если СтруктураЗвонка.МассивЗвонящих = Неопределено Тогда
			Если ПустаяСтрока(СтруктураЗвонка.CallerInfoName) Тогда
				НовыйЗвонок["АбонентПредставление"]	= НСтр("ru='!!!Не определен!!!'");
			ИначеЕсли Найти(СтруктураЗвонка.CallerInfoName, СтруктураЗвонка.НомерТелефона) = 0 Тогда
				НовыйЗвонок["АбонентПредставление"]	= СтруктураЗвонка.CallerInfoName;
			Иначе	
				НовыйЗвонок["АбонентПредставление"]	= НСтр("ru='!!!Не определен!!!'");
			КонецЕсли;	
		ИначеЕсли СтруктураЗвонка.МассивЗвонящих.Количество() = 0 Тогда
			Если ПустаяСтрока(СтруктураЗвонка.CallerInfoName) Тогда
				НовыйЗвонок["АбонентПредставление"]	= НСтр("ru='!!!Не определен!!!'");
			ИначеЕсли Найти(СтруктураЗвонка.CallerInfoName, СтруктураЗвонка.НомерТелефона) = 0 Тогда
				НовыйЗвонок["АбонентПредставление"]	= СтруктураЗвонка.CallerInfoName;
			Иначе	
				НовыйЗвонок["АбонентПредставление"]	= НСтр("ru='!!!Не определен!!!'");
			КонецЕсли;	
		КонецЕсли;	
	Иначе	
		Если ПустаяСтрока(СтруктураЗвонка.CalledInfoName) Тогда
			НовыйЗвонок["АбонентПредставление"]	= НСтр("ru='!!!Не определен!!!'");
		Иначе
			НовыйЗвонок["АбонентПредставление"]	= СтруктураЗвонка.CalledInfoName;
		КонецЕсли;	
	КонецЕсли;	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Если ДанныеЗаполнения.Свойство("Основание") Тогда
			НовыйЗвонок["ВзаимодействиеОснование"] = ДанныеЗаполнения.Основание;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
			сфпСтруктураВнешнихДанных	= ДанныеЗаполнения.сфпСтруктураCoMagic;
			НовыйЗвонок["сфпCoMagicID"]	= сфпСтруктураВнешнихДанных.comagic_context.visitor_id;
			НовыйЗвонок["Описание"]		= НовыйЗвонок["Описание"] + ?(НовыйЗвонок["Описание"], "", Символы.ПС) 
				+ НСтр("ru='Кампания: '") + сфпСтруктураВнешнихДанных.comagic_context.campaign + Символы.ПС 
				+ НСтр("ru='Сайт: '") + сфпСтруктураВнешнихДанных.comagic_context.site + Символы.ПС
				+ НСтр("ru='Ключевые слова: '") + сфпСтруктураВнешнихДанных.comagic_context.search_query; 
		КонецЕсли;	
	КонецЕсли;	
	Попытка
		НовыйЗвонок.Записать();
		ЗвонокЗаписан	= Истина;
	Исключение
		Сообщить(ОписаниеОшибки());
		ЗвонокЗаписан	= Ложь;
	КонецПопытки;
	
	Возврат НовыйЗвонок.Ссылка;
	
КонецФункции // сфпСоздатьТелефонныйЗвонок()

/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЕЙСТВИЙ

// Функция возвращает массив структур доступных действий при звонке
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	Массив	- Массив структур доступных действий
//
Функция сфпПолучитьМассивДоступныхДействий() Экспорт
	
	МассивДействий = Новый Массив;
	сфпДобавитьДействие(МассивДействий,	НСтр("ru='Нет действий'"), 					"");												// +
	сфпДобавитьДействие(МассивДействий,	НСтр("ru='Открыть телефонный звонок (Ctrl+1)'"),	"сфпОткрытьТелефонныйЗвонок");				// +
	сфпДобавитьДействие(МассивДействий,	НСтр("ru='Карточка клиента (Ctrl+2)'"), 			"сфпОткрытьКарточкуКонтакта");				// +
	сфпДобавитьДействие(МассивДействий,	НСтр("ru='Новое задание (Ctrl+3)'"), 				"сфпНовоеЗадание");							// +
	сфпДобавитьДействие(МассивДействий,	НСтр("ru='Список заданий (Ctrl+4)'"), 				"сфпОткрытьСписокЗаданий");					// -
	сфпДобавитьДействие(МассивДействий,	НСтр("ru='Новый заказ поставщику (Ctrl+5)'"), 		"сфпНовыйЗаказПоставщику");					// +
	сфпДобавитьДействие(МассивДействий,	НСтр("ru='Список заказов поставщику (Ctrl+6)'"), 	"сфпОткрытьСписокЗаказовПоставщику");		// +
	сфпДобавитьДействие(МассивДействий,	НСтр("ru='Взаиморасчеты с контрагентами (Ctrl+7)'"), "ВзаиморасчетыСКонтрагентами");			// +
	
	Возврат МассивДействий;
	
КонецФункции // сфпПолучитьМассивДоступныхДействий()

/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ COMAGIC

// Функция возвращает идентификатор CoMagic
//
// Парамеры:
//	Ссылка	- ДокументСсылка	- Документ
//
// Возвращаемое значение:
//	Строка	- Идентификатор CoMagic
//
Функция сфпПолучитьCoMagicID(Ссылка) Экспорт
	
	CoMagicID = "";
	
	ДокументИмяМетаданных = Ссылка.Метаданные().Имя;
	Если ДокументИмяМетаданных = "ТелефонныйЗвонок" Тогда
		КонтактИмяМетаданных = Ссылка.АбонентКонтакт.Метаданные().Имя;
		Если КонтактИмяМетаданных = "Контрагенты" Тогда
			Если ПустаяСтрока(Ссылка.АбонентКонтакт.сфпCoMagicID) Тогда
				CoMagicID	= Ссылка.сфпCoMagicID;
			Иначе 
				CoMagicID	= Ссылка.АбонентКонтакт.сфпCoMagicID;
			КонецЕсли;
		ИначеЕсли КонтактИмяМетаданных = "КонтактныеЛица" Тогда
			Если ПустаяСтрока(Ссылка.АбонентКонтакт.сфпCoMagicID) Тогда
				Если ПустаяСтрока(Ссылка.АбонентКонтакт.Владелец.сфпCoMagicID) Тогда
					  CoMagicID	= Ссылка.сфпCoMagicID;
				Иначе 
					  CoMagicID	= Ссылка.АбонентКонтакт.Владелец.сфпCoMagicID;
				КонецЕсли;
		    Иначе
				CoMagicID = Ссылка.АбонентКонтакт.сфпCoMagicID;
			КонецЕсли;
		Иначе
			CoMagicID = Ссылка.сфпCoMagicID;
		КонецЕсли;
	Иначе
		CoMagicID = Ссылка.сфпCoMagicID;
	КонецЕсли;	
	
	Возврат CoMagicID;

КонецФункции // сфпПолучитьCoMagicID(()	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура добавляет в массив структуру действий
//
// Параметры:
//	МассивДействий	- Массив	- Массив доступных действий
//	Наименование	- Строка	- Наименование действия
//	Действие		- Строка	- Имя процедуры-обработчика действия, процедура должна располагаться в этом модуле
//
Процедура сфпДобавитьДействие(МассивДействий, Наименование, Действие)
	
	СтруктураДействия = Новый Структура;
	СтруктураДействия.Вставить("Наименование",	Наименование);
	СтруктураДействия.Вставить("Действие",		Действие);
	МассивДействий.Добавить(СтруктураДействия);
	
КонецПроцедуры // сфпДобавитьДействие()

#КонецОбласти