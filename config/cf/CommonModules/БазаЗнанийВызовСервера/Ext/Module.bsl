////////////////////////////////////////////////////////////////////////////////
// База знаний вызов сервера
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// ОБЩАЯ ФУНКЦИОНАЛЬНОСТЬ

Функция ЗакодироватьСтроку(Знач Текст) Экспорт
	Возврат КодироватьСтроку(Текст, СпособКодированияСтроки.КодировкаURL);
КонецФункции

Процедура КодироватьПараметрыСсылки(Параметры) Экспорт
	Для Каждого КлючИЗначение Из Параметры Цикл
		ИмяПараметра	= КлючИЗначение.Ключ;
		ЗначПараметра	= КодироватьСтроку(КлючИЗначение.Значение, СпособКодированияСтроки.КодировкаURL);
		Параметры.Вставить(ИмяПараметра, ЗначПараметра);
	КонецЦикла;
КонецПроцедуры

Процедура РаскодироватьПараметрыСсылки(Параметры) Экспорт
	Для Каждого КлючИЗначение Из Параметры Цикл
		ИмяПараметра	= КлючИЗначение.Ключ;
		ЗначПараметра	= РаскодироватьСтроку(КлючИЗначение.Значение, СпособКодированияСтроки.КодировкаURL);
		Параметры.Вставить(ИмяПараметра, ЗначПараметра);
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАБОТА СО СТАТИСТИКОЙ БАЗЫ ЗНАНИЙ

Функция ПолучитьДанныеРейтингаСтатьи(Знач СтатьяСсылка) Экспорт
	
	Возврат БазаЗнаний.ПолучитьДанныеРейтингаСтатьи(СтатьяСсылка);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ДАННЫМИ

Функция СтатьяРедактируется(Знач СтатьяСсылка, Знач Область = "") Экспорт
	
	ДанныеБлокировки = БазаЗнаний.ПолучитьДанныеБлокировки(СтатьяСсылка, Область);
	
	Возврат ЗначениеЗаполнено(ДанныеБлокировки.Пользователь);
	
КонецФункции

Функция СтатьиБазыЗнанийФайлыДляОтправки(Знач СтатьяСсылка) Экспорт
	
    УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиБазыЗнанийКартинки.Файл КАК Файл
		|ИЗ
		|	Справочник.СтатьиБазыЗнаний.Картинки КАК СтатьиБазыЗнанийКартинки
		|ГДЕ
		|	СтатьиБазыЗнанийКартинки.Ссылка = &Ссылка
		|	И НЕ СтатьиБазыЗнанийКартинки.Файл.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СтатьиБазыЗнанийТаблицы.Файл
		|ИЗ
		|	Справочник.СтатьиБазыЗнаний.Таблицы КАК СтатьиБазыЗнанийТаблицы
		|ГДЕ
		|	СтатьиБазыЗнанийТаблицы.Ссылка = &Ссылка
		|	И НЕ СтатьиБазыЗнанийТаблицы.Файл.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СтатьиБазыЗнанийФайлы.Файл
		|ИЗ
		|	Справочник.СтатьиБазыЗнаний.Файлы КАК СтатьиБазыЗнанийФайлы
		|ГДЕ
		|	СтатьиБазыЗнанийФайлы.Ссылка = &Ссылка
		|	И НЕ СтатьиБазыЗнанийФайлы.Файл.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Ссылка", СтатьяСсылка);	
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Файл");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ОПОВЕЩЕНИЯМИ

Функция ПолучитьОповещенияПользователя(Знач ПользовательСсылка, Знач ВидОповещения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь"	, ПользовательСсылка);
	Запрос.УстановитьПараметр("ВидОповещения"	, ВидОповещения);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОповещенияБазыЗнаний.Пользователь,
	|	ОповещенияБазыЗнаний.ВидОповещения,
	|	ОповещенияБазыЗнаний.Идентификатор,
	|	ОповещенияБазыЗнаний.Объект,
	|	ОповещенияБазыЗнаний.ВидСобытия,
	|	ОповещенияБазыЗнаний.Описание
	|ИЗ
	|	РегистрСведений.ОповещенияБазыЗнаний КАК ОповещенияБазыЗнаний
	|ГДЕ
	|	ОповещенияБазыЗнаний.Пользователь = &Пользователь
	|	И ОповещенияБазыЗнаний.ВидОповещения = &ВидОповещения";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе 
		ТаблицаОповещений = Результат.Выгрузить();
		Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаОповещений);
	КонецЕсли;
	
КонецФункции

Процедура УдалитьОповещенияПользователя(Знач ПользовательСсылка, Знач ВидОповещения, Знач Идентификаторы) Экспорт
	
	НаборЗаписей = РегистрыСведений.ОповещенияБазыЗнаний.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(ПользовательСсылка);
	НаборЗаписей.Отбор.ВидОповещения.Установить(ВидОповещения);
	НаборЗаписей.Прочитать();
	
	ЕстьИзменения = Ложь;
	Для Каждого ЗаписьРегистра Из НаборЗаписей Цикл
		Если Идентификаторы.Найти(ЗаписьРегистра.Идентификатор) Тогда
			НаборЗаписей.Удалить(ЗаписьРегистра);
			ЕстьИзменения = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С КАРТИНКАМИ И СКРИПТАМИ

//Функция ПоместитьОбщиеКартинкиВХранилище(МассивФайлов) Экспорт
//	
//	Возврат Обработки.БазаЗнаний.ПоместитьКартинкиБазыЗнанийВХранилище(МассивФайлов);
//	
//КонецФункции
//
//Функция ПоместитьОбщиеСкриптыВХранилище(МассивФайлов) Экспорт
//	
//	Возврат Обработки.БазаЗнаний.ПоместитьСкриптыБазыЗнанийВХранилище(МассивФайлов);
//	
//КонецФункции

Функция ПолучитьТекстыСкриптов() Экспорт
	
	Возврат "<script type='text/javascript'>" + ПолучитьОбщийМакет("kdb_jquery").ПолучитьТекст() + "</script>" + Символы.ПС
			+ "<script type='text/javascript'>" + ПолучитьОбщийМакет("kdb_script").ПолучитьТекст() + "</script>" + Символы.ПС
			+ "<script type='text/javascript'>" + ПолучитьОбщийМакет("prism_js").ПолучитьТекст() + "</script>";
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С НОВОСТЯМИ

// Добавляет новость в базу знаний. По умолчанию новости добавляются в фоновом режиме.
//
// Параметры
//	ПараметрыВыполнения - Структура. См. БазаЗнаний.ДобавитьНовость
//	ФоновыйРежим - Булево. По умолчанию: Истина. Режим выполнения операции
//	АдресХранилища - Строка. Не обязательный. Задается если ФоновыйРежим = Истина
//
// Возвращаемое значение
//	Если ФоновыйРежим = Истина Тогда УникальныйИдентификатор фонового задания
//	Иначе СправочникСсылка.НовостиБазыЗнаний
//
Функция ДобавитьНовость(ПараметрыВыполнения, ФоновыйРежим = Ложь, АдресХранилища = "") Экспорт
	
	Если ФоновыйРежим Тогда
		ПараметрыЗадания = Новый Массив;
		ПараметрыЗадания.Добавить(ПараметрыВыполнения);
		ПараметрыЗадания.Добавить(АдресХранилища);
		
		Задание = ФоновыеЗадания.Выполнить(
			"БазаЗнаний.ДобавитьНовость",
			ПараметрыЗадания,
			,
			"Добавление новости базы знаний");
		
		ВозвращаемоеЗначение = Задание.УникальныйИдентификатор;
	Иначе 
		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено);
		БазаЗнаний.ДобавитьНовость(ПараметрыВыполнения, АдресХранилища);
		ПараметрыВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
		
		ВозвращаемоеЗначение = ПараметрыВыполнения.Результат;
		
	КонецЕсли;
		
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С НАСТРОЙКАМИ

Функция ПолучитьЗначениеНастройки(Знач ИмяНастройки, Знач ПользовательСсылка = Неопределено) Экспорт
	
	Возврат РегистрыСведений.НастройкиБазыЗнаний.ПолучитьЗначениеНастройки(ИмяНастройки, ПользовательСсылка);
	
КонецФункции

Функция ТекущаяВерсияИнтерфейса() Экспорт
	
	Если Метаданные.ОбщиеМодули.Найти("БазаЗнанийHTMLv2") <> Неопределено Тогда
		Возврат "2";
	Иначе 
		Возврат "1";
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ИЗБРАННЫМ

Функция ПолучитьИзбранное(Знач ПользовательСсылка, Знач НастройкаОтбора = Неопределено) Экспорт
	
	Возврат БазаЗнаний.ПолучитьИзбранное(ПользовательСсылка, НастройкаОтбора);

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ФОРМИРОВАНИЕ СТРАНИЦ БАЗЫ ЗНАНИЙ

Функция ПолучитьДанныеКатегории(АдресаКартинок, КатегорияСсылка) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ИДСтраницы		= СтрЗаменить(Строка(КатегорияСсылка.УникальныйИдентификатор()), "-", "");
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("Ссылка"		, КатегорияСсылка);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентКатегории(ПараметрыВыполнения);
	ПутьКФайлу		= "category_" + ИДСтраницы + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу,
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеСтатьи(АдресаКартинок, СтатьяСсылка) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ИДСтраницы		= СтрЗаменить(Строка(СтатьяСсылка.УникальныйИдентификатор()), "-", "");
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("Ссылка"		, СтатьяСсылка);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентСтатьи(ПараметрыВыполнения);
	ПутьКФайлу		= "article_" + ИДСтраницы + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу, 
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеСтатьиПоРейтингу(АдресаКартинок, ИмяНастройки) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("ИмяНастройки"	, ИмяНастройки);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентСтатьиПоРейтингу(ПараметрыВыполнения);
	ПутьКФайлу		= ИмяНастройки + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу, 
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеКлючевогоСлова(АдресаКартинок, КлючевоеСловоСсылка, КатегорияСсылка) Экспорт 
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ИДСтраницы		= СтрЗаменить(Строка(КлючевоеСловоСсылка.УникальныйИдентификатор()), "-", "");
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("КлючевоеСлово", КлючевоеСловоСсылка);
	ПараметрыВыполнения.Вставить("Категория"	, КатегорияСсылка);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентКлючевогоСлова(ПараметрыВыполнения);
	ПутьКФайлу		= "tag_" + ИДСтраницы + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу, 
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеПрофиляПользователя(АдресаКартинок, ПользовательСсылка) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ИДСтраницы		= СтрЗаменить(Строка(ПользовательСсылка.УникальныйИдентификатор()), "-", "");
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("Пользователь"	, ПользовательСсылка);
	
	ТекстСтраницы	= БазаЗнанийВерсткаСтраниц.ПолучитьКонтентПрофиляПользователя(ПараметрыВыполнения);
	ПутьКФайлу		= "user_profile_" + ИДСтраницы + ".html";
	
	Возврат Новый Структура("Контент, Путь, Картинки, Стили",
		ТекстСтраницы,
		ПутьКФайлу, 
		ПараметрыВыполнения.ДопКартинки,
		ПараметрыВыполнения.Стили);
	
КонецФункции

Функция ПолучитьДанныеОбновления(АдресаКартинок, Область, Параметры) Экспорт
	
	ЛокальныеПути = Новый Структура;
	Для Каждого КлючИЗначение Из АдресаКартинок Цикл
		ЛокальныеПути.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	БазаЗнанийВерсткаСтраниц = БазаЗнанийКлиентСерверПовтИсп.МодульВерсткиСтраницПортала();
	
	ПараметрыВыполнения	= Новый Структура;
	ПараметрыВыполнения.Вставить("ОснКартинки"	, ЛокальныеПути);
	ПараметрыВыполнения.Вставить("ДопКартинки"	, Новый Массив);
	ПараметрыВыполнения.Вставить("Стили"		, "");
	ПараметрыВыполнения.Вставить("Область"		, Область);
	ПараметрыВыполнения.Вставить("Параметры"	, Параметры);
	
	Возврат БазаЗнанийВерсткаСтраниц.ПолучитьДанныеОбновления(ПараметрыВыполнения);
	
КонецФункции

Функция ПолучитьСсылкуПоИдентификатору(ВидСправочника, Идентификатор) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат Справочники[ВидСправочника].ПустаяСсылка();
	КонецЕсли;
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор(Идентификатор);
	Возврат Справочники[ВидСправочника].ПолучитьСсылку(УникальныйИдентификатор);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ПОЛЬЗОВАТЕЛЯМИ

Функция ТекущийПользователь() Экспорт
	
	Возврат Пользователи.ТекущийПользователь();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ПРИЛОЖЕНИЯ

Процедура ПередЗавершениемРаботыСистемыНаСервере(Отказ) Экспорт
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	// Закроем все незакрытые сессии
	МассивСессий = БазаЗнаний.ПолучитьКлючОткрытойСессии(ТекущийПользователь, Истина);
	Если ТипЗнч(МассивСессий) = Тип("Массив") Тогда
		Для Каждого КлючСессии Из МассивСессий Цикл
			БазаЗнаний.ЗавершитьСессииПользователя(КлючСессии);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура БазаЗнанийПередЗаписьюСтатьи(Источник, Отказ) Экспорт
	
	// Очистка связанных справочников и регистров.
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ Источник.Ссылка.Пустая() Тогда
		
		Если Источник.ПометкаУдаления <> Источник.Ссылка.ПометкаУдаления Тогда
		
			Запрос = Новый Запрос();
			Запрос.Текст =
				"ВЫБРАТЬ
				|	НовостиБазыЗнаний.Ссылка
				|ИЗ
				|	Справочник.НовостиБазыЗнаний КАК НовостиБазыЗнаний
				|ГДЕ
				|	НовостиБазыЗнаний.ОбъектБазыЗнаний = &ОбъектБазыЗнаний";
			Запрос.УстановитьПараметр("ОбъектБазыЗнаний", Источник.Ссылка);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ОбъектНовость = Выборка.Ссылка.ПолучитьОбъект();
				ОбъектНовость.УстановитьПометкуУдаления(Источник.ПометкаУдаления, Истина);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// РАБОТА С КАТЕГОРИЯМИ.

Функция ДоступныеПользователюКатегорииБазыЗнаний(Знач Пользователь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	КатегорииБазыЗнаний.Ссылка
		|ИЗ
		|	Справочник.КатегорииБазыЗнаний КАК КатегорииБазыЗнаний
		|ГДЕ
		|	ВЫБОР
		|			КОГДА КатегорииБазыЗнаний.ТипКатегории = ЗНАЧЕНИЕ(Перечисление.ТипыКатегорийСтатейБазыЗнаний.Приватная)
		|				ТОГДА ВЫБОР
		|						КОГДА КатегорииБазыЗнаний.Автор = &ТекущийПользователь
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователь);	
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ДоступныеПользователюСтатьиБазыЗнаний(Знач Пользователь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СправочникСтатьиБазыЗнаний.Ссылка
		|ИЗ
		|	Справочник.СтатьиБазыЗнаний КАК СправочникСтатьиБазыЗнаний
		|ГДЕ
		|	СправочникСтатьиБазыЗнаний.Категории.Категория В
		|			(ВЫБРАТЬ
		|				СправочникКатегорииБазыЗнаний.Ссылка
		|			ИЗ
		|				Справочник.КатегорииБазыЗнаний КАК СправочникКатегорииБазыЗнаний
		|			ГДЕ
		|				ВЫБОР
		|					КОГДА СправочникКатегорииБазыЗнаний.ТипКатегории = ЗНАЧЕНИЕ(Перечисление.ТипыКатегорийСтатейБазыЗнаний.Приватная)
		|						ТОГДА ВЫБОР
		|								КОГДА СправочникКатегорииБазыЗнаний.Автор = &ТекущийПользователь
		|									ТОГДА ИСТИНА
		|								ИНАЧЕ ЛОЖЬ
		|							КОНЕЦ
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ)";
	
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователь);	
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Процедура УстановитьПараметрыЗапросаПоСтрокеПоиска(СтрокаПоиска, Запрос, ДопУсловия) Экспорт
	
	Если Не ПустаяСтрока(СтрокаПоиска) Тогда		
		ИскомаяСтрока = СокрЛП(СтрокаПоиска);
		ЗапрещенныеСимволы = ".,:;-+/\|" + Символы.НПП + Символы.ВТаб;
		Для Индекс = 1 По СтрДлина(ЗапрещенныеСимволы) Цикл
			Пока СтрНайти(ИскомаяСтрока, Сред(ЗапрещенныеСимволы, Индекс, 1)) > 0 Цикл
				ИскомаяСтрока = СтрЗаменить(ИскомаяСтрока, Сред(ЗапрещенныеСимволы, Индекс, 1), " ");
			КонецЦикла;
		КонецЦикла;
		
		Пока СтрНайти(ИскомаяСтрока, "  ") > 0 Цикл
			ИскомаяСтрока = СтрЗаменить(ИскомаяСтрока, "  ", " ");
		КонецЦикла;
		Если НЕ ПустаяСтрока(ИскомаяСтрока) Тогда
			МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИскомаяСтрока, " ", Истина, Истина);
			Если МассивСтрок[0] <> "" Тогда
				Индекс = 0;
				Для Каждого Элемент Из МассивСтрок Цикл					
					Если ПустаяСтрока(Элемент) Тогда
						Продолжить;
					КонецЕсли;					
					ИмяПеременной = "&Поиск" + Формат(Индекс, "ЧРД=; ЧРГ=; ЧН=0; ЧГ=");					
					ДопУсловия = ДопУсловия
						+ " И (СтатьиБазыЗнаний.Наименование ПОДОБНО " + ИмяПеременной
						+ " ИЛИ СтатьиБазыЗнаний.ПолныйТекст ПОДОБНО " + ИмяПеременной
						+ " ИЛИ СтатьиБазыЗнаний.КраткоеОписание ПОДОБНО " + ИмяПеременной
						+ " ИЛИ СтатьиБазыЗнаний.Ссылка В (
								|ВЫБРАТЬ 
								|	СвязьКлючевыхСловБазыЗнаний.СтатьяБазыЗнаний ИЗ
                          		|РегистрСведений.СвязьКлючевыхСловБазыЗнаний КАК СвязьКлючевыхСловБазыЗнаний
                          		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Теги КАК Теги
                          		|ПО СвязьКлючевыхСловБазыЗнаний.Тег = Теги.Ссылка
                          		|ГДЕ
                          		|	Теги.Наименование ПОДОБНО " + ИмяПеременной + ")"
						+ " ИЛИ СтатьиБазыЗнаний.Ссылка В 
							|	(ВЫБРАТЬ Комментарии.ВладелецКомментария КАК ВладелецКомментария
				            |     ИЗ
				            |     	Справочник.Комментарии КАК Комментарии
				            |     ГДЕ
				            |     	Комментарии.Заголовок ПОДОБНО " + ИмяПеременной + "
				            |     	ИЛИ Комментарии.Текст ПОДОБНО " + ИмяПеременной + "
				            |     	ИЛИ Комментарии.Автор.Наименование ПОДОБНО " + ИмяПеременной + ")"
						+ ")" + Символы.ПС;
					Запрос.УстановитьПараметр("Поиск" + Формат(Индекс, "ЧРД=; ЧРГ=; ЧН=0; ЧГ="), "%" + Элемент + "%");
					Индекс = Индекс + 1;					
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	Если ПустаяСтрока(ДопУсловия) Тогда
		Запрос.УстановитьПараметр("ДопУсловия", Истина);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ДопУсловия", ДопУсловия); 
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти