////////////////////////////////////////////////////////////////////////////////
// Модуль позволяет работать с HTML-текстом
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Удаляет из текста теги < и > и возвращает результат.
//
// Параметры:
//	Текст - Строка - исходный текст.
//
// Возвращаемое значение:
//	Строка - результат удаления.
//
Функция ОбработатьТеги(Знач Текст) Экспорт
	
	Результат = СтрЗаменить(Текст, "<", "&lt;");
	Результат = СтрЗаменить(Результат, ">", "&gt;");
	
	Возврат Результат;
	
КонецФункции

// Возвращает текст в теле документа (body)
//
// Параметры:
//	Текст - Строка - HTML документ.
//
// Возвращаемое значение:
//	Строка - все что в теге body.
//
Функция ТекстТелаДокумента(Знач Текст) Экспорт
	
	НРегТекст = НРег(Текст);
	
	НачалоОпределения = СтрНайти(НРегТекст, "<body>");
	КонецОпределения  = СтрНайти(НРегТекст, "</body>");
	
	Если НачалоОпределения = 0 И СтрНайти(НРегТекст, "<body") > 0 Тогда
		НачалоОпределения = СтрНайти(НРегТекст, ">") + 1;
		Текст = СокрЛП(Сред(Текст, НачалоОпределения, КонецОпределения - НачалоОпределения));
	Иначе	
		Текст = Сред(Текст, НачалоОпределения + 6, КонецОпределения - НачалоОпределения - 6);
	КонецЕсли;	
	
	Возврат Текст;
	
КонецФункции

// Получает обычный текст из HTML.
//
// Параметры:
//	ТекстHTML - Строка - исходный HTML документ.
//
// Возвращаемое значение:
//	Строка - текст без тегов.
//
Функция ТекстИзHTML(Знач ТекстHTML) Экспорт
	
	Попытка
		Построитель = Новый ПостроительDOM;
		ЧтениеHTML  = Новый ЧтениеHTML;
		ЧтениеHTML.УстановитьСтроку(ТекстHTML);
		ДокументHTML = Построитель.Прочитать(ЧтениеHTML);
		Возврат ДокументHTML.Тело.ТекстовоеСодержимое;		
	Исключение
		ФорматированныйДокумент = Новый ФорматированныйДокумент;
		ФорматированныйДокумент.УстановитьHTML(ТекстHTML, Новый Структура);
		Возврат ФорматированныйДокумент.ПолучитьТекст();		
	КонецПопытки;
	
КонецФункции

// Удаляет теги и специальные символы из текста. Применять, если это может быть и текст и HTML-документ.
//
// Параметры:
//	Текст - Строка - исходный текст.
//	ФорматHTML - Булево - текст в формате HTML
//
// Возвращаемое значение:
//	Строка - строка с замененными тегами.
//
Функция УдалитьТегиИСпецСимволыИзТекста(Знач Текст, Знач ФорматHTML = Истина) Экспорт
	
	Результат = СтроковыеФункцииКлиентСервер.ИзвлечьТекстИзHTML(Текст);
	
	Если ФорматHTML = Истина Тогда
		Результат = СтрЗаменить(Результат, "&", "&amp;");
		Результат = СтрЗаменить(Результат, "'", "&#8216;");
		Результат = СтрЗаменить(Результат, "<", "&lt;");
		Результат = СтрЗаменить(Результат, ">", "&gt;");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // УдалитьТегиИСпецСимволыИзТекста

// Удаляет теги и специальные символы из строки. Применять, если точно известно, что это точно строка.
//
// Параметры:
//	Стр - Строка - исходная строка.
//
// Возвращаемое значение:
//	Строка - строка без тегов.
//
Функция УдалитьТегиИСпецСимволыИзСтроки(Знач Стр) Экспорт
	
	Результат = СтрЗаменить(Стр, "&", "&amp;");
	Результат = СтрЗаменить(Результат, "'", "&#8216;");
	Результат = СтрЗаменить(Результат, "<", "&lt;");
	Результат = СтрЗаменить(Результат, ">", "&gt;");
	
	Возврат Результат;
	
КонецФункции

// Разбирает строку URI на составные части и возвращает в виде структуры.
// На основе RFC 3986.
//
// Параметры:
//  СтрокаURI - Строка - ссылка на ресурс в формате:
//                       <схема>://<логин>:<пароль>@<хост>:<порт>/<путь>?<параметры>#<якорь>.
//
// Возвращаемое значение:
//  Структура - составные части URI согласно формату:
//   * Схема         - Строка - схема из URI.
//   * Логин         - Строка - логин из URI.
//   * Пароль        - Строка - пароль из URI.
//   * ИмяСервера    - Строка - часть <хост>:<порт> из URI.
//   * Хост          - Строка - хост из URI.
//   * Порт          - Строка - порт из URI.
//   * ПутьНаСервере - Строка - часть <путь>?<параметры>#<якорь> из URI.
//
Функция СтруктураURI(Знач СтрокаURI) Экспорт
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = СтрНайти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;
	
	// Строка соединения и путь на сервере.
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = СтрНайти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
	
	// Информация пользователя и имя сервера.
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = СтрНайти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = СтрНайти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = СтрНайти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
		Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Порт) Тогда
			Порт = "";
		КонецЕсли;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(ПустаяСтрока(Порт), Неопределено, Число(Порт)));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции

// Получает текст из двоичных данных.
//
// Параметры:
//	
//
// Возвращаемое значение:
//	
//
Функция ПолучитьТекстИзДвоичныхДанных(Знач Данные) Экспорт
	
	Если ТипЗнч(Данные) = Тип("Строка") Тогда
		Возврат Данные;
	ИначеЕсли ТипЗнч(Данные) <> Тип("ДвоичныеДанные") Тогда
		Возврат "";
	КонецЕсли;
	
    Возврат ПолучитьСтрокуИзДвоичныхДанных(Данные);
	
КонецФункции

// Обрабатывает текст HTML комментария/задания/статьи базы знаний.
//
// Параметры:
//  Объект - Структура - исходный комментарий в структуре.
//  Параметры - Структура - доп. параметры.
//
// Возвращаемое значение:
//   Строка   - обработанный текст.
//
Функция ОбработатьТекстHTML(Знач Объект, Знач Параметры = Неопределено, 
	Знач УникальныйИдентификатор = Неопределено) Экспорт
	
	Если ТипЗнч(Объект) = Тип("Структура") Тогда
		ОбъектСсылка = Объект.Ссылка;
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Комментарии") Тогда
		ОбъектСсылка = Объект;
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникОбъект.Комментарии") Тогда
		ОбъектСсылка = Объект.Ссылка;
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.Задание") Тогда
		ОбъектСсылка = Объект;
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.Задание") Тогда
		ОбъектСсылка = Объект.Ссылка;
	КонецЕсли;
	
	ТекстHTML = Объект.ТекстHTML;
	
	Если НЕ ПустаяСтрока(ТекстHTML) Тогда
		
	    нТекстHTML = НРег(ТекстHTML);
		Кодировка = Неопределено;
		
		// Добавим тег HTML если он отсутствует. Такие письма могут приходить к примеру с Gmail.
		// Необходимо для корректного отображения в элементе формы.
        Если СтрЧислоВхождений(нТекстHTML, "<html") = 0 Тогда
            Если СтрЧислоВхождений(нТекстHTML,"<body") = 0 Тогда
                ТекстHTML = "<html><body>" + ТекстHTML + "</body></html>"
            Иначе
			    ТекстHTML = "<html>" + ТекстHTML + "</html>"
            КонецЕсли;
		КонецЕсли;
		
		Если СтрНайти(НРег(ТекстHTML), "<body>") > 0 Тогда
			ТекстHTML = СтрЗаменить(ТекстHTML, Сред(ТекстHTML, СтрНайти(НРег(ТекстHTML), "<body>"), 6),
				"<body style=""font-family:Arial;font-size:10pt;"">");
		КонецЕсли;		
		
		Если Параметры = Неопределено Тогда
			ТаблицаФайлов = ЗаданияСервер.ПолучитьВложения(ОбъектСсылка, Ложь);
		Иначе
			ТаблицаФайлов = Параметры.ПрисоединенныеФайлы.НайтиСтроки(Новый Структура("ВладелецФайла", ОбъектСсылка));
		КонецЕсли;
		
		Если ТаблицаФайлов.Количество() > 0 Тогда
			
			ДокументHTML = ЗаменитьИдентификаторыКартинокНаПутьКФайлам(ТекстHTML, ТаблицаФайлов, Кодировка, Истина, 
				УникальныйИдентификатор);			
			Возврат Взаимодействия.ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML);
			
		Иначе
			
			Возврат ТекстHTML;
			
		КонецЕсли;
		
	Иначе
		
		Возврат ТекстHTML;
		
	КонецЕсли;
	
КонецФункции

// Заменяет в тексте HTML ИД картинок вложений на путь к файлам и создает объект документ HTML.
//
// Параметры:
//  ТекстHTML - Строка - обрабатываемый текст HTML.
//  Атрибут - ТаблицаЗначений - таблица, содержащая информацию о присоединенных файлов.
//  Кодировка - Строка - кодировка текста HTML.
//
// Возвращаемое значение:
//  ДокументHTML   - созданный документ HTML.
//
Функция ЗаменитьИдентификаторыКартинокНаПутьКФайлам(ТекстHTML, ТаблицаФайлов, 
	Кодировка = Неопределено, ОбработатьКартинки = Ложь, ИдентификаторФормы = Неопределено) Экспорт
	
	ДокументHTML = Взаимодействия.ПолучитьОбъектДокументHTMLИзТекстаHTML(ТекстHTML, Кодировка);
	
	Для Каждого ПрисоединенныйФайл Из ТаблицаФайлов Цикл
		
		Для Каждого Картинка Из ДокументHTML.Картинки Цикл
			
			АтрибутИсточникКартинки = Картинка.Атрибуты.ПолучитьИменованныйЭлемент("src");
			Если АтрибутИсточникКартинки = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрЧислоВхождений(АтрибутИсточникКартинки.Значение, 
				ПрисоединенныйФайл.ИДФайлаЭлектронногоПисьма) > 0 Тогда
				
				НовыйАтрибутКартинки = АтрибутИсточникКартинки.КлонироватьУзел(Ложь);
				Если ОбработатьКартинки Тогда
					ДанныеФайла 		= РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл.Ссылка);
					ДвоичныеДанные 		= ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
					ТекстовоеСодержимое = Base64Строка(ДвоичныеДанные);
					ПозицияТочки 		= СтрНайти(ДанныеФайла.Расширение,".");
					Если ПозицияТочки > 0 Тогда
						РасширениеФайла	= Сред(ДанныеФайла.Расширение, ПозицияТочки + 1);
					Иначе
						РасширениеФайла = ДанныеФайла.Расширение;
					КонецЕсли;	
					Если Не ЗначениеЗаполнено(РасширениеФайла) Тогда
						РасширениеФайла = "png";
					КонецЕсли;	
					ТекстовоеСодержимое = "data:image/" + РасширениеФайла + ";base64," + ТекстовоеСодержимое;
				Иначе
					// Если данные картинки получить не удалось, то картинку не выводим.
					// Пользователю при этом ничего не сообщаем.
					Попытка
						Если ИдентификаторФормы <> Неопределено Тогда
							ТекстовоеСодержимое = РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл.Ссылка, 
								Новый Структура("ИдентификаторФормы", ИдентификаторФормы)).СсылкаНаДвоичныеДанныеФайла;
						Иначе
							ТекстовоеСодержимое = 
								РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл.Ссылка).СсылкаНаДвоичныеДанныеФайла;
						КонецЕсли;
					Исключение
						ТекстовоеСодержимое = "";
					КонецПопытки;
				КонецЕсли;
				
				НовыйАтрибутКартинки.ТекстовоеСодержимое = ТекстовоеСодержимое;
				//@skip-warning
				Картинка.Атрибуты.УстановитьИменованныйЭлемент(НовыйАтрибутКартинки);
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ДокументHTML;
	
КонецФункции

// Обрабатывает текст HTML для помещения в форматированный документ.
//
// Параметры:
//  Письмо  - ДокументСсылка.ЭлектронноеПисьмоВходящее,
//            ДокументСсылка.ЭлектронноеПисьмоИсходящее - письмо для которого будет проведена оценка.
//  ТекстHTML - Строка - обрабатываемый текст HTML.
//  СтруктураВложений - Структура - структура в которую помещаются картинки - вложения письма.
//
// Возвращаемое значение:
//   Число   - оценка размера письма в байтах.
//
Функция ОбработатьТекстHTMLДляФорматированногоДокумента(Задание, ТекстHTML, СтруктураВложений) Экспорт
	
	Если Не ПустаяСтрока(ТекстHTML) Тогда
		
		ДокументHTML = Взаимодействия.ПолучитьОбъектДокументHTMLИзТекстаHTML(ТекстHTML);
		
		ТаблицаФайлов = ЗаданияСервер.ПолучитьВложения(Задание, Ложь);
		
		Для Каждого Картинка Из ДокументHTML.Картинки Цикл
			
			АтрибутИсточникКартинки = Картинка.Атрибуты.ПолучитьИменованныйЭлемент("src");
			
			Для Каждого ПрисоединенныйФайл Из ТаблицаФайлов Цикл
				
				Если СтрЧислоВхождений(АтрибутИсточникКартинки.Значение, 
					ПрисоединенныйФайл.ИДФайлаЭлектронногоПисьма) > 0 Тогда
					
					НовыйАтрибутКартинки = АтрибутИсточникКартинки.КлонироватьУзел(Ложь);
					НовыйАтрибутКартинки.ТекстовоеСодержимое = ПрисоединенныйФайл.Наименование;
					//@skip-warning
					Картинка.Атрибуты.УстановитьИменованныйЭлемент(НовыйАтрибутКартинки);
					
					СтруктураВложений.Вставить(
						ПрисоединенныйФайл.Наименование,
						Новый Картинка(ПолучитьИзВременногоХранилища(
							РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл.Ссылка).СсылкаНаДвоичныеДанныеФайла)));
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
				
			Если СтрЧислоВхождений(АтрибутИсточникКартинки.Значение, ";base64,") > 0 Тогда
				
				Попытка
					ДвоичныеДанные = Base64Значение(Сред(АтрибутИсточникКартинки.Значение, 
						СтрНайти(АтрибутИсточникКартинки.Значение, ";base64,") + 8));
					НаименованиеФайла = "_" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "_");
					
					НовыйАтрибутКартинки = АтрибутИсточникКартинки.КлонироватьУзел(Ложь);
					НовыйАтрибутКартинки.ТекстовоеСодержимое = НаименованиеФайла;
					//@skip-warning
					Картинка.Атрибуты.УстановитьИменованныйЭлемент(НовыйАтрибутКартинки);
					
					СтруктураВложений.Вставить(НаименованиеФайла, Новый Картинка(ДвоичныеДанные));
				Исключение
				КонецПопытки;
				
			КонецЕсли;
				
		КонецЦикла;
			
		Возврат Взаимодействия.ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML);
			
	Иначе
		
		Возврат ТекстHTML;
		
	КонецЕсли;
	
КонецФункции

// Заменяет в HTML картинки на base64-представление.
//
// Параметры:
//	Задание - ДокументСсылка.Задание - докумен-родитель
//	ТекстHTML - Строка - обрабатываемый текст.
//	СтруктураВложений - Структура - все вложения HTML
//
// Возвращаемое значение:
//	Строка - результат работы с заменой.
//
Функция ЗаменитьВТекстеHTMLКартинкиНаBase64(Задание, ТекстHTML, Знач СтруктураВложений) Экспорт
	
	Если Не ПустаяСтрока(ТекстHTML) Тогда
		
		ДокументHTML = Взаимодействия.ПолучитьОбъектДокументHTMLИзТекстаHTML(ТекстHTML);
		
		ТаблицаФайлов = ЗаданияСервер.ПолучитьВложения(Задание, Ложь);
		
		Если ТаблицаФайлов.Количество() Тогда
			
			Для Каждого ПрисоединенныйФайл Из ТаблицаФайлов Цикл
				
				Для Каждого Картинка Из ДокументHTML.Картинки Цикл
					
					АтрибутИсточникКартинки = Картинка.Атрибуты.ПолучитьИменованныйЭлемент("src");
					
					Если СтрЧислоВхождений(АтрибутИсточникКартинки.Значение, 
						ПрисоединенныйФайл.ИДФайлаЭлектронногоПисьма) > 0 Тогда
						
						ДД = ПолучитьИзВременногоХранилища(
							РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл.Ссылка).СсылкаНаДвоичныеДанныеФайла);
						
						НовыйАтрибутКартинки = АтрибутИсточникКартинки.КлонироватьУзел(Ложь);
						НовыйАтрибутКартинки.ТекстовоеСодержимое = "data:image/png;base64," + Base64Строка(ДД);
						//@skip-warning
						Картинка.Атрибуты.УстановитьИменованныйЭлемент(НовыйАтрибутКартинки);

						Прервать;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;

		КонецЕсли;
		
		Для Каждого Элемент Из СтруктураВложений Цикл
			
			Для Каждого Картинка Из ДокументHTML.Картинки Цикл
				
					АтрибутИсточникКартинки = Картинка.Атрибуты.ПолучитьИменованныйЭлемент("src");
					
					Если СтрЧислоВхождений(АтрибутИсточникКартинки.Значение, Элемент.Ключ) > 0 Тогда
						
						ДД = Элемент.Значение.ПолучитьДвоичныеДанные();
						
						НовыйАтрибутКартинки = АтрибутИсточникКартинки.КлонироватьУзел(Ложь);
						НовыйАтрибутКартинки.ТекстовоеСодержимое = "data:image/png;base64," + Base64Строка(ДД);
						//@skip-warning
						Картинка.Атрибуты.УстановитьИменованныйЭлемент(НовыйАтрибутКартинки);

						Прервать;
						
					КонецЕсли;				
				
			КонецЦикла;
			
		КонецЦикла;
		
		Возврат Взаимодействия.ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML);
		
	Иначе
		
		Возврат ТекстHTML;
		
	КонецЕсли;
	
КонецФункции

// Возвращает MIME-тип файла по имени файла.
//
// Параметры:
//  ИмяФайла - Строка	 - имя файла.
// 
// Возвращаемое значение:
//  Строка - тип файла по MIME/
//
Функция ТипФайла(Знач ИмяФайла) Экспорт
	
	Перем тТип, чСтрок;
	тТип = СтрЗаменить(ИмяФайла, ".", Символы.ПС);
	чСтрок = СтрЧислоСтрок(тТип);
	Если чСтрок < 2 Тогда
		Возврат "";
    КонецЕсли;
    
	тТип = НРег(СтрПолучитьСтроку(тТип, чСтрок));
	
	// Часто используемые
    Если тТип = "ico" Тогда Возврат "image/x-ico";
    ИначеЕсли тТип = "css" ИЛИ тТип = "cssl" Тогда Возврат "text/css";
    ИначеЕсли тТип = "htm" ИЛИ тТип = "html" Тогда Возврат "text/html";
    ИначеЕсли тТип = "js" ИЛИ тТип = "javascript" Тогда Возврат "text/javascript";
    ИначеЕсли тТип = "png" ИЛИ тТип = "gif" ИЛИ тТип = "bmp" ИЛИ тТип = "cgm" ИЛИ тТип = "ief" ИЛИ тТип = "rle" 
        ИЛИ тТип = "rtf" ИЛИ тТип = "webp" Тогда Возврат "image/" + тТип;
    ИначеЕсли тТип = "jpg" ИЛИ тТип = "jpeg" ИЛИ тТип = "jpe" Тогда Возврат "image/jpeg";
    ИначеЕсли тТип = "ttf" Тогда Возврат "application/x-font-ttf";
    ИначеЕсли тТип = "otf" Тогда Возврат "application/x-font-opentype";
    ИначеЕсли тТип = "woff" Тогда Возврат "application/font-woff";
    ИначеЕсли тТип = "woff2" Тогда Возврат "application/font-woff2";
    ИначеЕсли тТип = "eot" Тогда Возврат "application/vnd.ms-fontobject";
    ИначеЕсли тТип = "sfnt" Тогда Возврат "application/font-sfnt";
    ИначеЕсли тТип = "zip" Тогда Возврат "application/zip";
    ИначеЕсли тТип = "txt" Тогда Возврат "text/plain";
    ИначеЕсли тТип = "doc" Тогда Возврат "application/vnd.ms-word";
    ИначеЕсли тТип = "docx" Тогда Возврат "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
    ИначеЕсли тТип = "xls" ИЛИ тТип = "xla" ИЛИ тТип = "xlc" ИЛИ тТип = "xld" ИЛИ тТип = "xll" ИЛИ тТип = "xlm" 
        ИЛИ тТип = "xlt" ИЛИ тТип = "xlw" Тогда Возврат "application/vnd.ms-excel";
    ИначеЕсли тТип = "xlsx" Тогда Возврат "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
    ИначеЕсли тТип = "ppt" ИЛИ тТип = "pps" ИЛИ тТип = "ppz" Тогда Возврат "application/vnd.ms-powerpoint";
    ИначеЕсли тТип = "pptx" Тогда Возврат "application/vnd.openxmlformats-officedocument.presentationml.presentation";
    ИначеЕсли тТип = "djv" ИЛИ тТип = "djvu" Тогда Возврат "image/vnd.djvu";
    ИначеЕсли тТип = "msg" Тогда Возврат "application/vnd.ms-outlook";
    ИначеЕсли тТип = "swf" Тогда Возврат "application/x-shockwave-flash";
    ИначеЕсли тТип = "wav" Тогда Возврат "audio/x-wav";
    ИначеЕсли тТип = "xml" Тогда Возврат "text/xml";
    ИначеЕсли тТип = "tif" ИЛИ тТип = "tiff" Тогда Возврат "image/tiff";
    ИначеЕсли тТип = "odp" Тогда Возврат "application/vnd.oasis.opendocument.presentation";
    ИначеЕсли тТип = "ods" Тогда Возврат "application/vnd.oasis.opendocument.spreadsheet";
    ИначеЕсли тТип = "odt" Тогда Возврат "application/vnd.oasis.opendocument.text";
    ИначеЕсли тТип = "rar" Тогда Возврат "application/x-rar";
    ИначеЕсли тТип = "7z" Тогда Возврат "application/x-7z-compressed";

    // image
    ИначеЕсли тТип = "svg" Тогда Возврат "image/svg+xml";
    ИначеЕсли тТип = "3ds" Тогда Возврат "image/x-3ds";
    ИначеЕсли тТип = "ag" Тогда Возврат "image/x-applix-graphics";
    ИначеЕсли тТип = "cur" Тогда Возврат "image/x-win-bitmap";
    ИначеЕсли тТип = "dcm" Тогда Возврат "image/x-dcm";
    ИначеЕсли тТип = "dwg" Тогда Возврат "image/vnd.dwg";
    ИначеЕсли тТип = "dxf" Тогда Возврат "image/vnd.dxf";
    ИначеЕсли тТип = "eps" ИЛИ тТип = "epsf" ИЛИ тТип = "epsi" Тогда Возврат "image/x-eps";
    ИначеЕсли тТип = "fig" Тогда Возврат "image/x-xfig";
    ИначеЕсли тТип = "fits" Тогда Возврат "image/x-fits";
    ИначеЕсли тТип = "g3" Тогда Возврат "image/fax-g3";
    ИначеЕсли тТип = "icb" Тогда Возврат "image/x-icb";
    ИначеЕсли тТип = "iff" Тогда Возврат "image/x-iff";
    ИначеЕсли тТип = "ilbm" Тогда Возврат "image/x-ilbm";
    ИначеЕсли тТип = "jp2" Тогда Возврат "image/jpeg2000";
    ИначеЕсли тТип = "jng" Тогда Возврат "image/x-jng";
    ИначеЕсли тТип = "lwo" ИЛИ тТип = "lwob" Тогда Возврат "image/x-lwo";
    ИначеЕсли тТип = "lws" Тогда Возврат "image/x-lws";
    ИначеЕсли тТип = "msod" Тогда Возврат "image/x-msod";
    ИначеЕсли тТип = "pbm" Тогда Возврат "image/x-portable-bitmap";
    ИначеЕсли тТип = "pcd" Тогда Возврат "image/x-photo-cd";
    ИначеЕсли тТип = "pgm" Тогда Возврат "image/x-portable-graymap";
    ИначеЕсли тТип = "pict" ИЛИ тТип = "pict1" ИЛИ тТип = "pict2" Тогда Возврат "image/x-pict";
    ИначеЕсли тТип = "pnm" Тогда Возврат "image/x-portable-anymap";
    ИначеЕсли тТип = "ppm" Тогда Возврат "image/x-portable-pixmap";
    ИначеЕсли тТип = "psd" Тогда Возврат "image/x-psd";
    ИначеЕсли тТип = "ras" Тогда Возврат "image/x-cmu-raster";
    ИначеЕсли тТип = "rgb" Тогда Возврат "image/x-rgb";
    ИначеЕсли тТип = "sgi" Тогда Возврат "image/x-sgi";
    ИначеЕсли тТип = "sun" Тогда Возврат "image/x-sun-raster";
    ИначеЕсли тТип = "tga" Тогда Возврат "image/x-tga";
    ИначеЕсли тТип = "wmf" Тогда Возврат "image/x-wmf";
    ИначеЕсли тТип = "xbm" Тогда Возврат "image/x-xbitmap";
    ИначеЕсли тТип = "xcf" Тогда Возврат "image/x-xcf";
    ИначеЕсли тТип = "xpm" Тогда Возврат "image/x-xpixmap";
    ИначеЕсли тТип = "xwd" Тогда Возврат "image/x-xwindowdump";

    // application
    ИначеЕсли тТип = "123" Тогда Возврат "application/vnd.lotus-1-2-3";
    ИначеЕсли тТип = "a" Тогда Возврат "application/x-archive";
    ИначеЕсли тТип = "abw" Тогда Возврат "application/x-abiword";
    ИначеЕсли тТип = "afm" Тогда Возврат "application/x-font-afm";
    ИначеЕсли тТип = "ai" Тогда Возврат "application/illustrator";
    ИначеЕсли тТип = "al" Тогда Возврат "application/x-perl";
    ИначеЕсли тТип = "arj" Тогда Возврат "application/x-arj";
    ИначеЕсли тТип = "as" Тогда Возврат "application/x-applix-spreadsheet";
    ИначеЕсли тТип = "aw" Тогда Возврат "application/x-applix-word";
    ИначеЕсли тТип = "bak" Тогда Возврат "application/x-trash";
    ИначеЕсли тТип = "bcpio" Тогда Возврат "application/x-bcpio";
    ИначеЕсли тТип = "bdf" Тогда Возврат "application/x-font-bdf";
    ИначеЕсли тТип = "bin" Тогда Возврат "application/octet-stream";
    ИначеЕсли тТип = "blend" ИЛИ тТип = "blender" Тогда Возврат "application/x-blender";
    ИначеЕсли тТип = "bz" ИЛИ тТип = "bz2" Тогда Возврат "application/x-bzip";
    ИначеЕсли тТип = "der" ИЛИ тТип = "pem" ИЛИ тТип = "cer" ИЛИ тТип = "cert" 
        ИЛИ тТип = "crt" Тогда Возврат "application/x-x509-ca-cert";
    ИначеЕсли тТип = "cdf" Тогда Возврат "application/x-netcdf";
    ИначеЕсли тТип = "cdr" Тогда Возврат "application/vnd.corel-draw";
    ИначеЕсли тТип = "cgi" Тогда Возврат "application/x-cgi";
    ИначеЕсли тТип = "chrt" Тогда Возврат "application/x-kchart";
    ИначеЕсли тТип = "class" Тогда Возврат "application/x-java";
    ИначеЕсли тТип = "cpio" Тогда Возврат "application/x-cpio";
    ИначеЕсли тТип = "csh" Тогда Возврат "application/x-shellscript";
    ИначеЕсли тТип = "asp" Тогда Возврат "application/x-asp";
    ИначеЕсли тТип = "dbf" Тогда Возврат "application/x-dbase";
    ИначеЕсли тТип = "dc" Тогда Возврат "application/x-dc-rom";
    ИначеЕсли тТип = "deb" Тогда Возврат "application/x-deb";
    ИначеЕсли тТип = "desktop" Тогда Возврат "application/x-desktop";
    ИначеЕсли тТип = "dia" Тогда Возврат "application/x-dia-diagram";
    ИначеЕсли тТип = "dvi" Тогда Возврат "application/x-dvi";
    ИначеЕсли тТип = "egon" Тогда Возврат "application/x-egon";
    ИначеЕсли тТип = "etheme" Тогда Возврат "application/x-e-theme";
    ИначеЕсли тТип = "exe" Тогда Возврат "application/x-ms-dos-executable";
    ИначеЕсли тТип = "ez" Тогда Возврат "application/andrew-inset";
    ИначеЕсли тТип = "gb" Тогда Возврат "application/x-gameboy-rom";
    ИначеЕсли тТип = "gen" Тогда Возврат "application/x-genesis-rom";
    ИначеЕсли тТип = "gg" Тогда Возврат "application/x-sms-rom";
    ИначеЕсли тТип = "glade" Тогда Возврат "application/x-glade";
    ИначеЕсли тТип = "gmo" Тогда Возврат "application/x-gettext-translation";
    ИначеЕсли тТип = "gnc" ИЛИ тТип = "gnucash" Тогда Возврат "application/x-gnucash";
    ИначеЕсли тТип = "gnumeric" Тогда Возврат "application/x-gnumeric";
    ИначеЕсли тТип = "gra" Тогда Возврат "application/x-graphite";
    ИначеЕсли тТип = "gsf" Тогда Возврат "application/x-font-type1";
    ИначеЕсли тТип = "gtar" Тогда Возврат "application/x-gtar";
    ИначеЕсли тТип = "gz" Тогда Возврат "application/x-gzip";
    ИначеЕсли тТип = "iso" Тогда Возврат "application/x-cd-image";
    ИначеЕсли тТип = "jar" Тогда Возврат "application/x-jar";
    ИначеЕсли тТип = "jpr" ИЛИ тТип = "jpx" Тогда Возврат "application/x-jbuilder-project";
    ИначеЕсли тТип = "json" Тогда Возврат "application/json";
    ИначеЕсли тТип = "jsonld" Тогда Возврат "application/ld+json";
    ИначеЕсли тТип = "karbon" Тогда Возврат "application/x-karbon";
    ИначеЕсли тТип = "kdelnk" Тогда Возврат "application/x-desktop";
    ИначеЕсли тТип = "kfo" Тогда Возврат "application/x-kformula";
    ИначеЕсли тТип = "kil" Тогда Возврат "application/x-killustrator";
    ИначеЕсли тТип = "kon" Тогда Возврат "application/x-kontour";
    ИначеЕсли тТип = "kpm" Тогда Возврат "application/x-kpovmodeler";
    ИначеЕсли тТип = "kpr" ИЛИ тТип = "kpt" Тогда Возврат "application/x-kpresenter";
    ИначеЕсли тТип = "kra" Тогда Возврат "application/x-krita";
    ИначеЕсли тТип = "ksp" Тогда Возврат "application/x-kspread";
    ИначеЕсли тТип = "kud" Тогда Возврат "application/x-kugar";
    ИначеЕсли тТип = "kwd" ИЛИ тТип = "kwt" Тогда Возврат "application/x-kword";
    ИначеЕсли тТип = "la" Тогда Возврат "application/x-shared-library-la";
    ИначеЕсли тТип = "lha" Тогда Возврат "application/x-lha";
    ИначеЕсли тТип = "flw" Тогда Возврат "application/x-kivio";
    ИначеЕсли тТип = "hdf" Тогда Возврат "application/x-hdf";
    ИначеЕсли тТип = "hpgl" Тогда Возврат "application/vnd.hp-hpgl";
    ИначеЕсли тТип = "lhz" Тогда Возврат "application/x-lhz";
    ИначеЕсли тТип = "lyx" Тогда Возврат "application/x-lyx";
    ИначеЕсли тТип = "lzh" Тогда Возврат "application/x-lha";
    ИначеЕсли тТип = "lzo" Тогда Возврат "application/x-lzop";
    ИначеЕсли тТип = "man" Тогда Возврат "application/x-troff-man";
    ИначеЕсли тТип = "md" Тогда Возврат "application/x-genesis-rom";
    ИначеЕсли тТип = "mgp" Тогда Возврат "application/x-magicpoint";
    ИначеЕсли тТип = "mif" Тогда Возврат "application/x-mif";
    ИначеЕсли тТип = "mkv" Тогда Возврат "application/x-matroska";
    ИначеЕсли тТип = "msx" Тогда Возврат "application/x-msx-rom";
    ИначеЕсли тТип = "n64" Тогда Возврат "application/x-n64-rom";
    ИначеЕсли тТип = "nc" Тогда Возврат "application/x-netcdf";
    ИначеЕсли тТип = "nes" Тогда Возврат "application/x-nes-rom";
    ИначеЕсли тТип = "o" Тогда Возврат "application/x-object";
    ИначеЕсли тТип = "obj" Тогда Возврат "application/x-tgif";
    ИначеЕсли тТип = "oda" Тогда Возврат "application/oda";
    ИначеЕсли тТип = "ogg" Тогда Возврат "application/ogg";
    ИначеЕсли тТип = "old" Тогда Возврат "application/x-trash";
    ИначеЕсли тТип = "oleo" Тогда Возврат "application/x-oleo";
    ИначеЕсли тТип = "p12" Тогда Возврат "application/x-pkcs12";
    ИначеЕсли тТип = "p7s" Тогда Возврат "application/pkcs7-signature";
    ИначеЕсли тТип = "pcf" Тогда Возврат "application/x-font-pcf";
    ИначеЕсли тТип = "pcl" Тогда Возврат "application/vnd.hp-pcl";
    ИначеЕсли тТип = "pdb" Тогда Возврат "application/vnd.palm";
    ИначеЕсли тТип = "pdf" Тогда Возврат "application/pdf";
    ИначеЕсли тТип = "perl" Тогда Возврат "application/x-perl";
    ИначеЕсли тТип = "pfa" ИЛИ тТип = "pfb" Тогда Возврат "application/x-font-type1";
    ИначеЕсли тТип = "pfx" Тогда Возврат "application/x-pkcs12";
    ИначеЕсли тТип = "pgn" Тогда Возврат "application/x-chess-pgn";
    ИначеЕсли тТип = "pgp" Тогда Возврат "application/pgp";
    ИначеЕсли тТип = "php" ИЛИ тТип = "php3" ИЛИ тТип = "php4" Тогда Возврат "application/x-php";
    ИначеЕсли тТип = "pl" ИЛИ тТип = "pm" Тогда Возврат "application/x-perl";
    ИначеЕсли тТип = "ps" Тогда Возврат "application/postscript";
    ИначеЕсли тТип = "psf" Тогда Возврат "application/x-font-linux-psf";
    ИначеЕсли тТип = "pw" Тогда Возврат "application/x-pw";
    ИначеЕсли тТип = "py" Тогда Возврат "application/x-python";
    ИначеЕсли тТип = "pyc" ИЛИ тТип = "pyo" Тогда Возврат "application/x-python-bytecode";
    ИначеЕсли тТип = "qif" Тогда Возврат "application/x-qw";    
    ИначеЕсли тТип = "rej" Тогда Возврат "application/x-reject";
    ИначеЕсли тТип = "roff" Тогда Возврат "application/x-troff";
    ИначеЕсли тТип = "rpm" Тогда Возврат "application/x-rpm";
    ИначеЕсли тТип = "sam" Тогда Возврат "application/x-amipro";
    ИначеЕсли тТип = "sda" Тогда Возврат "application/vnd.stardivision.draw";
    ИначеЕсли тТип = "sdc" Тогда Возврат "application/vnd.stardivision.calc";
    ИначеЕсли тТип = "sdd" ИЛИ тТип = "sdp" Тогда Возврат "application/vnd.stardivision.impress";
    ИначеЕсли тТип = "sds" Тогда Возврат "application/vnd.stardivision.chart";
    ИначеЕсли тТип = "sdw" ИЛИ тТип = "sgl" Тогда Возврат "application/vnd.stardivision.writer";
    ИначеЕсли тТип = "sh" Тогда Возврат "application/x-shellscript";
    ИначеЕсли тТип = "shar" Тогда Возврат "application/x-shar";
    ИначеЕсли тТип = "siag" Тогда Возврат "application/x-siag";
    ИначеЕсли тТип = "sik" Тогда Возврат "application/x-trash";
    ИначеЕсли тТип = "smd" Тогда Возврат "application/vnd.stardivision.mail";
    ИначеЕсли тТип = "smf" Тогда Возврат "application/vnd.stardivision.math";
    ИначеЕсли тТип = "smi" ИЛИ тТип = "smil" ИЛИ тТип = "sml" Тогда Возврат "application/smil";
    ИначеЕсли тТип = "sms" Тогда Возврат "application/x-sms-rom";
    ИначеЕсли тТип = "so" Тогда Возврат "application/x-sharedlib";
    ИначеЕсли тТип = "spd" Тогда Возврат "application/x-font-speedo";
    ИначеЕсли тТип = "src" Тогда Возврат "application/x-wais-source";
    ИначеЕсли тТип = "stc" Тогда Возврат "application/vnd.sun.xml.calc.template";
    ИначеЕсли тТип = "std" Тогда Возврат "application/vnd.sun.xml.draw.template";
    ИначеЕсли тТип = "sti" Тогда Возврат "application/vnd.sun.xml.impress.template";
    ИначеЕсли тТип = "stw" Тогда Возврат "application/vnd.sun.xml.writer.template";
    ИначеЕсли тТип = "sv4cpio" Тогда Возврат "application/x-sv4cpio";
    ИначеЕсли тТип = "sv4crc" Тогда Возврат "application/x-sv4crc";
    ИначеЕсли тТип = "sxc" Тогда Возврат "application/vnd.sun.xml.calc";
    ИначеЕсли тТип = "sxd" Тогда Возврат "application/vnd.sun.xml.draw";
    ИначеЕсли тТип = "sxg" Тогда Возврат "application/vnd.sun.xml.writer.global";
    ИначеЕсли тТип = "sxi" Тогда Возврат "application/vnd.sun.xml.impress";
    ИначеЕсли тТип = "sxm" Тогда Возврат "application/vnd.sun.xml.math";
    ИначеЕсли тТип = "sxw" Тогда Возврат "application/vnd.sun.xml.writer";
    ИначеЕсли тТип = "t" Тогда Возврат "application/x-troff";
    ИначеЕсли тТип = "tar" Тогда Возврат "application/x-tar";
    ИначеЕсли тТип = "tcpalette" Тогда Возврат "application/x-terminal-color-palette";
    ИначеЕсли тТип = "tgz" Тогда Возврат "application/x-compressed-tar";
    ИначеЕсли тТип = "theme" Тогда Возврат "application/x-theme";
    ИначеЕсли тТип = "torrent" Тогда Возврат "application/x-bittorrent";
    ИначеЕсли тТип = "tr" Тогда Возврат "application/x-troff";
    ИначеЕсли тТип = "ts" Тогда Возврат "application/x-linguist";
    ИначеЕсли тТип = "tzo" Тогда Возврат "application/x-tzo";
    ИначеЕсли тТип = "ui" Тогда Возврат "application/x-designer";
    ИначеЕсли тТип = "ustar" Тогда Возврат "application/x-ustar";
    ИначеЕсли тТип = "vor" Тогда Возврат "application/vnd.stardivision.writer";
    ИначеЕсли тТип = "vpp" Тогда Возврат "application/x-extension-vpp";
    ИначеЕсли тТип = "wb1" ИЛИ тТип = "wb2" ИЛИ тТип = "wb3" Тогда Возврат "application/x-quattropro";
    ИначеЕсли тТип = "wk1" ИЛИ тТип = "wk3" ИЛИ тТип = "wk4" ИЛИ тТип = "wks" Тогда 
        Возврат "application/vnd.lotus-1-2-3";
    ИначеЕсли тТип = "wpd" Тогда Возврат "application/vnd.wordperfect";
    ИначеЕсли тТип = "wpg" Тогда Возврат "application/x-wpg";
    ИначеЕсли тТип = "wri" Тогда Возврат "application/x-mswrite";
    ИначеЕсли тТип = "xac" Тогда Возврат "application/x-gnucash";
    ИначеЕсли тТип = "xbel" Тогда Возврат "application/x-xbel";
    ИначеЕсли тТип = "xhtml" Тогда Возврат "application/xhtml+xml";
    ИначеЕсли тТип = "z" Тогда Возврат "application/x-compress";
    ИначеЕсли тТип = "zabw" Тогда Возврат "application/x-abiword";
    ИначеЕсли тТип = "zoo" Тогда Возврат "application/x-zoo"

    // Audio
    ИначеЕсли тТип = "669" Тогда Возврат "audio/x-mod";
    ИначеЕсли тТип = "ac3" Тогда Возврат "audio/ac3";
    ИначеЕсли тТип = "aif" Тогда Возврат "audio/x-aiff";
    ИначеЕсли тТип = "aifc" ИЛИ тТип = "aiff" Тогда Возврат "audio/x-aiff";
    ИначеЕсли тТип = "flac" Тогда Возврат "audio/x-flac";
    ИначеЕсли тТип = "it" Тогда Возврат "audio/x-it";
    ИначеЕсли тТип = "mod" ИЛИ тТип = "m15" ИЛИ тТип = "mtm" Тогда Возврат "audio/x-mod";
    ИначеЕсли тТип = "m3u" Тогда Возврат "audio/x-mpegurl";
    ИначеЕсли тТип = "mid" ИЛИ тТип = "midi" Тогда Возврат "audio/midi";
    ИначеЕсли тТип = "mp3" Тогда Возврат "audio/x-mp3";
    ИначеЕсли тТип = "au" Тогда Возврат "audio/basic";
    ИначеЕсли тТип = "pls" Тогда Возврат "audio/x-scpls";
    ИначеЕсли тТип = "psid" Тогда Возврат "audio/prs.sid";
    ИначеЕсли тТип = "ra" ИЛИ тТип = "ram" ИЛИ тТип = "rm" Тогда Возврат "audio/x-pn-realaudio";
    ИначеЕсли тТип = "s3m" Тогда Возврат "audio/x-s3m";
    ИначеЕсли тТип = "sid" Тогда Возврат "audio/prs.sid";
    ИначеЕсли тТип = "snd" Тогда Возврат "audio/basic";
    ИначеЕсли тТип = "stm" Тогда Возврат "audio/x-stm";
    ИначеЕсли тТип = "ult" ИЛИ тТип = "uni" Тогда Возврат "audio/x-mod";
    ИначеЕсли тТип = "voc" Тогда Возврат "audio/x-voc";
    ИначеЕсли тТип = "xi" Тогда Возврат "audio/x-xi";
    ИначеЕсли тТип = "xm" Тогда Возврат "audio/x-xm";

    // Video
    ИначеЕсли тТип = "asf" ИЛИ тТип = "asx" Тогда Возврат "video/x-ms-asf";
    ИначеЕсли тТип = "avi" Тогда Возврат "video/x-msvideo";
    ИначеЕсли тТип = "dat" Тогда Возврат "video/mpeg";
    ИначеЕсли тТип = "flc" ИЛИ тТип = "fli" Тогда Возврат "video/x-flic";
    ИначеЕсли тТип = "mng" Тогда Возврат "video/x-mng";
    ИначеЕсли тТип = "moov" ИЛИ тТип = "mov" Тогда Возврат "video/quicktime";
    ИначеЕсли тТип = "movie" Тогда Возврат "video/x-sgi-movie";
    ИначеЕсли тТип = "mpeg" ИЛИ тТип = "mp2" ИЛИ тТип = "mpe" ИЛИ тТип = "mpg" Тогда Возврат "video/mpeg";
    ИначеЕсли тТип = "nsv" Тогда Возврат "video/x-nsv";
    ИначеЕсли тТип = "qt" ИЛИ тТип = "qtvr" Тогда Возврат "video/quicktime";
    ИначеЕсли тТип = "vob" Тогда Возврат "video/mpeg";
    ИначеЕсли тТип = "wmv" Тогда Возврат "video/x-ms-wmv";

    // Text
    ИначеЕсли тТип = "adb" ИЛИ тТип = "ads" Тогда Возврат "text/x-adasrc";
    ИначеЕсли тТип = "asc" Тогда Возврат "text/plain";
    ИначеЕсли тТип = "bib" Тогда Возврат "text/x-bibtex";
    ИначеЕсли тТип = "c" Тогда Возврат "text/x-csrc";
    ИначеЕсли тТип = "cc" ИЛИ тТип = "c++" Тогда Возврат "text/x-c++src";
    ИначеЕсли тТип = "cls" Тогда Возврат "text/x-tex";
    ИначеЕсли тТип = "cpp" Тогда Возврат "text/x-c++src";
    ИначеЕсли тТип = "cs" Тогда Возврат "text/x-csharp";
    ИначеЕсли тТип = "csv" Тогда Возврат "text/x-comma-separated-values";
    ИначеЕсли тТип = "cxx" Тогда Возврат "text/x-c++src";
    ИначеЕсли тТип = "dcl" Тогда Возврат "text/x-dcl";
    ИначеЕсли тТип = "diff" Тогда Возврат "text/x-patch";
    ИначеЕсли тТип = "dsl" Тогда Возврат "text/x-dsl";
    ИначеЕсли тТип = "dtd" Тогда Возврат "text/x-dtd";
    ИначеЕсли тТип = "el" Тогда Возврат "text/x-emacs-lisp";
    ИначеЕсли тТип = "etx" Тогда Возврат "text/x-setext";
    ИначеЕсли тТип = "f" Тогда Возврат "text/x-fortran";
    ИначеЕсли тТип = "fo" Тогда Возврат "text/x-xslfo";
    ИначеЕсли тТип = "gcrd" Тогда Возврат "text/x-vcard";
    ИначеЕсли тТип = "h" Тогда Возврат "text/x-chdr";
    ИначеЕсли тТип = "h++" Тогда Возврат "text/x-chdr";
    ИначеЕсли тТип = "hh" Тогда Возврат "text/x-c++hdr";
    ИначеЕсли тТип = "hp" Тогда Возврат "text/x-chdr";
    ИначеЕсли тТип = "hs" Тогда Возврат "text/x-haskell";
    ИначеЕсли тТип = "ics" Тогда Возврат "text/calendar";
    ИначеЕсли тТип = "idl" Тогда Возврат "text/x-idl";
    ИначеЕсли тТип = "java" Тогда Возврат "text/x-java";
    ИначеЕсли тТип = "lhs" Тогда Возврат "text/x-literate-haskell";
    ИначеЕсли тТип = "log" Тогда Возврат "text/x-log";
    ИначеЕсли тТип = "ltx" Тогда Возврат "text/x-tex";
    ИначеЕсли тТип = "m" Тогда Возврат "text/x-objcsrc";
    ИначеЕсли тТип = "me" Тогда Возврат "text/x-troff-me";
    ИначеЕсли тТип = "mm" Тогда Возврат "text/x-troff-mm";
    ИначеЕсли тТип = "mml" Тогда Возврат "text/mathml";
    ИначеЕсли тТип = "moc" Тогда Возврат "text/x-moc";
    ИначеЕсли тТип = "ms" Тогда Возврат "text/x-troff-ms";
    ИначеЕсли тТип = "p" Тогда Возврат "text/x-pascal";
    ИначеЕсли тТип = "pas" Тогда Возврат "text/x-pascal";
    ИначеЕсли тТип = "patch" Тогда Возврат "text/x-patch";
    ИначеЕсли тТип = "po" Тогда Возврат "text/x-gettext-translation";
    ИначеЕсли тТип = "pot" Тогда Возврат "text/x-gettext-translation-template";
    ИначеЕсли тТип = "rdf" Тогда Возврат "text/rdf";
    ИначеЕсли тТип = "rss" Тогда Возврат "text/rss";
    ИначеЕсли тТип = "rtx" Тогда Возврат "text/richtext";
    ИначеЕсли тТип = "scm" Тогда Возврат "text/x-scheme";
    ИначеЕсли тТип = "sgm" Тогда Возврат "text/sgml";
    ИначеЕсли тТип = "sgml" Тогда Возврат "text/sgml";
    ИначеЕсли тТип = "slk" Тогда Возврат "text/spreadsheet";
    ИначеЕсли тТип = "sql" Тогда Возврат "text/x-sql";
    ИначеЕсли тТип = "sty" Тогда Возврат "text/x-tex";
    ИначеЕсли тТип = "sylk" Тогда Возврат "text/spreadsheet";
    ИначеЕсли тТип = "tcl" Тогда Возврат "text/x-tcl";
    ИначеЕсли тТип = "tex" Тогда Возврат "text/x-tex";
    ИначеЕсли тТип = "texi" Тогда Возврат "text/x-texinfo";
    ИначеЕсли тТип = "texinfo" Тогда Возврат "text/x-texinfo";
    ИначеЕсли тТип = "tk" Тогда Возврат "text/x-tcl";
    ИначеЕсли тТип = "tsv" Тогда Возврат "text/tab-separated-values";
    ИначеЕсли тТип = "uil" Тогда Возврат "text/x-uil";
    ИначеЕсли тТип = "uri" Тогда Возврат "text/x-uri";
    ИначеЕсли тТип = "url" Тогда Возврат "text/x-uri";
    ИначеЕсли тТип = "vcf" Тогда Возврат "text/x-vcalendar";
    ИначеЕсли тТип = "vcs" Тогда Возврат "text/x-vcalendar";
    ИначеЕсли тТип = "vct" Тогда Возврат "text/x-vcard";
    ИначеЕсли тТип = "wml" Тогда Возврат "text/vnd.wap.wml";
    ИначеЕсли тТип = "wrl" Тогда Возврат "model/vrml";
    ИначеЕсли тТип = "xmi" Тогда Возврат "text/x-xmi";
    ИначеЕсли тТип = "xsl" Тогда Возврат "text/x-xslt";
    ИначеЕсли тТип = "xslfo" Тогда Возврат "text/x-xslfo";
    ИначеЕсли тТип = "xslt" Тогда Возврат "text/x-xslt";
    Иначе
        Возврат "application/unknown";
    КонецЕсли;
	
КонецФункции

// Возвращает картинку по переданному источнику (Строка с base64, Картинка) в формате base64 для Web.
//
// Параметры:
// 	Источник - Строка, Картинка - исходная картинка в каком-то формате.
//
// Возвращаемое значение: 
// 	Строка - картинка результат в формате base64.
//
Функция КартинкаImgBase64(Знач Источник) Экспорт
	
	Если ТипЗнч(Источник) = Тип("Картинка") Тогда		
		Возврат "data:image/png;base64," + Base64Строка(Источник.ПолучитьДвоичныеДанные());
	ИначеЕсли ТипЗнч(Источник) = Тип("Строка") Тогда
		Если СтрНайти(Источник, "base64") > 0 тогда
			Возврат Источник;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Источник) = Тип("ДвоичныеДанные") Тогда
		Возврат "data:image/png;base64," + Base64Строка(Источник);
	КонецЕсли;

	ПустаяКартинка = Новый Картинка();
	Возврат "data:image/png;base64," + Base64Строка(ПустаяКартинка.ПолучитьДвоичныеДанные());	
    
КонецФункции

#КонецОбласти
