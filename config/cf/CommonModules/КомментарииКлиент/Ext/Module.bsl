////////////////////////////////////////////////////////////////////////////////
// Работа с комментариями (на клиенте).
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывает внешнюю ссылку в комментарии.
//
// Параметры:
//	АдресСсылки - Строка - адрес открываемой ссылки.
//
Процедура ОткрытьВнешнююСсылку(АдресСсылки) Экспорт
	
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(КодВозвратаДиалога.Да		, НСтр("ru = 'Да (в браузере)'"));
	СписокКнопок.Добавить(КодВозвратаДиалога.Отмена	, НСтр("ru = 'Отмена (не открывать)'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьВнешнююСсылкуВыполнить", ЭтотОбъект, 
		Новый Структура("Адрес", АдресСсылки));
		
	ПоказатьВопрос(ОписаниеОповещения,
		НСтр("ru='Открыть внешнюю ссылку в окне браузера по умолчанию?
		|" + АдресСсылки + "'"),
		СписокКнопок,
		,
		КодВозвратаДиалога.Отмена,
		,
		КодВозвратаДиалога.Отмена);
	
КонецПроцедуры
	
Процедура ОткрытьВнешнююСсылкуВыполнить(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗапуститьПриложение(ДопПараметры.Адрес);
	КонецЕсли;
	
КонецПроцедуры

Процедура КомментарииПолеHTMLПриНажатии(ДанныеСобытия, ФормаОписаниеОповещения, Форма, 
	ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрСсылки = ДанныеСобытия.Href;
	Если Лев(ПараметрСсылки, 7) = "mailto:" Тогда
		НавигационнаяСсылка_mailto(ПараметрСсылки);
	ИначеЕсли Лев(ПараметрСсылки, 9) = "kb://api/" Тогда
		НавигационнаяСсылка_kbapi(ПараметрСсылки, ФормаОписаниеОповещения, Форма, ДополнительныеПараметры);
	ИначеЕсли Лев(ПараметрСсылки, 6) = "v8doc:" Тогда 
		НавигационнаяСсылкаПоля = Сред(ПараметрСсылки, 7);
		ПерейтиПоНавигационнойСсылке(НавигационнаяСсылкаПоля);		
	ИначеЕсли СтрНайти(ПараметрСсылки, "e1cib")> 0 ИЛИ СтрНайти(ПараметрСсылки, "e1c://")> 0 Тогда		
		ПерейтиПоНавигационнойСсылке(ПараметрСсылки);
	ИначеЕсли Лев(ПараметрСсылки, 4) = "http" Тогда		
		ОткрытьВнешнююСсылку(ДанныеСобытия.Href);
	КонецЕсли;
	
КонецПроцедуры

Процедура НавигационнаяСсылка_mailto(ПараметрСсылки) Экспорт
	
	ПочтовыйАдрес  = Сред(ПараметрСсылки, 8);	
	МассивКонтакты = КомментарииКлиентСервер.ПолучитьКонтактыПоEMail(ПочтовыйАдрес, "");
	ВзаимодействияКлиент.СоздатьНовоеВзаимодействие(
		"ЭлектронноеПисьмоИсходящее",
		Новый Структура("ЗначенияЗаполнения", Новый Структура("Контакт", МассивКонтакты[0].Контакт)));
		
КонецПроцедуры
	
Процедура НавигационнаяСсылка_kbapi(ПараметрСсылки, ФормаОписаниеОповещения, Форма, ДополнительныеПараметры)
	
	АдресСтраницы	= ПараметрСсылки;
	ДанныеСсылки	= БазаЗнанийAPIКлиентСервер.РазобратьАдресСсылки(АдресСтраницы);
	
	Если ДанныеСсылки.Команда = "create" Тогда
		Если ДополнительныеПараметры <> Неопределено Тогда
			Если ДополнительныеПараметры.Свойство("ТребуетсяЗапись") И ДополнительныеПараметры.ТребуетсяЗапись Тогда 
				СтруктураРезультата = Новый Структура;
				СтруктураРезультата.Вставить("ТребуетсяЗапись", ИСТИНА);
				СтруктураРезультата.Вставить("ДанныеСсылки",    ДанныеСсылки);
				ВыполнитьОбработкуОповещения(ФормаОписаниеОповещения, СтруктураРезультата);
				Возврат;
			КонецЕсли;
		КонецЕсли;	
		ОбработатьАдресСсылки_create(ДанныеСсылки, ФормаОписаниеОповещения, Форма);
	ИначеЕсли ДанныеСсылки.Команда = "refresh" Тогда
		ВыполнитьОбработкуОповещения(ФормаОписаниеОповещения);
	ИначеЕсли ДанныеСсылки.Команда = "openfile" Тогда
		ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(
			КомментарииСервер.КомментарийВложениеПоID(ДанныеСсылки.Параметры.id), Форма.УникальныйИдентификатор);
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
	Иначе 
		ОбщегоНазначенияКлиент.СообщитьПользователю(ПараметрСсылки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьАдресСсылки_create(Знач ДанныеСсылки, ФормаОписаниеОповещения, Форма) Экспорт
	
	ПараметрыСсылки = ДанныеСсылки.Параметры;
	Если НЕ ПараметрыСсылки.Свойство("name") Тогда
		Возврат;
	КонецЕсли;
		
	ОбъектФормы = Форма.Объект;	
	
	Если ПараметрыСсылки.name = "comment" Тогда
		ИДКомментарий	= ?(ПараметрыСсылки.Свойство("id"),      ПараметрыСсылки.id, "");
		ИДАвтор			= ?(ПараметрыСсылки.Свойство("user"),    ПараметрыСсылки.user, "");
		
		КомментарийСсылка	= КомментарииСервер.ПолучитьСсылкуПоИдентификатору("Комментарии", ИДКомментарий);
		ПользовательСсылка	= КомментарииСервер.ПолучитьСсылкуПоИдентификатору("Пользователи", ИДАвтор);
		
		ЗначенияЗаполнения	= Новый Структура;
		ЗначенияЗаполнения.Вставить("ВладелецКомментария"	, ОбъектФормы.Ссылка);
		ЗначенияЗаполнения.Вставить("Автор"					, ПользовательСсылка);
		
		ПараметрыФормы		= Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ПараметрыФормы.Вставить("Родитель"			, КомментарийСсылка);		
	Иначе 
		Возврат;
	КонецЕсли;
		
	ОткрытьФорму("Справочник.Комментарии.Форма.ФормаРедактирования", ПараметрыФормы, ЭтотОбъект, 
		Новый УникальныйИдентификатор, , , ФормаОписаниеОповещения, РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти