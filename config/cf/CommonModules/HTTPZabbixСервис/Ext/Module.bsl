
// Считывает тело запроса в структуру данных.
// 
// Параметры:
// 	Тело - Строка - тело HTTP запроса.
// 
// Возвращаемое значение:
//	Структура - Структура - структура данных.
//
Функция ПрочитатьТелоЗапроса(Тело)
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);
	Структура = ПрочитатьJSON(ЧтениеJSON);	
	ЧтениеJSON.Закрыть();                          		
	Возврат Структура;
	
КонецФункции

// Записывает структуру данных в JSON строку.
// 
// Параметры:
// 	Структура - Структура - структура данных.
// 
// Возвращаемое значение:
//	СтрокаОтвета - Строка - строка JSON.
//
Функция ЗаписатьДанныеВJsonСтроку(Структура)
	
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJson, Структура);
	СтрокаОтвета = ЗаписьJson.Закрыть();
	ЗаписьJson.Закрыть();
	Возврат СтрокаОтвета;
	
КонецФункции	

// Создание HTTP Ответа.
// 
// Параметры:
// 	СтрокаОтвета - Строка - Строка Json.
// 
// Возвращаемое значение:
//	HTTPСервисОтвет - ответ HTTP.
//
Функция СоздатьОтвет(СтрокаОтвета)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(СтрокаОтвета, КодировкаТекста.UTF8);
	Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
	Возврат Ответ;
	
КонецФункции 

// Обработка HTTP Запроса.
// 
// Параметры:
// 	Запрос - HTTPСервисЗапрос - запрос.
// 
// Возвращаемое значение:
//	HTTPСервисОтвет - ответ HTTP.
//
Функция ОбработкаЗапроса (Запрос, HTTPМетод) Экспорт
	
	ТелоСтрока = Запрос.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	СтруктураЗапроса = ПрочитатьТелоЗапроса(ТелоСтрока);	
	
	Если HTTPМетод = "GET" Тогда
		СтруктураОтвета = ВыполнитьGetЗапрос(СтруктураЗапроса);
	ИначеЕсли HTTPМетод = "POST" Тогда
	    СтруктураОтвета = ВыполнитьPostЗапрос(СтруктураЗапроса);
	КонецЕсли;
	
	СтрокаОтвета = ЗаписатьДанныеВJsonСтроку(СтруктураОтвета);
	Возврат СоздатьОтвет(СтрокаОтвета);
	
КонецФункции

// Выполнение GET Запроса.
// 
// Параметры:
// 	СтруктураЗапроса - Структура - структура запроса. Содержит данные HTTP запроса.
// 
// Возвращаемое значение:
// 	СтруктураОтвета - Структура - структура ответа. Содержит данные для формирования HTTP ответа.
//
Функция ВыполнитьGetЗапрос(СтруктураЗапроса) 
	
	СтруктураОтвета = Новый Структура;
	
	Для Каждого ЭлементСтруктуры ИЗ СтруктураЗапроса Цикл	
		Ключ = ЭлементСтруктуры.Ключ;
		ДополнительныеПараметры = ЭлементСтруктуры.Значение;
		СтруктураОтветаПоМетрике = Новый Структура;
		МетрикаСсылка = Справочники.МетрикиZabbix.НайтиПоРеквизиту("КлючМетрики", Ключ);
		
		Если МетрикаСсылка.Пустая() Тогда
			СтруктураОтвета.Вставить(Ключ, "Object not found");
			Продолжить;
		КонецЕсли;
		
		ОбъектМетрика = МетрикаСсылка.ПолучитьОбъект();
		СтруктураОтветаПоМетрике = ОбъектМетрика.ВыполнитьЗапрос(ДополнительныеПараметры);
		СтруктураОтвета.Вставить(Ключ, СтруктураОтветаПоМетрике);	
	КонецЦикла;
	
	Возврат СтруктураОтвета;
	
КонецФункции

// Выполнение POST Запроса.
// 
// Параметры:
// 	СтруктураЗапроса - Структура - структура запроса. Содержит данные HTTP запроса.
// 
// Возвращаемое значение:
// 	СтруктураОтвета - Структура - структура ответа. Содержит данные для формирования HTTP ответа.
//
Функция ВыполнитьPostЗапрос(СтруктураЗапроса)
	
	СтруктураОтвета = Новый Структура;
	Для Каждого ЭлементСтруктуры Из СтруктураЗапроса Цикл
		Ключ = ЭлементСтруктуры.Ключ;
		ДополнительныеПараметры = ЭлементСтруктуры.Значение;
		ДействиеСсылка = Справочники.ДействияZabbix.НайтиПоРеквизиту("КлючДействия", Ключ);
		
		Если ДействиеСсылка.Пустая() Тогда
			СтруктураОтвета.Вставить(Ключ, "Object not found");
			Продолжить;
		КонецЕсли;
		
		ОбъектДействие = ДействиеСсылка.ПолучитьОбъект();
		РезультатДействия = ОбъектДействие.ВыполнитьДействие(ДополнительныеПараметры);
		СтруктураОтвета.Вставить(Ключ, РезультатДействия);
	КонецЦикла;
	Возврат СтруктураОтвета;
	
КонецФункции

