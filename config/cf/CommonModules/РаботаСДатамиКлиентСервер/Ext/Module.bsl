////////////////////////////////////////////////////////////////////////////////
//
// Модуль для работы с датой и временем.
// 
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Преобразует текст в дату при условии наличия форматной строки.
// Авторство: ildarovich
//
// Параметры:
//	ФорматДаты - Строка - формат даты строки.
//	Дано - Дата - исходная дата.
//	Ошибка - Булево - если в процессе конвертации возникает ошибка, то Истина.
//
// Возвращаемое значение:
//	Дата - дата
// 
Функция СтрокаВДату(Знач ФорматДаты, Знач Дано, Ошибка = Ложь) Экспорт
	 
    Попытка 
        ё = Формат('00010101', "ДФ=" + ФорматДаты) // - необязательная проверка первого правильности параметра 
    Исключение 
        Ошибка = Истина; 
        Возврат '00010101' 
    КонецПопытки; 
    Ч = Новый Соответствие; 
    Для ё = 1 По СтрДлина(ФорматДаты) + 7 Цикл 
        Ч[Сред(ФорматДаты + "dMyHhms", ё, 1)] = 0    // - инициализация частей даты 
    КонецЦикла; 
    Для ё = 1 По 12 Цикл 
        Дано = СтрЗаменить(Дано, Формат(Дата(1, ё, 1), "ДФ=MMММ"), Формат(ё, "ЧЦ=4; ЧВН=")); // - замена названий месяцев числами 
        Дано = СтрЗаменить(Дано, Формат(Дата(1, ё, 1), "ДФ=MMМ" ), Формат(ё, "ЧЦ=3; ЧВН=")) 
    КонецЦикла; 
    Для ё = 1 По СтрДлина(ФорматДаты) Цикл 
        Ч[Сред(ФорматДаты, ё, 1)] = 10 * Ч[Сред(ФорматДаты, ё, 1)] + Найти("123456789", Сред(Дано, ё, 1)); // - накопление частей даты 
        Ошибка = Ошибка ИЛИ Найти("dMyHhms", Сред(ФорматДаты, ё, 1)) И НЕ Найти("0123456789", Сред(Дано, ё, 1)) // - необязательная проверка на цифры 
    КонецЦикла; 
    Ч["y"] = Ч["y"] + ?(Ч["y"] < 50, 2000, ?(Ч["y"] < 100, 1900, 0)); // - дополнение двух цифр года до четырех 
    Попытка 
        Возврат Дата(Ч["y"], Ч["M"], Ч["d"], Ч["H"] + Ч["h"], Ч["m"], Ч["s"]) 
    Исключение 
        Ошибка = Истина; 
        Возврат '00010101' 
    КонецПопытки
     
КонецФункции

// Добавляет/отнимает к/от даты необходимое количество год, квартал, месяц, неделю, день, час, минут, секунд
// Авторство: ildarovich
//
// Параметры:
//	Дата1 - Дата - Исходная дата
//	Количество - Число - сколько прибаляем/отнимаем
//	Период - Строка - одно из значений: Год, Квартал, Месяц, Неделя, День, Час, Минута, Секунда
//
// Возвращаемое значение:
//	Дата - результат добавления/отнимания.
//
Функция ДобавитьКДате(Знач Дата1, Знач Количество, Знач Период) Экспорт
	
    Шаг = Новый Структура("Год, Квартал, Месяц, Неделя, День, Час, Минута, Секунда", 
    	12, 3, 1, -604800, -86400, -3600, -60, -1);
    Возврат ?(Шаг[Период] > 0, ДобавитьМесяц(Дата1, Количество * Шаг[Период]), Дата1 - Количество * Шаг[Период]);
    
КонецФункции

// Выполняет разность двух дат и возвращает
// Авторство: ildarovich
//
// Параметры:
//	Дата1 - Дата - дату котороую отнимаем.
//	Дата2 - Дата - дата из которой отнимаем.
//	Период - Строка - одно из значений: Год, Квартал, Месяц, Неделя, День, Час, Минута, Секунда
//
// Возвращаемое значение:
//	Дата - результат добавления/отнимания.
//
Функция РазностьДат(Знач Дата1, Знач Дата2, Знач Период) Экспорт
	
    Шаг = Новый Структура("Год, Квартал, Месяц, Неделя, День, Час, Минута, Секунда", 
    	12, 3, 1, -604800, -86400, -3600, -60, -1);
    Возврат Цел(?(Шаг[Период] > 0, Год(Дата2) * 12 + Месяц(Дата2) - 1, '00010101' - Дата2) / Шаг[Период]) 
          - Цел(?(Шаг[Период] > 0, Год(Дата1) * 12 + Месяц(Дата1) - 1, '00010101' - Дата1) / Шаг[Период]);
          
КонецФункции

// Возвращает дату в виде строки: Сегодня, Завтра, Вчера, + 5 дн., - 5 дн., 01.12.20
//
// Параметры:
//	Дата - Дата - исходная дата.
//	ИспользоватьВремя - Булево - при преведении даты использовать время в строке.
//
// Возвращаемое значение:
//	Строка - представление даты.
//
Функция ПредставлениеДаты(Знач Дата, Знач ИспользоватьВремя) Экспорт

	// Пустые даты игнорируем.
	Если Дата = Дата(1, 1, 1) Тогда
		Возврат "";
	КонецЕсли;
		
	ТекДата = ТекущаяДата();
	Если НачалоДня(ТекДата) = НачалоДня(Дата) Тогда
		Возврат ?(ИспользоватьВремя = Истина, Формат(Дата, "ДФ=HH:mm"), НСтр("ru = 'Сегодня'"));
	ИначеЕсли НачалоДня(Дата) = НачалоДня(ТекДата) + 86400 Тогда
		Возврат НСтр("ru = 'Завтра'") + ?(ИспользоватьВремя = Истина, " " + Формат(Дата, "ДФ=HH:mm"), "");
	ИначеЕсли НачалоДня(Дата) = НачалоДня(ТекДата) - 86400 Тогда
		Возврат НСтр("ru = 'Вчера'") + ?(ИспользоватьВремя = Истина, " " + Формат(Дата, "ДФ=HH:mm"), "");
	ИначеЕсли Дата < ДобавитьМесяц(ТекДата, 1) И ТекДата < Дата Тогда
		Возврат СтрШаблон(НСтр("ru = '+ %1 дн.'"), Цел(НачалоДня(Дата) - НачалоДня(ТекДата)) / 86400);
	ИначеЕсли Дата - ДобавитьМесяц(ТекДата, -1) >= 30 * 86400 И Дата < ТекДата Тогда
		Возврат СтрШаблон(НСтр("ru = '- %1 дн.'"), Цел(НачалоДня(Дата) - НачалоДня(ТекДата)) / 86400);
	Иначе
		Возврат Формат(Дата, "ДФ=dd.MM.yy");
	КонецЕсли;		
	
КонецФункции

#КонецОбласти