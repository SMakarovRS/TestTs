
#Область ПрограммныйИнтерфейс

#Область Общие

// По переданному объекту возвращает представление периода.
//
// Параметры:
//	ОбъектПериода - СправочникОбъект.ПериодыПервичныхДокументов - исходный объект.
//
// Возвращаемое значение:
//	Строка - представление периода.
//
Функция АвтонаименованиеПериода(Знач ОбъектПериода) Экспорт
	
	Результат = "";
	
	Если ЗначениеЗаполнено(ОбъектПериода.ВидПериода) Тогда
		Если ОбъектПериода.ВидПериода = Перечисления.ВидПериодаПервичногоДокумента.Год Тогда
			Результат = Формат(ОбъектПериода.Год, "ЧГ=");
			
		ИначеЕсли ОбъектПериода.ВидПериода = Перечисления.ВидПериодаПервичногоДокумента.Разовый Тогда
			Результат = Строка(Перечисления.ВидПериодаПервичногоДокумента.Разовый);
			
		Иначе
			Результат = Строка(ОбъектПериода.ЗначениеПериода) + " " + Формат(ОбъектПериода.Год, "ЧГ=");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область РегламентныеЗадания

Процедура СозданиеПериодическихПервичныхДокументов() Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПервичныеДокументы") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ПервичныеДокументыСозданиеПериодическихДокументов);
	
	УстановитьПривилегированныйРежим(Истина);	
	
	#Область РасчетПериодов
	// 1.Получаем текущие периоды для каждой периодичности.
	мТекущаяДата		= ТекущаяДатаСеанса();
		
	// Ежемесячная периодичность.
	мВидПериодаМесяц	= Перечисления.ВидПериодаПервичногоДокумента.Месяц;
	// пример: Перечисления.ПериодыПервичныхДокументов.Ноябрь. 
	мЗначениеМесяц		= Перечисления.ПериодыПервичныхДокументов[Месяц(мТекущаяДата) - 1];	
	
	// Ежеквартальная периодичность.
	мВидПериодаКвартал	= Перечисления.ВидПериодаПервичногоДокумента.Квартал;
	// пример: Перечисления.ПериодыПервичныхДокументов.ЧетвертыйКвартал. 
	мЗначениеКвартал	= Перечисления.ПериодыПервичныхДокументов[Квартал(мТекущаяДата) + 11];
	
	// Ежегодная периодичность.
	мВидПериодаГод		= Перечисления.ВидПериодаПервичногоДокумента.Год;
	// пример: 2019.
	мЗначениеГод		= Год(мТекущаяДата);
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыПервичныхДокументов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПериодыПервичныхДокументов КАК ПериодыПервичныхДокументов
		|ГДЕ
		|	ПериодыПервичныхДокументов.ВидПериода = &ВидПериодаМесяц
		|	И ПериодыПервичныхДокументов.ЗначениеПериода = &ЗначениеПериодаМесяц
		|	И ПериодыПервичныхДокументов.Год = &Год
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыПервичныхДокументов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПериодыПервичныхДокументов КАК ПериодыПервичныхДокументов
		|ГДЕ
		|	ПериодыПервичныхДокументов.ВидПериода = &ВидПериодаКвартал
		|	И ПериодыПервичныхДокументов.ЗначениеПериода = &ЗначениеПериодаКвартал
		|	И ПериодыПервичныхДокументов.Год = &Год
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыПервичныхДокументов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПериодыПервичныхДокументов КАК ПериодыПервичныхДокументов
		|ГДЕ
		|	ПериодыПервичныхДокументов.ВидПериода = &ВидПериодаГод
		|	И ПериодыПервичныхДокументов.Год = &Год";
	
	Запрос.УстановитьПараметр("ВидПериодаГод", мВидПериодаГод);
	Запрос.УстановитьПараметр("ВидПериодаКвартал", мВидПериодаКвартал);
	Запрос.УстановитьПараметр("ВидПериодаМесяц", мВидПериодаМесяц);
	Запрос.УстановитьПараметр("Год", мЗначениеГод);
	Запрос.УстановитьПараметр("ЗначениеПериодаКвартал", мЗначениеКвартал);
	Запрос.УстановитьПараметр("ЗначениеПериодаМесяц", мЗначениеМесяц);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ПериодМесяцТЗ 	= РезультатЗапроса[0].Выгрузить();
	ПериодКварталТЗ	= РезультатЗапроса[1].Выгрузить();
	ПериодГодТЗ		= РезультатЗапроса[2].Выгрузить();
	
	Если ПериодГодТЗ.Количество() > 0 Тогда		
		ПериодГод = ПериодГодТЗ[0].Ссылка;
		
	Иначе // Период год еще не создан.
		НовыйПериод = Справочники.ПериодыПервичныхДокументов.СоздатьЭлемент();
		НовыйПериод.ВидПериода	= мВидПериодаГод;
		НовыйПериод.Год			= мЗначениеГод;			
		НовыйПериод.Наименование= АвтонаименованиеПериода(НовыйПериод);
		НовыйПериод.Записать();
		ПериодГод = НовыйПериод.Ссылка;
		
	КонецЕсли;	
	
	Если ПериодКварталТЗ.Количество() > 0 Тогда
		ПериодКвартал = ПериодКварталТЗ[0].Ссылка;
		
	Иначе // Период квартал еще не создан.
		НовыйПериод = Справочники.ПериодыПервичныхДокументов.СоздатьЭлемент();
		НовыйПериод.ВидПериода		= мВидПериодаКвартал;
		НовыйПериод.ЗначениеПериода = мЗначениеКвартал;
		НовыйПериод.Год				= мЗначениеГод;		
		НовыйПериод.Родитель		= ПериодГод;
		НовыйПериод.Наименование	= АвтонаименованиеПериода(НовыйПериод);
		НовыйПериод.Записать();
		ПериодКвартал = НовыйПериод.Ссылка;

	КонецЕсли;
	
	Если ПериодМесяцТЗ.Количество() > 0 Тогда
		ПериодМесяц = ПериодМесяцТЗ[0].Ссылка;
	Иначе // Период месяц еще не создан.
		НовыйПериод = Справочники.ПериодыПервичныхДокументов.СоздатьЭлемент();
		НовыйПериод.ВидПериода		= мВидПериодаМесяц;
		НовыйПериод.ЗначениеПериода = мЗначениеМесяц;
		НовыйПериод.Год				= мЗначениеГод;		
		НовыйПериод.Родитель		= ПериодКвартал;
		НовыйПериод.Наименование	= АвтонаименованиеПериода(НовыйПериод);
		НовыйПериод.Записать();
		ПериодМесяц = НовыйПериод.Ссылка;

	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПолучениеШаблоновИДокументов
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовШаблоныПервичныхДокументов.ВидДокумента КАК ВидДокумента,
		|	ДоговорыКонтрагентовШаблоныПервичныхДокументов.Статус КАК Статус,
		|	ДоговорыКонтрагентовШаблоныПервичныхДокументов.Наименование КАК Наименование,
		|	ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка КАК Договор,
		|	ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.ПериодичностьПервичныхДокументов КАК ПериодичностьПервичныхДокументов,
		|	ВЫБОР
		|		КОГДА ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.ПериодичностьПервичныхДокументов = ЗНАЧЕНИЕ(Перечисление.ПериодичностьПервичныхДокументов.Ежемесячная)
		|			ТОГДА &ПериодМесяц
		|		КОГДА ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.ПериодичностьПервичныхДокументов = ЗНАЧЕНИЕ(Перечисление.ПериодичностьПервичныхДокументов.Ежеквартальная)
		|			ТОГДА &ПериодКвартал
		|		КОГДА ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.ПериодичностьПервичныхДокументов = ЗНАЧЕНИЕ(Перечисление.ПериодичностьПервичныхДокументов.Ежегодная)
		|			ТОГДА &ПериодГод
		|	КОНЕЦ КАК ТекущийПериод,
		|	ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.Организация КАК Организация,
		|	ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.Владелец КАК Контрагент,
		|	ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.Ответственный КАК Ответственный
		|ПОМЕСТИТЬ ВТ_Шаблоны
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов.ШаблоныПервичныхДокументов КАК ДоговорыКонтрагентовШаблоныПервичныхДокументов
		|ГДЕ
		|	ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.ИспользоватьАвтосозданиеПервичныхДокументов = ИСТИНА
		|	И ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
		|	И НЕ ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.ПометкаУдаления
		|	И (ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.ПериодичностьПервичныхДокументов = ЗНАЧЕНИЕ(Перечисление.ПериодичностьПервичныхДокументов.Ежемесячная)
		|			ИЛИ ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.ПериодичностьПервичныхДокументов = ЗНАЧЕНИЕ(Перечисление.ПериодичностьПервичныхДокументов.Ежеквартальная)
		|			ИЛИ ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.ПериодичностьПервичныхДокументов = ЗНАЧЕНИЕ(Перечисление.ПериодичностьПервичныхДокументов.Ежегодная))
		|	И (ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.СрокДействияДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ИЛИ ДоговорыКонтрагентовШаблоныПервичныхДокументов.Ссылка.СрокДействияДо >= &ТекущаяДата)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Шаблоны.Договор КАК Договор,
		|	ВТ_Шаблоны.ВидДокумента КАК ВидПервичногоДокумента,
		|	ВТ_Шаблоны.Организация КАК Организация,
		|	ВТ_Шаблоны.Контрагент КАК Контрагент,
		|	ВТ_Шаблоны.Ответственный КАК Ответственный,
		|	ВТ_Шаблоны.Статус КАК Статус,
		|	ВТ_Шаблоны.Наименование КАК Наименование,
		|	ВТ_Шаблоны.ТекущийПериод КАК Период
		|ИЗ
		|	ВТ_Шаблоны КАК ВТ_Шаблоны
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПервичныеДокументы КАК ПервичныеДокументы
		|		ПО ВТ_Шаблоны.ВидДокумента = ПервичныеДокументы.ВидПервичногоДокумента
		|			И ВТ_Шаблоны.Договор = ПервичныеДокументы.Договор
		|			И ВТ_Шаблоны.ТекущийПериод = ПервичныеДокументы.Период
		|ГДЕ
		|	ПервичныеДокументы.Ссылка ЕСТЬ NULL";
	
	
	Запрос.УстановитьПараметр("ПериодМесяц", ПериодМесяц);
	Запрос.УстановитьПараметр("ПериодКвартал", ПериодКвартал);
	Запрос.УстановитьПараметр("ПериодГод", ПериодГод);
	Запрос.УстановитьПараметр("ТекущаяДата", мТекущаяДата);
		
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НовыйДокумент = Справочники.ПервичныеДокументы.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НовыйДокумент, ВыборкаДетальныеЗаписи); 
		
		НовыйДокумент.Дата = мТекущаяДата;
		
		Если ПустаяСтрока(НовыйДокумент.Наименование) Тогда
			НовыйДокумент.Наименование	= НСтр("ru = 'Первичный документ'");			
		КонецЕсли;	
		
		Если Не ЗначениеЗаполнено(НовыйДокумент.Статус) Тогда 
			НовыйДокумент.Статус = Перечисления.СтатусыПервичныхДокументов.Запланирован;
		КонецЕсли;	
		
		НовыйДокумент.Комментарий	= НСтр("ru = 'Созадан автоматически регламентным заданием ""Создание периодических документов""'") + " " + Строка(мТекущаяДата); 
		
		Попытка
			НовыйДокумент.Записать();
		Исключение
		КонецПопытки;
		
	КонецЦикла;	
	
	#КонецОбласти
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Квартал(Знач Дата)
	
	Возврат Цел((Месяц(Дата) - 1) / 3) + 1;
	
КонецФункции

#КонецОбласти

#КонецОбласти