
#Область ПрограммныйИнтерфейс

// Возвращает структуру, полученную из строки дерева значений, расположенного на передаваемой форме
//
// Параметры:
// Форма 				- Передаваемая форма
// НаименованиеДерева 	- Наименование реквизита дерева значений
Функция СтруктураИзДереваЗначений(Знач Форма, Знач НаименованиеДерева) Экспорт
	
	РеквизитыФормы 		= Новый Массив;
	СтруктураТаблицы	= Новый Структура;
	
	Для каждого РеквизитФормы Из Форма.ПолучитьРеквизиты() Цикл
		РеквизитыФормы.Добавить(РеквизитФормы.Имя);
	КонецЦикла;
	
	Если РеквизитыФормы.Найти(НаименованиеДерева) <> Неопределено Тогда		
		ДеревоНоменклатуры = Форма.РеквизитФормыВЗначение(НаименованиеДерева);
		Для Каждого Колонка Из ДеревоНоменклатуры.Колонки Цикл			
			СтруктураТаблицы.Вставить(Колонка.Имя);			
		КонецЦикла;
	КонецЕсли;
	
	Возврат СтруктураТаблицы;
	
КонецФункции

// Возвращает структуру, полученную из строки табличной части документа
//
// Параметры:
// Форма 						- Передаваемая форма
// НаименованиеТабличнойЧасти 	- Наименование табличной части документа
Функция СтруктураИзТабличнойЧасти(Знач Форма, Знач НаименованиеТабличнойЧасти) Экспорт
	
	РеквизитыФормы 		= Новый Массив;
	СтруктураТаблицы	= Новый Структура;
	
	Объект = Форма.РеквизитФормыВЗначение("Объект");
	
	Для Каждого Колонка Из Объект.Метаданные().ТабличныеЧасти[НаименованиеТабличнойЧасти].Реквизиты Цикл			
		СтруктураТаблицы.Вставить(Колонка.Имя);			
	КонецЦикла;
	
	Возврат СтруктураТаблицы;
	
КонецФункции

// Сохраненяет дерево номенклатуры в табличную часть документа
// Параметры:
//  ДеревоНоменклатуры 	- Дерево значений, передаваемое из формы
//  Номенклатура 		- Табличная часть документа.
Процедура СохранитьДеревоНоменклатуры(Знач ДеревоНоменклатуры, Номенклатура) Экспорт	
	
	Номенклатура.Очистить();
	ОткрытыйСписок	= Новый Массив();
	ЗакрытыйСписок	= Новый Массив();	
	Для Каждого СтрокаВерхнегоУровня Из ДеревоНоменклатуры.Строки Цикл 
		ОткрытыйСписок.Добавить(СтрокаВерхнегоУровня);	
		Пока ОткрытыйСписок.Количество() > 0 Цикл		
			Для Каждого Строка Из ОткрытыйСписок Цикл
				НоваяСтрока		= Номенклатура.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				Для Каждого ПодчиненнаяСтрока Из Строка.Строки Цикл 
					ЗакрытыйСписок.Добавить(ПодчиненнаяСтрока);
				КонецЦикла;	
			КонецЦикла;
			ОткрытыйСписок = ЗакрытыйСписок;
			ЗакрытыйСписок = Новый Массив;
		КонецЦикла;	
	КонецЦикла;
	
КонецПроцедуры

// Процедура обновляет нумерацию элементов в дереве
Процедура ОбновитьНумерациюВДереве(СтрокаДерева, ИндексСтроки = 1) Экспорт
	
	ЭлементыДерева = СтрокаДерева.ПолучитьЭлементы();
	Для Каждого Строки Из ЭлементыДерева Цикл
		Строки.КлючСтроки 	= ИндексСтроки;
		ИндексСтроки 		= ИндексСтроки + 1;
		ОбновитьНумерациюВДереве(Строки, ИндексСтроки);
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЗначениеКолонкиВДеревеНоменклатуры(СтрокиДерева, ИмяКолонки, Значение) Экспорт
	
	Для Каждого Строки Из СтрокиДерева.Строки Цикл
		Строки[ИмяКолонки] = Значение;
		УстановитьЗначениеКолонкиВДеревеНоменклатуры(Строки, ИмяКолонки, Значение);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
















