///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Вызывается для получения контактов (участников) по указанному предмету взаимодействия.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий.
//
// Параметры:
//  ИмяТаблицыКонтактов   - Строка - имя таблицы предмета взаимодействий, в котором требуется выполнить поиск.
//                                   Например, "Документы.ЗаказПокупателя".
//  ТекстЗапросаДляПоиска - Строка - в этот параметр указать фрагмент запроса для поиска. При выполнении запроса 
//                                   в параметр запроса &Предмет подставляется ссылка на предмет взаимодействия.
//
Процедура ПриПоискеКонтактов(Знач ИмяТаблицыКонтактов, ТекстЗапросаДляПоиска) Экспорт
	
	//<< УИТ
	Если ИмяТаблицыКонтактов = Метаданные.Документы.ЗаказПоставщику.ПолноеИмя() Тогда
		ТекстЗапросаДляПоиска = Документы.ЗаказПоставщику.ТекстЗапросаПоКонтактам(Истина);
	КонецЕсли;
	//>>
	
КонецПроцедуры	

// Позволяет переопределить владельца присоединенных файлов для письма.
// Такая необходимость может возникнуть, например, при массовых рассылках, когда имеет смысл 
// хранить одни и те же присоединенные файлы в одном месте, а не тиражировать их на все письма рассылки.
//
// Параметры:
//  Письмо - ДокументСсылка.ЭлектронноеПисьмоВходящее, ДокументСсылка.ЭлектронноеПисьмоИсходящее - электронное письмо, 
//           для которого необходимо получить вложения.
//  ПрисоединенныеФайлы - Структура - задать сведения о файлах, присоединенных к письму:
//    * ВладелецФайлов                     - ОпределяемыйТип.ПрисоединенныйФайл - владелец присоединенных файлов.
//    * ИмяСправочникаПрисоединенныхФайлов - Строка - имя объекта метаданных присоединенных файлов.
//
Процедура ПриПолученииПрисоединенныхФайлов(Письмо, ПрисоединенныеФайлы) Экспорт

КонецПроцедуры

// Вызывается для настройки логики ограничения доступа к взаимодействиям.
// Пример заполнения наборов значений доступа см. в комментарии
// к процедуре УправлениеДоступом.ЗаполнитьНаборыЗначенийДоступа.
//
// Параметры:
//  Объект - ДокументОбъект.Встреча,
//           ДокументОбъект.ЗапланированноеВзаимодействие,
//           ДокументОбъект.СообщениеSMS,
//           ДокументОбъект.ТелефонныйЗвонок,
//           ДокументОбъект.ЭлектронноеПисьмоВходящее,
//           ДокументОбъект.ЭлектронноеПисьмоИсходящее - объект, для которого нужно заполнить наборы.
//  
//  Таблица - ТаблицаЗначений - возвращаемая функцией УправлениеДоступом.ТаблицаНаборыЗначенийДоступа.
//
Процедура ПриЗаполненииНаборовЗначенийДоступа(Объект, Таблица) Экспорт
	
	//<< УИТ	
	УправлениеIT8УФПриЗаполненииНаборовЗначенийДоступа(Объект, Таблица);
	//>>
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ВзаимодействияПереопределяемый.ПриПоискеКонтактов.
// Возвращает текст запроса, отбирающего контакты (участников) предмета взаимодействия.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий.
//
// Параметры:
//  УдалитьПомещатьВоВременнуюТаблицу - Булево - всегда Ложь.
//  ИмяТаблицы                        - Строка - имя таблицы предмета взаимодействий, в котором будет выполнен поиск.
//  УдалитьОбъединить                 - Булево - всегда Истина.
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаПоискКонтактовПоПредмету(УдалитьПомещатьВоВременнуюТаблицу, ИмяТаблицы, УдалитьОбъединить = Ложь) Экспорт
	
	Возврат "";
	
КонецФункции

// Устарела. Следует использовать ВзаимодействияПереопределяемый.ПриПолученииПрисоединенныхФайлов.
// Возможность переопределить владельца присоединенных файлов для письма.
// Такая необходимость может возникнуть например при массовых рассылках. В этом случае имеет смысл 
// хранить одни и те же присоединенные файлы в одном месте, а не тиражировать их на все письма рассылки.
//
// Параметры:
//  Письмо  - ДокументСсылка, ДокументОбъект - документ электронное письмо, для которого необходимо получить вложения.
//
// Возвращаемое значение:
//  Структура, Неопределено  - Неопределено, если присоединенные файлы хранятся при письме.
//                             Структура, если присоединенные файлы хранятся в другом объекте:
//                              * Владелец - ОпределяемыйТип.ПрисоединенныйФайл - владелец присоединенных файлов.
//                              * ИмяСправочникаПрисоединенныеФайлы - Строка - имя объекта метаданных присоединенных файлов.
//
Функция ДанныеОбъектаМетаданныхПрисоединенныхФайловПисьма(Письмо) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

//<< УИТ
#Область СлужебныеПроцедурыИФункции

Процедура УправлениеIT8УФПриЗаполненииНаборовЗначенийДоступа(Объект, Таблица)
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.Встреча") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляВстречи(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЗапланированноеВзаимодействие") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляЗапланированногоВзаимодействия(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.СообщениеSMS") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляСообщенияSMS(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ТелефонныйЗвонок") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляТелефонногоЗвонка(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаВходящего(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаИсходящего(Объект, Таблица);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляВстречи(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	НомерНабора = 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Автор;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;
	Для Каждого СтрокаТаблицы Из Объект.Участники Цикл

		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
			Продолжить;
		КонецЕсли;

		Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Контрагенты") Тогда

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

		ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛица") Тогда

			МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

		КонецЕсли;

	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляЗапланированногоВзаимодействия(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	НомерНабора = 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Автор;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;
	Для Каждого СтрокаТаблицы Из Объект.Участники Цикл

		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
			Продолжить;
		КонецЕсли;

		Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Контрагенты") Тогда

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

		ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛица") Тогда

			МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

		КонецЕсли;

	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляСообщенияSMS(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	НомерНабора = 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Автор;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;
	Для Каждого СтрокаТаблицы Из Объект.Адресаты Цикл

		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
			Продолжить;
		КонецЕсли;

		Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Контрагенты") Тогда

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

		ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛица") Тогда

			МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

		КонецЕсли;

	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляТелефонногоЗвонка(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "Автор".
	НомерНабора = 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Автор;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Ответственный;

	Если ЗначениеЗаполнено(Объект.АбонентКонтакт) Тогда

		Если ТипЗнч(Объект.АбонентКонтакт) = Тип("СправочникСсылка.Контрагенты") Тогда

			НомерНабора = НомерНабора + 1;

			СтрокаТаблицы = Таблица.Добавить();
			СтрокаТаблицы.НомерНабора     = НомерНабора;
			СтрокаТаблицы.ЗначениеДоступа = Объект.АбонентКонтакт;

		ИначеЕсли ТипЗнч(Объект.АбонентКонтакт) = Тип("СправочникСсылка.КонтактныеЛица") Тогда

			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КонтактныеЛица.Владелец КАК Партнер
			|ИЗ
			|	Справочник.КонтактныеЛица КАК КонтактныеЛица
			|ГДЕ
			|	КонтактныеЛица.Ссылка = &АбонентКонтакт");
			Запрос.УстановитьПараметр("АбонентКонтакт", Объект.АбонентКонтакт);
			Выборка = Запрос.Выполнить().Выбрать();

			Пока Выборка.Следующий() Цикл

				НомерНабора = НомерНабора + 1;

				СтрокаТаблицы = Таблица.Добавить();
				СтрокаТаблицы.НомерНабора     = НомерНабора;
				СтрокаТаблицы.ЗначениеДоступа = Выборка.Партнер;

			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаВходящего(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен  "Ответственный" или "Учетная запись".
	// Логика "ИЛИ" реализуется через различные номера наборов.

	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	НомерНабора = 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.УчетнаяЗапись;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;

	МассивТабличныхЧастей = Новый Массив;
	МассивТабличныхЧастей.Добавить("ПолучателиПисьма");
	МассивТабличныхЧастей.Добавить("ПолучателиКопий");
	МассивТабличныхЧастей.Добавить("ПолучателиОтвета");
	Для Каждого ТабличнаяЧасть Из МассивТабличныхЧастей Цикл

		Для Каждого СтрокаТаблицы Из Объект[ТабличнаяЧасть] Цикл

			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
				Продолжить;
			КонецЕсли;

			Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Контрагенты") Тогда

				НомерНабора = НомерНабора + 1;

				СтрокаТаб = Таблица.Добавить();
				СтрокаТаб.НомерНабора     = НомерНабора;
				СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

			ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛица") Тогда

				МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

			КонецЕсли;

		КонецЦикла;
	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаИсходящего(Объект, Таблица)
	
	// Логика ограничения следующая: объект доступен если доступен  "Ответственный" или "Учетная запись"
	// или "Автор".
	// Логика "ИЛИ" реализуется через различные номера наборов.

	НомерНабора = 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.УчетнаяЗапись;

	НомерНабора = НомерНабора + 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Автор;

	НомерНабора = НомерНабора + 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;

	МассивТабличныхЧастей = Новый Массив;
	МассивТабличныхЧастей.Добавить("ПолучателиПисьма");
	МассивТабличныхЧастей.Добавить("ПолучателиКопий");
	МассивТабличныхЧастей.Добавить("ПолучателиОтвета");
	МассивТабличныхЧастей.Добавить("ПолучателиСкрытыхКопий");
	Для Каждого ТабличнаяЧасть Из МассивТабличныхЧастей Цикл

		Для Каждого СтрокаТаблицы Из Объект[ТабличнаяЧасть] Цикл

			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
				Продолжить;
			КонецЕсли;

			Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Контрагенты") Тогда

				НомерНабора = НомерНабора + 1;

				НоваяСтрока = Таблица.Добавить();
				НоваяСтрока.НомерНабора     = НомерНабора;
				НоваяСтрока.ЗначениеДоступа = СтрокаТаблицы.Контакт;

			ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛица") Тогда

				МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

			КонецЕсли;

		КонецЦикла;
	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			НоваяСтрока = Таблица.Добавить();
			НоваяСтрока.НомерНабора     = НомерНабора;
			НоваяСтрока.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//>>

#КонецОбласти
