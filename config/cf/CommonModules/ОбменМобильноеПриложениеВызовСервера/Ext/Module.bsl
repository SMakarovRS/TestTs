
#Область ПрограммныйИнтерфейс

// Обработчик регламентного задания ОбменМобильноеПриложениеРегистрацияИзменений.
//
Процедура ОбменСМобильнымиРегистрацияИзменений() Экспорт

	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбменМобильноеПриложениеРегистрацияИзменений);

	ОбменМобильноеПриложениеСервер.ВыполнитьРегистрациюИзмененийДляМобильныхУстройств();

КонецПроцедуры

// Обработчик регламентного задания ОбменМобильноеПриложениеРегистрацияИзменений.
//
Процедура УдалениеСообщенийОбменаМобильноеПриложение() Экспорт

	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбменМобильноеПриложениеУдалениеСообщенийОбмена);

	УдалениеСообщенийОбменаМобильноеПриложениеПоКлиенту();

КонецПроцедуры

// Обработчик регламентного задания ОбменМобильноеПриложениеУдалениеЗаписейЖурнала.
//
Процедура УдалениеСтарыхЗаписейЖурналаРаботы() Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.ОбменМобильноеПриложениеУдалениеЗаписейЖурнала);
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Удаляются записи старше 2-х недель.
	ГраницаВыборкиЗаписей = ТекущаяДатаСеанса() - 14*24*60*60;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЖурналРаботыСМобильнымиКлиентами.МоментВремени,
		|	ЖурналРаботыСМобильнымиКлиентами.Период,
		|	ЖурналРаботыСМобильнымиКлиентами.МобильныйКлиент
		|ИЗ
		|	РегистрСведений.ЖурналРаботыСМобильнымиКлиентами КАК ЖурналРаботыСМобильнымиКлиентами
		|ГДЕ
		|	ЖурналРаботыСМобильнымиКлиентами.Период <= &Период";
	Запрос.УстановитьПараметр("Период", ГраницаВыборкиЗаписей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ЖурналРаботыСМобильнымиКлиентами.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.МоментВремени 	= Выборка.МоментВремени;
		МенеджерЗаписи.Период 		 	= Выборка.Период;
		МенеджерЗаписи.МобильныйКлиент  = Выборка.МобильныйКлиент;
		МенеджерЗаписи.Удалить();
	КонецЦикла;

КонецПроцедуры

Процедура УдалениеСообщенийОбменаМобильноеПриложениеПоКлиенту(МобильныйКлиент = Неопределено) Экспорт

	УстановитьПривилегированныйРежим(Истина);	
	
	МобильныеКлиенты = ОбменМобильноеПриложениеПовтИсп.ПолучитьВсеУзлы();
	Для Каждого МобильныйКлиент Из МобильныеКлиенты Цикл	

		Запрос = Новый Запрос;		
		Запрос.УстановитьПараметр("МобильныйКлиент", МобильныйКлиент);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СообщенияОбменаМобильноеПриложение.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.СообщенияОбменаМобильноеПриложение КАК СообщенияОбменаМобильноеПриложение
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиСообщенийОбменаМобильноеПриложение КАК ОчередиСообщенийОбменаМобильноеПриложение
			|		ПО СообщенияОбменаМобильноеПриложение.Очередь = ОчередиСообщенийОбменаМобильноеПриложение.Очередь
			|ГДЕ
			|	СообщенияОбменаМобильноеПриложение.ПометкаУдаления = ИСТИНА
			|	И ОчередиСообщенийОбменаМобильноеПриложение.МобильныйКлиент = &МобильныйКлиент";

		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СообщениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если СообщениеОбъект <> Неопределено Тогда
				СообщениеОбъект.Удалить();
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;

	// Пометка на удаление узлов, которые не синхронизировались больше 30 дней.	
	Порог = ДобавитьМесяц(НачалоДня(ТекущаяДата()), - 1);

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Порог", Порог);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОМобильныхКлиентах.МобильныйКлиент КАК МобильныйКлиент
		|ИЗ
		|	РегистрСведений.СведенияОМобильныхКлиентах КАК СведенияОМобильныхКлиентах
		|ГДЕ
		|	СведенияОМобильныхКлиентах.ДатаПоследнейАктивности <= &Порог";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		МобильныйКлиент = Выборка.МобильныйКлиент.ПолучитьОбъект();
		Если Не МобильныйКлиент = Неопределено Тогда
			МобильныйКлиент.УстановитьПометкуУдаления(Истина);
		КонецЕсли;

	КонецЦикла;

	// Удаление сообщений по помеченным на удаление мобильным клиентам.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СообщенияОбменаМобильноеПриложение.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СообщенияОбменаМобильноеПриложение КАК СообщенияОбменаМобильноеПриложение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиСообщенийОбменаМобильноеПриложение КАК ОчередиСообщенийОбменаМобильноеПриложение
		|		ПО (СообщенияОбменаМобильноеПриложение.Очередь = СообщенияОбменаМобильноеПриложение.Очередь)
		|ГДЕ
		|	ОчередиСообщенийОбменаМобильноеПриложение.МобильныйКлиент.ПометкаУдаления";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СообщениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если СообщениеОбъект <> Неопределено Тогда
			СообщениеОбъект.Удалить();
		КонецЕсли;
	КонецЦикла;

	// Удаление помеченных на удаление мобильных клиентов.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МобильноеПриложение.Ссылка
		|ИЗ
		|	ПланОбмена.МобильноеПриложение КАК МобильноеПриложение
		|ГДЕ
		|	МобильноеПриложение.ПометкаУдаления";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПланыОбмена.УдалитьРегистрациюИзменений(Выборка.Ссылка);
		Выборка.Ссылка.ПолучитьОбъект().Удалить();
	КонецЦикла;

КонецПроцедуры

// Получает массив ссылок на узла плана обмена Мобильный, принадлежащие указанному пользователю
//
// Параметры:
//  Пользователь - Справочник.Пользователи - Ссылка на пользователя.
// 
// Возвращаемое значение:
//  Массив - Список узлов обмена доступных пользователю.
//
Функция ПолучитьУзлыОбменаПоВладельцу(Пользователь) Экспорт

	Возврат ОбменМобильноеПриложениеПовтИсп.ПолучитьУзлыОбменаПоВладельцу(Пользователь);

КонецФункции

Процедура ОбменМобильноеПриложениеПередЗаписьюФайла(Источник, Отказ) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыФайла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Источник.Ссылка, "ВладелецФайла, Наименование, ДатаМодификацииУниверсальная, Размер, ПометкаУдаления");

	Источник.ДополнительныеСвойства.Вставить("ВладелецФайла", 	РеквизитыФайла.ВладелецФайла);
	Источник.ДополнительныеСвойства.Вставить("Наименование", 	РеквизитыФайла.Наименование);
	Источник.ДополнительныеСвойства.Вставить("ДатаМодификацииУниверсальная", 
		РеквизитыФайла.ДатаМодификацииУниверсальная);
	Источник.ДополнительныеСвойства.Вставить("Размер", 			РеквизитыФайла.Размер);
	Источник.ДополнительныеСвойства.Вставить("ПометкаУдаления", РеквизитыФайла.ПометкаУдаления);
	
КонецПроцедуры

Процедура ОбменМобильноеПриложениеПриЗаписиФайла(Источник, Отказ) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("НеРегистрироватьИзмененияДляМП") Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ВладелецФайла = Источник.ДополнительныеСвойства.ВладелецФайла
		И Источник.Наименование = Источник.ДополнительныеСвойства.Наименование
		И Источник.ДатаМодификацииУниверсальная = Источник.ДополнительныеСвойства.ДатаМодификацииУниверсальная
		И Источник.Размер = Источник.ДополнительныеСвойства.Размер 
		И Источник.ПометкаУдаления = Источник.ДополнительныеСвойства.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
		
	УзелОбменаДляРегистрацииВсехДанных = ОбменМобильноеПриложениеПовтИсп.ПолучитьУзелДляРегистрацииДанных();
	ПланыОбмена.ЗарегистрироватьИзменения(УзелОбменаДляРегистрацииВсехДанных, Источник);
	
КонецПроцедуры

Процедура ОбменМобильноеПриложениеПриЗаписиДокумента(Источник, Отказ) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") <> Истина Тогда
		Возврат;
	КонецЕсли;	
	
	Если Источник.ДополнительныеСвойства.Свойство("НеРегистрироватьИзмененияДляМП") Тогда
		Возврат;
	КонецЕсли;
	
	УзелОбменаДляРегистрацииВсехДанных = ОбменМобильноеПриложениеПовтИсп.ПолучитьУзелДляРегистрацииДанных();
	ПланыОбмена.ЗарегистрироватьИзменения(УзелОбменаДляРегистрацииВсехДанных, Источник);
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.Задание") Тогда
		ОбменМобильноеПриложениеСервер.ОтразитьДоступностьЗаданияПользователям(Источник.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбменМобильноеПриложениеПриЗаписиРегистра(Источник, Отказ) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("НеРегистрироватьИзмененияДляМП") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.СвязьКомментариев") Тогда
		Если НЕ ЗначениеЗаполнено(Источник.Отбор.Родитель.Значение)
			ИЛИ Источник.Отбор.Родитель.Значение.Ссылка.ПолучитьОбъект() = Неопределено
			ИЛИ Не ЗначениеЗаполнено(Источник.Отбор.Ссылка.Значение) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.НастройкиПользователей") Тогда
		Если НЕ ЗначениеЗаполнено(Источник.Отбор.Пользователь.Значение)
			ИЛИ Источник.Отбор.Пользователь.Значение.Ссылка.ПолучитьОбъект() = Неопределено Тогда		
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.ЛогиныИПаролиХранилище") Тогда
		Если НЕ ЗначениеЗаполнено(Источник.Отбор.Владелец.Значение)
			ИЛИ Источник.Отбор.Владелец.Значение.Ссылка.ПолучитьОбъект() = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	УзелОбменаДляРегистрацииВсехДанных = ОбменМобильноеПриложениеПовтИсп.ПолучитьУзелДляРегистрацииДанных();
	ПланыОбмена.ЗарегистрироватьИзменения(УзелОбменаДляРегистрацииВсехДанных, Источник);
	
КонецПроцедуры

Процедура ОбменМобильноеПриложениеПриЗаписиОбъекта(Источник, Отказ) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("НеРегистрироватьИзмененияДляМП") Тогда
		Возврат;
	КонецЕсли;
	
	УзелОбменаДляРегистрацииВсехДанных = ОбменМобильноеПриложениеПовтИсп.ПолучитьУзелДляРегистрацииДанных();
	ПланыОбмена.ЗарегистрироватьИзменения(УзелОбменаДляРегистрацииВсехДанных, Источник);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОДоступностиЗаданийПользователямФоновымЗаданием(Знач ПараметрыПроверки, 
	АдресХранилища = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Задание.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Задание КАК Задание
		|ГДЕ
		|	НЕ Задание.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Задание.Дата";
	
	РезультатЗапроса 	   = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбменМобильноеПриложениеСервер.ОтразитьДоступностьЗаданияПользователям(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
КонецПроцедуры	

#КонецОбласти