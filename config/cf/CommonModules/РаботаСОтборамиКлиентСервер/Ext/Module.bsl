
#Область ПрограммныйИнтерфейс

// Обновляет представление периода по переданному значению периода.
//
// Параметры:
//	Период - СтандартныйПериод - исходный период.
// Возвращаемое значение:
//  Строка - представление периода.
//
Функция ОбновитьПредставлениеПериода(Знач Период) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Период) 
		ИЛИ (НЕ ЗначениеЗаполнено(Период.ДатаНачала) И НЕ ЗначениеЗаполнено(Период.ДатаОкончания)) Тогда
		ПредставлениеПериода = НСтр("ru = 'Период: за все время'");
		
	Иначе
		ДатаОкончанияПериода = ?(ЗначениеЗаполнено(Период.ДатаОкончания), КонецДня(Период.ДатаОкончания),
			Период.ДатаОкончания);
			
		Если ДатаОкончанияПериода < Период.ДатаНачала Тогда			
			
			#Если Клиент Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Выбрана дата окончания периода, которая меньше даты начала'"));
			#КонецЕсли	
					
			ЛокальнаяДата		= Формат(Период.ДатаНачала, НСтр("ru = 'ДЛФ=dd.MM.yyyy'"));			
			ПредставлениеПериода= НСтр("ru = 'с'")+ " " + ЛокальнаяДата;
			
		Иначе
			ПредставлениеПериода = НСтр("ru = 'за'")+ " "
				+ НРег(ПредставлениеПериода(Период.ДатаНачала, ДатаОкончанияПериода));
			
		КонецЕсли; 
	КонецЕсли;
	
	Возврат ПредставлениеПериода;
	
КонецФункции

// Устанавливает на динамический список отбор по переданному периоду.
//
// Параметры:
//	СписокОтбор		- Отбор - Список.Отбор.
//	ДатаНачала		- Дата - дата начала периода для отбора.
//	ДатаОкончания	- Дата - дата окончания периода для отбора.
//	ИмяПоляОтбора	- Строка - имя поля динамического списка для наложения отбора.
//
Процедура УстановитьОтборПоПериоду(СписокОтбор, ДатаНачала, ДатаОкончания, ИмяПоляОтбора = "Дата") Экспорт
		
	ГруппаОтборПоПериоду = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		СписокОтбор.Элементы,
		"Период",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		ГруппаОтборПоПериоду,
		ИмяПоляОтбора,
		ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
		ДатаНачала,
		"ДатаНачала",
		ЗначениеЗаполнено(ДатаНачала));
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		ГруппаОтборПоПериоду,
		ИмяПоляОтбора,
		ВидСравненияКомпоновкиДанных.МеньшеИлиРавно,
		ДатаОкончания,
		"ДатаОкончания",
		ЗначениеЗаполнено(ДатаОкончания));
		
КонецПроцедуры

// Удаляет элемент отбора динамического списка.
//
// Параметры:
//	Список  - ДинамическийСписок,  ОтборКомпоновкиДанных - обрабатываемый динамический список или Список.Отбор.
//	ИмяПоля - Строка - имя поля компоновки, отбор по которому нужно удалить.
//
Процедура УдалитьЭлементОтбораСписка(Список, Знач ИмяПоля) Экспорт
	
	Если ТипЗнч(Список) = Тип("ОтборКомпоновкиДанных") Тогда
		НаборЭлементов = Список;		
	Иначе		
		НаборЭлементов = Список.КомпоновщикНастроек.Настройки.Отбор;			
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(НаборЭлементов, ИмяПоля);
	
КонецПроцедуры

// Устанавливает элемент отбор динамического списка.
//
// Параметры:
//	Список			- ДинамическийСписок,  ОтборКомпоновкиДанных - обрабатываемый динамический список или Список.Отбор.
//	ИмяПоля			- Строка - имя поля компоновки, отбор по которому нужно установить.
//	ПравоеЗначение 	- ЛюбаяСсылка, Массив, СписокЗначений - значение отбора.
//	Использование 	- Булево - применение отбора.
//	ВидСравнения	- ВидСравненияКомпановкиДанных - вид сравнения отбора.
//
Процедура УстановитьЭлементОтбораСписка(Список, Знач ИмяПоля, Знач ПравоеЗначение, Знач Использование = Истина, 
		Знач ВидСравнения = Неопределено) Экспорт
		
	Если ТипЗнч(Список) = Тип("ОтборКомпоновкиДанных") Тогда
		НаборЭлементов = Список;		
	Иначе		
		НаборЭлементов = Список.КомпоновщикНастроек.Настройки.Отбор;			
	КонецЕсли;		
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(НаборЭлементов, ИмяПоля, 
		ПравоеЗначение, ВидСравнения, , Использование);
			
КонецПроцедуры

// Изменяет элемент отбора динамического списка.
//
// Параметры:
//	Список         - ДинамическийСписок - обрабатываемый динамический список.
//	ИмяПоля        - Строка - имя поля компоновки, отбор по которому нужно установить.
//	ПравоеЗначение - Произвольный - значение отбора.
//	Установить     - Булево - признак необходимости установить отбор.
//	ВидСравнения   - вид сравнения отбора.
//
Процедура ИзменитьЭлементОтбораСписка(Список, Знач ИмяПоля, Знач ПравоеЗначение = Неопределено, Знач Установить = Ложь,
	Знач ВидСравнения = Неопределено) Экспорт
	
	НаборЭлементов = Список.КомпоновщикНастроек.Настройки.Отбор;
	ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(НаборЭлементов, ИмяПоля, , ПравоеЗначение, ВидСравнения, Установить);
	
КонецПроцедуры

#КонецОбласти
