
////////////////////////////////////////////////////////////////////////////////
// Работа с делами пользователей.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Ищет стандартный вид дела по его идентификатору.
//
// Параметры:
//	Идентификатор - Строка - строка идентификатора.
//	Пользователь - СправочникСсылка.Пользователи или Неопределено - по 
//					какому пользователю формируем, если Неопределено, то 
//					по текущему.
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыДел - возвращаемый вид. Если не найден пустая ссылка.
//
Функция НайтиВидДелаПоИдентификатору(Знач Идентификатор, Знач Пользователь = Неопределено) Экспорт
    
	Если ПустаяСтрока(Идентификатор) Тогда
		Возврат Справочники.ВидыДел.ПустаяСсылка();
	КонецЕсли;
	
	ТекущийПользователь = ?(Пользователь = Неопределено, Пользователи.ТекущийПользователь(), Пользователь);
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВидыДел.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВидыДел КАК ВидыДел
		|ГДЕ
		|	ВидыДел.Автор = &Пользователь
		|	И ВидыДел.Идентификатор = &Идентификатор
		|	И ВидыДел.ПометкаУдаления = ЛОЖЬ
		|	И ВидыДел.Видимость = ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидыДел.Код УБЫВ";
	
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
    Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.ВидыДел.ПустаяСсылка();
    
КонецФункции

// Вызывается из регламентного задания.
// Помечает на удаление выполненные задания, которые устарели.
//
// Параметры:
//	Нет.
//
Процедура АвтоматическаяПометкаУдаленияВыполненныхДел() Экспорт
	
	// Пометим на удаление только только те дела, 
	// которые находятся в самом низу и не содержат не помеченных дочерних дел + выполнены + выполнены больше месяца назад.
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьДела") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.АвтоматическаяПометкаУдаленияВыполненныхДел);
	
	УстановитьПривилегированныйРежим(Истина);
	ДнейХраненияВыполненныхДел = Константы.ДнейХраненияВыполненныхДел.Получить();
	Если ДнейХраненияВыполненныхДел = 0 Тогда
		ДнейХраненияВыполненныхДел = 30;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Дела.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Дела КАК Дела
		|ГДЕ
		|	Дела.ПометкаУдаления = ЛОЖЬ
		|	И Дела.Выполнено = ИСТИНА
		|	И Дела.ДатаВыполнения <= &ДатаВыполнения
		|	И НЕ Дела.Ссылка В
		|				(ВЫБРАТЬ
		|					Дела.Родитель КАК Родитель
		|				ИЗ
		|					Справочник.Дела КАК Дела
		|				ГДЕ
		|					Дела.ПометкаУдаления = ЛОЖЬ)";
	
	Запрос.УстановитьПараметр("ДатаВыполнения", ТекущаяДатаСеанса() - ДнейХраненияВыполненныхДел * 86400);
	Запрос.УстановитьПараметр("ДатаВыполнения", ТекущаяДатаСеанса());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Об = Выборка.Ссылка.ПолучитьОбъект();
		Об.УстановитьПометкуУдаления(Истина, Истина);			
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает список доступных для вывода столбцов дел.
//
// Возвращаемое значение:
//	СписокЗначений - в значениях имя столбца в представлении представление столбца.
//
Функция СписокСтолбцов() Экспорт
	
	МассивИсключений = МассивСтолбцовИсключений();
	Список = Новый СписокЗначений;
	
	Для Каждого Реквизит Из Метаданные.Справочники.Дела.Реквизиты Цикл
		
		ИмяСтолбца = Реквизит.Имя;
		
		Если МассивИсключений.Найти(ИмяСтолбца) = Неопределено 
			И Список.НайтиПоЗначению(ИмяСтолбца) = Неопределено Тогда
			
			Список.Добавить(ИмяСтолбца, Реквизит.Синоним, Ложь);
			
		КонецЕсли;		
	КонецЦикла;
	
	Массив = МассивСоставныхСтолбцов();
	Для Каждого Реквизит Из Массив Цикл
		
		Список.Добавить(Реквизит.Имя, Реквизит.Синоним, Ложь, );
		
	КонецЦикла;
	
	Список.СортироватьПоПредставлению();
	
	Возврат Список;
	
КонецФункции

// Возвращает массив столбцов исключений (которые нельзя выбрать) в настройках.
//
// Возвращаемое значение:
//	Массив - массив строк.
//
Функция МассивСтолбцовИсключений() Экспорт
	
	Исключения = Новый Массив;
	Исключения.Добавить("ИспользоватьСтиль");
	Исключения.Добавить("Описание");
	Исключения.Добавить("Стиль");
	Исключения.Добавить("ЭтоПапка");
	Исключения.Добавить("ИспользоватьНачало");
	Исключения.Добавить("ИспользоватьВремя");
	Исключения.Добавить("Выполнено");
	Исключения.Добавить("ЭтоПапка");
	Исключения.Добавить("Картинка");
	Исключения.Добавить("Подсвечено");
	Исключения.Добавить("ОбзорКаждые");
	Исключения.Добавить("ОбзорПериод");
	Исключения.Добавить("Идентификатор");
	Исключения.Добавить("СпрятатьВToDo");
	Исключения.Добавить("СрокСтрока");
	
	Возврат Исключения;
	
КонецФункции

// Анализирует текст из диалога быстрого ввода дел.
//
// Параметры:
//	Родитель - СправочникСсылка.Дела - родительское дело, куда пометсить созадаваемые задания.
//	Текст - Строка - исходный текст для анализа.
//	ВводНесколькихЗадач - Булево - Истина, если каждая строка новое дело или все как одно дело.
//	УмныйАнализВвода - Булево - дополнительный анализ текста (поиск дат, сроков и т.п.)
//	НаследоватьРодительскиеКонтексты - Булево - переносить ли родительские контексты в создаваемые.
//
Процедура БыстрыйВводДел(Знач Родитель, Знач Текст,
	Знач ВводНесколькихЗадач, Знач УмныйАнализВвода, Знач НаследоватьРодительскиеКонтексты) Экспорт
	
	РодительскоеДело = ?(ЗначениеЗаполнено(Родитель), Родитель, Справочники.Дела.Inbox);
	
	Массив = Новый Массив;
	Если ВводНесколькихЗадач = Истина Тогда
		Для Индекс = 1 По СтрЧислоСтрок(Текст) Цикл
			Массив.Добавить(СтрПолучитьСтроку(Текст, Индекс));
		КонецЦикла;
	Иначе
		Массив.Добавить(Текст);
	КонецЕсли;
	
	Контексты = ?(НаследоватьРодительскиеКонтексты = Истина, КонтекстыДела(РодительскоеДело), Новый Массив);
	
	Для Каждого Стр Из Массив Цикл
		
		Если ПустаяСтрока(Стр) Тогда
			Продолжить;
		КонецЕсли;
		
		Спр 			= Справочники.Дела.СоздатьЭлемент();
		Спр.Родитель 	= РодительскоеДело;
		Для Каждого Контекст Из Контексты Цикл
			НоваяСтрокаКонтекста = Спр.Контексты.Добавить();
			НоваяСтрокаКонтекста.Контекст = Контекст;
		КонецЦикла;
		
		// Разбираем строку и при необходимости проводим анализ.
		Тема = Стр;
		
		Если УмныйАнализВвода = Истина Тогда
			Структура = АнализТемы(Тема);			
			ЗаполнитьЗначенияСвойств(Спр, Структура);
			// Если есть контексты.
			Если Структура.МассивКонтекстов.Количество() > 0 Тогда
				Для Каждого Контекст Из Структура.МассивКонтекстов Цикл
					НоваяСтрока = Спр.Контексты.Добавить();
					НоваяСтрока.Контекст = Контекст;
				КонецЦикла;
			КонецЕсли;
		Иначе
			Спр.Тема = Тема;
		КонецЕсли;
				
		Спр.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает все контексты дела.
//
// Параметры:
//	Дело - СправочникСсылка.Дела - исходное дело.
//
// Возвращаемое значение:
//	Массив - массив элементов СправочникСсылка.Контексты.
//
Функция КонтекстыДела(Знач Дело) Экспорт
	
	Массив = Новый Массив;
	Если НЕ ЗначениеЗаполнено(Дело) Тогда
		Возврат Массив;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДелаКонтексты.Ссылка КАК Ссылка,
		|	ДелаКонтексты.НомерСтроки КАК НомерСтроки,
		|	ДелаКонтексты.Контекст КАК Контекст
		|ИЗ
		|	Справочник.Дела.Контексты КАК ДелаКонтексты
		|ГДЕ
		|	ДелаКонтексты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Дело);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Массив;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Массив.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

// Получает контекст по его наименованию для текущего пользователя.
// Если контекст не найден он будет создан.
//
// Параметры:
//	Наименование - Строка - наименование контекста
//
// Возвращаемое значение:
//	СправочникСсылка.Контексты - контекст.
//
Функция НайтиКонтекст(Знач Наименование) Экспорт
	
	Если ПустаяСтрока(Наименование) Тогда
		Возврат Справочники.Контексты.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Контексты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контексты КАК Контексты
		|ГДЕ
		|	Контексты.Пользователь = &Пользователь
		|	И Контексты.ПометкаУдаления = ЛОЖЬ
		|	И Контексты.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		
		Возврат Справочники.Контексты.ПустаяСсылка();
		
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.Контексты.ПустаяСсылка();	
		
КонецФункции

// Получает папку по его наименованию для текущего пользователя.
// Если контекст не найден он будет создан.
//
// Параметры:
//	Наименование - Строка - наименование контекста
//
// Возвращаемое значение:
//	СправочникСсылка.Контексты - контекст.
//
Функция НайтиПапку(Знач Наименование) Экспорт
	
	Если ПустаяСтрока(Наименование) Тогда
		Возврат Справочники.Дела.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
        |   Дела.Ссылка КАК Ссылка
        |ИЗ
        |   Справочник.Дела КАК Дела
        |ГДЕ
        |   Дела.Пользователь = &Пользователь
        |   И Дела.ПометкаУдаления = ЛОЖЬ
        |   И Дела.ЭтоПапка = ИСТИНА
        |   И Дела.Тема = &Наименование
        |
        |УПОРЯДОЧИТЬ ПО
        |   Дела.Код УБЫВ";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		
		Возврат Справочники.Дела.ПустаяСсылка();
		
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.Дела.ПустаяСсылка();	
		
КонецФункции

// Получает проект по его наименованию для текущего пользователя.
// Если контекст не найден он будет создан.
//
// Параметры:
//	Наименование - Строка - наименование контекста
//
// Возвращаемое значение:
//	СправочникСсылка.Контексты - контекст.
//
Функция НайтиПроект(Знач Наименование) Экспорт
	
	Если ПустаяСтрока(Наименование) Тогда
		Возврат Справочники.Дела.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
        |   Дела.Ссылка КАК Ссылка
        |ИЗ
        |   Справочник.Дела КАК Дела
        |ГДЕ
        |   Дела.Пользователь = &Пользователь
        |   И Дела.ПометкаУдаления = ЛОЖЬ
        |   И Дела.ЭтоПроект = ИСТИНА
        |   И Дела.Тема = &Наименование
        |
        |УПОРЯДОЧИТЬ ПО
        |   Дела.Код УБЫВ";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		
		Возврат Справочники.Дела.ПустаяСсылка();
		
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.Дела.ПустаяСсылка();	
		
КонецФункции

// Поиск родительского проекта для дела с учетом иерархии.
//
// Параметры:
//	Дело - СправочникСсылка.Дела - исходное дело.
//
// Возвращаемое значение:
//	СправочникСсылка.Дела - найденное дело-проект или пустая ссылка.
//
Функция НайтиРодительскийПроект(Знач Дело) Экспорт
    
	Если НЕ ЗначениеЗаполнено(Дело) Тогда
		Возврат Справочники.Дела.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Дела.Родитель КАК Родитель,
		|	Дела.Родитель.ЭтоПроект КАК РодительЭтоПроект,
		|	Дела.Родитель.Родитель КАК РодительРодитель,
		|	Дела.Родитель.Родитель.ЭтоПроект КАК РодительРодительЭтоПроект,
		|	Дела.Родитель.Родитель.Родитель КАК РодительРодительРодитель,
		|	Дела.Родитель.Родитель.Родитель.ЭтоПроект КАК РодительРодительРодительЭтоПроект,
		|	Дела.Родитель.Родитель.Родитель.Родитель КАК РодительРодительРодительРодитель,
		|	Дела.Родитель.Родитель.Родитель.Родитель.ЭтоПроект КАК РодительРодительРодительРодительЭтоПроект,
		|	Дела.Родитель.Родитель.Родитель.Родитель.Родитель КАК РодительРодительРодительРодительРодитель,
		|	Дела.Родитель.Родитель.Родитель.Родитель.Родитель.ЭтоПроект КАК РодительРодительРодительРодительРодительЭтоПроект
		|ИЗ
		|	Справочник.Дела КАК Дела
		|ГДЕ
		|	Дела.Ссылка = &Дело"; 
    
	ТекДело = Дело;
	Пока Истина Цикл 
	    Запрос.УстановитьПараметр("Дело", ТекДело); 
	    Результат = Запрос.Выполнить(); 
	    Если Результат.Пустой() Тогда 
	        Прервать; 
	    КонецЕсли; 
	    Выборка = Результат.Выбрать(); 
	    Выборка.Следующий(); 
		НомерКолонки = 0;
	    Пока НомерКолонки < Результат.Колонки.Количество() Цикл 
	        ТекДело = Выборка[НомерКолонки]; 
	        Если ТекДело = Справочники.Дела.ПустаяСсылка() Тогда 
	            Прервать; 
	        Иначе 
                Если Выборка[НомерКолонки + 1] = Истина Тогда
                    Возврат ТекДело;
                КонецЕсли;
			КонецЕсли; 
			НомерКолонки = НомерКолонки + 2;
	    КонецЦикла; 

	    Если НЕ ЗначениеЗаполнено(ТекДело) Тогда 
	        Прервать; 
	    КонецЕсли; 
	КонецЦикла;	
	
	Возврат Справочники.Дела.ПустаяСсылка();    
    
КонецФункции

// Содержится ли регулярное выражение в строке или нет по маске RegExp.
//
// Параметры:
//  Строка - Строка - исходная строка.
//  Фасет - Строка - маска RegExp.
//
// Возвращаемое значение:
//	Булево - Истина если содержится, иначе Ложь.
//
Функция ПроверитьСтроку(Знач Строка, Знач Фасет) Экспорт
	
    Чтение = Новый ЧтениеXML;
    Чтение.УстановитьСтроку(
        "<Model xmlns=""http://v8.1c.ru/8.1/xdto"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" 
		|xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:type=""Model"">
        |<package targetNamespace=""sample-my-package"">
        |<valueType name=""testtypes"" base=""xs:string"">
        |<pattern>" + Фасет + "</pattern>
        |</valueType>
        |<objectType name=""TestObj"">
        |<property xmlns:d4p1=""sample-my-package"" name=""TestItem"" type=""d4p1:testtypes""/>
        |</objectType>
        |</package>
        |</Model>");

    Модель          = ФабрикаXDTO.ПрочитатьXML(Чтение);
    МояФабрикаXDTO  = Новый ФабрикаXDTO(Модель);
    Пакет           = МояФабрикаXDTO.Пакеты.Получить("sample-my-package");
    Тест            = МояФабрикаXDTO.Создать(Пакет.Получить("TestObj"));

    Попытка
        Тест.TestItem = Строка;
        Возврат Истина
    Исключение
        Возврат Ложь
    КонецПопытки;
    
КонецФункции

// Выполняет анализ темы и возвращает структуру с найденными реквизитами и урезенной темой.
//
// Параметры:
//  СтрокаТемы - Строка - исходная строка.
//
// Возвращаемое значение:
//  Структура - структура с разобранными элементами.
//      * Тема - Строка - то, что получилось осталось после разбора.
//      * Начало - Дата - дата начала дела.
//      * Срок - Дата - срок дела.
//      * ИспользоватьВремя - Булево - используется ли в деле время.
//      * ЭтоПроект - Булево - признак проекта.
//      * ЭтоПапка - Булево - признак папки.
//      * МассивКонтекстов - Массив - массив найденных контекстов.
//      * Родитель - СправочникСсылка.Дела  - родитель создаваемого дела.
//      * Избранное - Булево - является ли дело избранным.
//      * Отметка - Число - номер отметки дела.
//
Функция АнализТемы(Знач СтрокаТемы) Экспорт

#Область ТЕСТЫ
// 0. Месяцы и даты -папка
// 1. сделать дело янв26
// 2. сделать дело янв6
// 3. сделать дело январь26
// 4. сделать дело январь6
// 5. сделать дело янв 26
// 6. сделать дело янв 6
// 7. сделать дело январь 26
// 8. сделать дело январь 6
// 9. сделать дело 26янв
// 10. сделать дело 26 января
// 11. сделать дело 6 января
// 12. сделать дело 6 августа
// 13. Купить бластеры +@Война;
// 14. Купить бластеры и помириться +@Война;+@Мир;
// 15. сделать дело сегодня в 15:00
// 16. сделать дело сегодня в 15-00
// 17. сделать дело сегодня
// 18. сделать дело завтра в 15:00
// 19. сделать дело завтра в 15-00
// 20. сделать дело завтра
// 21. Добавляет признак "Это папка" -папка
// 22. Тест дней недели (1) в понедельник в 13:00
// 23. Тест дней недели (2) во вторник в 13:00
// 24. Тест дней недели (3) в среду в 13:00
// 25. Тест дней недели (4) в четверг в 13:00
// 26. Тест дней недели (5) в пятницу в 13:00
// 27. Тест дней недели (6) в субботу в 13:00
// 28. Тест дней недели (7) в воскресенье в 13:00

// 29. Тест дней недели (1) без времени в понедельник
// 30. Тест дней недели (2) без времени во вторник
// 31. Тест дней недели (3) без времени в среду
// 32. Тест дней недели (4) без времени в четверг
// 33. Тест дней недели (5) без времени в пятницу
// 34. Тест дней недели (6) без времени в субботу
// 35. Тест дней недели (7) без времени в воскресенье

// 36. Тест дней недели краткий (1) в пн в 13-00
// 37. Тест дней недели краткий (2) во вт в 13-00
// 38. Тест дней недели краткий (3) в ср в 13-00
// 39. Тест дней недели краткий (4) в чт в 13-00
// 40. Тест дней недели краткий (5) в пт в 13-00
// 41. Тест дней недели краткий (6) в сб в 13-00
// 42. Тест дней недели краткий (7) в вс в 13-00

// 43. Сделать дело Через 5 дней
// 43. Сделать дело Через 15 дней
// 44. Сделать дело Через 2 дня
// 45. Сделать дело Через 5 дн
// 46. Сделать дело Через 15 дн

// 47. Сделать дело через месяц в 15-00
// 48. Сделать дело через месяц в 15:00
// 49. Сделать дело через месяц
// 50. Сделать дело через 2 месяца
// 51. Сделать дело через 2 месяца в 10:00

// 52. Сделать дело через 1 неделю
// 53. Сделать дело через 2 недели
// 53. Сделать дело через 24 недели
// 54. Сделать дело через 5 недель
// 54. Сделать дело через 10 недель
// 55. Сделать дело через 1 нед
// 56. Сделать дело через 10 нед
// 57. Сделать дело через неделю
// 58. Сделать дело через неделю в 18-00
// 59. Сделать дело через неделю в 9:00

#КонецОбласти	

	Тема 				= СокрЛП(СтрокаТемы);
	нТема 				= НРег(Тема);
	мТекДата			= ТекущаяДатаСеанса();
	Начало 				= Дата(1, 1, 1);
	Срок 				= Дата(1, 1, 1);
	ИспользоватьВремя 	= Ложь;
	ЭтоПроект			= Ложь;
	ЭтоПапка			= Ложь;
	МассивКонтекстов	= Новый Массив;
	Родитель			= Справочники.Дела.Inbox;
	Избранное			= Ложь;
	Отметка				= 0;
    
    мНачалоДняТекДата   = НачалоДня(мТекДата);
    
	#Область Срок            
	
	#Область СЕГОДНЯ_В_15_00
	// Сделать дело сегодня в [15:00|15-00]
	Префикс = НСтр("ru = 'сегодня в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}-\d{2}.*") Тогда
    		Срок 				= НачалоДня(мТекДата);
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, Префикс);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 5;
    		Если Часов > 0 Тогда
    			Срок    = Срок + Часов * 3600 + Минут * 60;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли; 
	#КонецОбласти

	#Область СЕГОДНЯ_В_15
	// Сегодня в [15|15]    
	Префикс = НСтр("ru = 'сегодня в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;    		
    		ИндексНачала        = СтрНайти(нТема, Префикс);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = 0;
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 2;
    		Если Часов > 0 Тогда
    			Срок    = Срок + Часов * 3600 + Минут * 60;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область СЕГОДНЯ_В_9
	// Сегодня в [9|9]
	Префикс = НСтр("ru = 'сегодня в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{1}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, Префикс);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		Минут               = 0;
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 1;
    		Если Часов > 0 Тогда
    			Срок    = Срок + Часов * 3600 + Минут * 60;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти    
    
	#Область СЕГОДНЯ
	// Сделать дело сегодня
	Префикс = НСтр("ru = 'сегодня'");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда
    		Срок 			= НачалоДня(мТекДата);
    		ИндексНачала    = СтрНайти(нТема, Префикс);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);		
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти	
	
	#Область ЗАВТРА_В_15_00
	//завтра в [15:00|15-00]
	Префикс = НСтр("ru = 'завтра в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}-\d{2}.*") Тогда
    		Срок 				= НачалоДня(мТекДата) + 86400;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, Префикс);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 5;
    		Если Часов > 0 Тогда
    			Срок    = Срок + Часов * 3600 + Минут * 60;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
        
	#Область ЗАВТРА_В_15
	// завтра в [15|15]
	Префикс = НСтр("ru = 'завтра в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата + 86400;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, Префикс);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = 0;
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 2;
    		Если Часов > 0 Тогда
    			Срок    = Срок + Часов * 3600 + Минут * 60;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти    
    
	#Область ЗАВТРА_В_9
	// завтра в [9|9]
	Префикс = НСтр("ru = 'завтра в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{1}.*") Тогда
    		Срок 				= мНачалоДняТекДата + 86400;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, Префикс);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		Минут               = 0;
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 1;
    		Если Часов > 0 Тогда
    			Срок    = Срок + Часов * 3600 + Минут * 60;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти    
	
	#Область ЗАВТРА
	// Сделать дело завтра
	Префикс = НСтр("ru = 'завтра'");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда
    		Срок 			= КонецДня(мТекДата) + 1;
    		ИндексНачала    = СтрНайти(нТема, Префикс);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);		
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_5_ДНЕЙ_В_18_00
	// Через 5 дней в 18-00
    Если СтрНайти(нТема, "через ") > 0 И СтрНайти(нТема, " дней в ") > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} дней в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*через \d{1} дней в \d{2}-\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, "через", НаправлениеПоиска.СКонца);
    		Дней                = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через "), 1));
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через _ дней в "), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина("через _ дней в __:__") + 1;
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400;
    			Если Часов > 0 Тогда
    				 Срок = Срок + Часов * 3600 + Минут * 60
    			КонецЕсли;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_5_ДНЕЙ_В_9_00
	// Через 5 дней в 18-00
    Если СтрНайти(нТема, "через ") > 0 И СтрНайти(нТема, " дней в ") > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} дней в \d{1}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*через \d{1} дней в \d{1}-\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, "через", НаправлениеПоиска.СКонца);
    		Дней                = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через "), 1));
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через _ дней в "), 1));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 2, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина("через _ дней в _:__") + 1;
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400;
    			Если Часов > 0 Тогда
    				 Срок = Срок + Часов * 3600 + Минут * 60
    			КонецЕсли;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти    
    
	#Область ЧЕРЕЗ_5_ДНЕЙ
	// Через 5 дней
	Префикс = "через ";
	Постфикс = " дней";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} дней.*") Тогда
    		Срок 				= мТекДата;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней                = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_3_ДНЯ_В_18_00
	// Через 5 дней в 18-00
    Если СтрНайти(нТема, "через ") > 0 И СтрНайти(нТема, " дня в ") > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} дня в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*через \d{1} дня в \d{2}-\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, "через", НаправлениеПоиска.СКонца);
    		Дней                = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через "), 1));
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через _ дня в "), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина("через _ дня в __:__") + 1;
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400;
    			Если Часов > 0 Тогда
    				 Срок = Срок + Часов * 3600 + Минут * 60
    			КонецЕсли;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_3_ДНЯ_В_9_00
	// Через 5 дней в 18-00
    Если СтрНайти(нТема, "через ") > 0 И СтрНайти(нТема, " дня в ") > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} дня в \d{1}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*через \d{1} дня в \d{1}-\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, "через", НаправлениеПоиска.СКонца);
    		Дней                = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через "), 1));
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через _ дня в "), 1));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 2, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина("через _ дня в _:__") + 1;
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400;
    			Если Часов > 0 Тогда
    				 Срок = Срок + Часов * 3600 + Минут * 60
    			КонецЕсли;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти    
    
	#Область ЧЕРЕЗ_3_ДНЯ
	// Через 3 дня
	Префикс = "через ";
	Постфикс = " дня";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} дня.*") Тогда
    		Срок 				= мТекДата;
    		ИндексНачала        = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней                = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#Область ЧЕРЕЗ_5_ДН
	// Через 5 дн
	Префикс = "через ";
	Постфикс = " дн";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} дн.*") Тогда
    		Срок 			= мТекДата;
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней            = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_15_ДНЕЙ_В_18_00
	// Через 15 дней в 18-00
    Если СтрНайти(нТема, "через ") > 0 И СтрНайти(нТема, " дней в ") > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{2} дней в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*через \d{2} дней в \d{2}-\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, "через", НаправлениеПоиска.СКонца);
    		Дней                = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через "), 2));
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через __ дней в "), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина("через __ дней в __:__") + 1;
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400;
    			Если Часов > 0 Тогда
    				 Срок = Срок + Часов * 3600 + Минут * 60
    			КонецЕсли;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_15_ДНЕЙ_В_9_00
	// Через 15 дней в 18-00
    Если СтрНайти(нТема, "через ") > 0 И СтрНайти(нТема, " дней в ") > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{2} дней в \d{1}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*через \d{2} дней в \d{1}-\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;
    		
    		ИндексНачала        = СтрНайти(нТема, "через", НаправлениеПоиска.СКонца);
    		Дней                = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через "), 2));
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через __ дней в "), 1));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 2, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина("через __ дней в _:__") + 1;
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400;
    			Если Часов > 0 Тогда
    				 Срок = Срок + Часов * 3600 + Минут * 60
    			КонецЕсли;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти    
    
	#Область ЧЕРЕЗ_15_ДНЕЙ
	// Сделать дело через 00 дней
	Префикс = НСтр("ru = 'через '");
	Постфикс = НСтр("ru = ' дней'");
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}" + Постфикс + ".*") Тогда
    		Срок 			= мТекДата;
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней 			= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 2 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок 	= Срок + Дней * 86400;
    			Тема 	= СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема 	= НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_15_ДН
	// Сделать дело через 00 дней
	Префикс = "через ";
	Постфикс = " дн";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{2} дн.*") Тогда
    		Срок 			= мТекДата;
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней 			= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 2 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок 	= Срок + Дней * 86400;
    			Тема 	= СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема 	= НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти    
	
	#Область ЧЕРЕЗ_3_НЕДЕЛИ
	// Через 3 недели
	Префикс = "через ";
	Постфикс = " недели";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} недели.*") Тогда
    		Срок 			= мТекДата;
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней            = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400 * 7;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;    		
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти	
	
	#Область ЧЕРЕЗ_1_НЕДЕЛЮ
	// Через 1 неделю
	Префикс = "через ";
	Постфикс = " неделю";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} неделю.*") Тогда
    		Срок 			= мТекДата;
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней            = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400 * 7;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
     КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_НЕДЕЛЮ_В_18_00
	// Через неделю в 18-00
	Префикс = НСтр("ru = 'через неделю в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
        Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}:\d{2}.*")
            ИЛИ ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}-\d{2}.*") Тогда
            ИспользоватьВремя   = Истина;
    		Срок 			    = мНачалоДняТекДата + 86400 * 7;
    		ИндексНачала        = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней                = 7;
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));        
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 5;
    		Если Часов > 0 Тогда
    			Срок    = Срок + Часов * 3600 + Минут * 60;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_НЕДЕЛЮ_В_9_00
	// Через неделю в 9-00
    Префикс = НСтр("ru = 'через неделю в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
        Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{1}:\d{2}.*")
            ИЛИ ПроверитьСтроку(нТема, ".*" + Префикс + "\d{1}-\d{2}.*") Тогда
            ИспользоватьВремя   = Истина;
    		Срок 			    = мНачалоДняТекДата + 86400 * 7;
    		ИндексНачала        = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней                = 7;
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 2, 2));        
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 4;
    		Если Часов > 0 Тогда
    			Срок            = Срок + Часов * 3600 + Минут * 60;
    			Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема           = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_НЕДЕЛЮ
	// Через неделю
	Префикс = НСтр("ru = 'через неделю'");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
        Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда
    		Срок 			= мНачалоДняТекДата + 86400 * 7;    		
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти    
    	
	#Область ЧЕРЕЗ_5_НЕДЕЛЬ
	// Через 3 дня
	Префикс = "через ";
	Постфикс = " недель";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} недель.*") Тогда
    		Срок 			= мТекДата;    		
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней            = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400 * 7;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#Область ЧЕРЕЗ_20_НЕД
	// Через 20 нед
	Префикс = "через ";
	Постфикс = " нед";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{2} нед.*") Тогда
    		Срок 			= мТекДата;
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней            = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400 * 7;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#Область ЧЕРЕЗ_1_НЕД
	// Через 1 нед
	Префикс = "через ";
	Постфикс = " нед";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} нед.*") Тогда
    		Срок 			= мТекДата;    		
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Дней            = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Дней > 0 Тогда
    			Срок    = Срок + Дней * 86400 * 7;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#Область ЧЕРЕЗ_МЕСЯЦ_В_15_00
	// Через 1 нед
	Префикс = НСтр("ru = 'через месяц в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}-\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
            ИспользоватьВремя   = Истина;
    		ИндексНачала        = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс) + 5;
    		Если Часов > 0 Тогда
    			Срок    = ДобавитьМесяц(Срок, 1) + Часов * 3600 + Минут * 60;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
    		
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#Область ЧЕРЕЗ_МЕСЯЦ
	// Через 1 нед
	Префикс = "через месяц";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через месяц.*") Тогда
    		Срок 			= НачалоДня(мТекДата);    		
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1;
    		Срок            = ДобавитьМесяц(Срок, 1);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти	
		
	#Область ЧЕРЕЗ_2_МЕСЯЦА_В_15_00
	// Через 2 месяца в 15:00
    Префикс = "через ";
    Постфикс = " месяца в ";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} месяца в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*через \d{1} месяца в \d{2}-\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, "через", НаправлениеПоиска.СКонца);
    		Мес                 = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через "), 1));
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через _ месяца в "), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина("через _ месяца в __:__") + 1;
    		Если Мес > 0 Тогда
    			Срок    = ДобавитьМесяц(Срок, Мес);
    			Если Часов > 0 Тогда
    				 Срок = Срок + Часов * 3600 + Минут * 60
    			КонецЕсли;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;    		
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
    
	#Область ЧЕРЕЗ_2_МЕСЯЦА_В_9_00
	// Через 2 месяца в 15:00
    Префикс = "через ";
    Постфикс = " месяца в ";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} месяца в \d{1}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*через \d{1} месяца в \d{1}-\d{2}.*") Тогда
    		Срок 				= мНачалоДняТекДата;
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала        = СтрНайти(нТема, "через", НаправлениеПоиска.СКонца);
    		Мес                 = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через "), 1));
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина("через _ месяца в "), 1));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 2, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина("через _ месяца в _:__") + 1;
    		Если Мес > 0 Тогда
    			Срок    = ДобавитьМесяц(Срок, Мес);
    			Если Часов > 0 Тогда
    				 Срок = Срок + Часов * 3600 + Минут * 60
    			КонецЕсли;
    			Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема   = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти    
      
	#Область В_ПОНЕДЕЛЬНИК
    
	// Сделать дело в понедельник в 12:45
	Префикс = НСтр("ru = 'в понедельник в '");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 1);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
    	КонецЕсли;
    КонецЕсли;    
    
	// Сделать дело понедельник 12:45
	Префикс = " понедельник ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*понедельник \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*понедельник \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 1);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело в понедельник
	Префикс = "в понедельник";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в понедельник.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 1);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	
	// Сделать дело в пн в 14-00 
	Префикс = "в пн в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в пн в \d{2}:\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов 				= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут 				= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс);
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 1);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	
	// Сделать дело в пн (в пн в конце строки)
	Префикс = "в пн";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в пн.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 1);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти			
	
	#Область ВО_ВТОРНИК
	
	// Сделать дело во вторник в 12:45
	Префикс = "во вторник в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*во вторник в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*во вторник в \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 2);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема                = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема               = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело вторник 12:45
	Префикс = "вторник ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*вторник \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*вторник \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 2);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело во вторник
	Префикс = "во вторник";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*во вторник.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 2);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	
	// Сделать дело во вт в 14-00 
	Префикс = "во вт в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*во вт в \d{2}:\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов 				= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут 				= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс);
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 2);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	
	// Сделать дело во вт (во вт в конце строки)
	Префикс = "во вт";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*во вт.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 2);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти			

	#Область В_СРЕДУ
	// Сделать дело в среду в 12:45
	Префикс = "в среду в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в среду в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*в среду в \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 3);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело среда 12:45
	Префикс = "среда ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*среда \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*среда \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 3);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	
	// Сделать дело в среду
	Префикс = "в среду";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в среду.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 3);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело в ср в 14-00 
	Префикс = "в ср в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в ср в \d{2}:\d{2}.*") Тогда
    		ИспользоватьВремя   = Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов 				= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут 				= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс);
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 3);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело в ср (в ср в конце строки)
	Префикс = "в ср";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в ср.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 3);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#Область В_ЧЕТВЕРГ
	// Сделать дело в четверг в 12:45
	Префикс = "в четверг в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в четверг в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*в четверг в \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 4);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
    // Сделать дело четверг 12:45
	Префикс = "четверг ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*четверг \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*четверг \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 4);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело во вторник
	Префикс = "в четверг";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в четверг.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 4);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело в чт в 14-00 
	Префикс = "в чт в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в чт в \d{2}:\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов 			= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут 			= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 4);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело во вт (в ср в конце строки)
    Префикс = "в чт";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в чт.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 4);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
    
	#КонецОбласти			
	
	#Область В_ПЯТНИЦУ
	
	// Сделать дело в пятницу в 12:45
	Префикс = "в пятницу в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в пятницу в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*в пятницу в \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов           = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут           = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 5);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
    // Сделать дело пятница 12:45
	Префикс = "пятница ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*пятница \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*пятница \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 5);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
			
	// Сделать дело во вторник
	Префикс = "в пятницу";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в пятницу.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 5);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело в пт в 14-00 
	Префикс = "в пт в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в пт в \d{2}:\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов 				= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут 				= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания     = ИндексНачала + СтрДлина(Префикс);
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 5);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	// Сделать дело во вт (в ср в конце строки)
	Префикс = "в пт";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в пт.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 5);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#Область В_СУББОТУ
	// Сделать дело суббота 12:45
	Префикс = "суббота ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*суббота \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*суббота \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;    		
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 6);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	
	// Сделать дело в субботу в 12:45
	Префикс = "в субботу в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в субботу в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*в субботу в \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 6);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело в субботу
	Префикс = "в субботу";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в субботу.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 6);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело в сб в 14-00 
	Префикс = "в сб в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в сб в \d{2}:\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов 			= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут 			= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 6);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело во сб (в сб в конце строки)
	Префикс = "в сб";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в сб.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 6);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
    
	#КонецОбласти
	
	#Область В_ВОСКРЕСЕНЬЕ
    
	// Сделать дело воскресенье 12:45    
	Префикс = "воскресенье ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*воскресенье \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*воскресенье \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 7);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	
	// Сделать дело в воскресенье в 12:45
	Префикс = "в воскресенье в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в воскресенье в \d{2}:\d{2}.*")
    		ИЛИ ПроверитьСтроку(нТема, ".*в воскресенье в \d{2}-\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 		= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут               = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания 	= ИндексНачала + СтрДлина(Префикс) + 5;
    		Срок 				= ПолучитьСледующийДеньНедели(мТекДата, 7);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело в воскресенье
	Префикс = "в воскресенье";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в воскресенье.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 7);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело в вс в 14-00     
	Префикс = "в вс в ";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в вс в \d{2}:\d{2}.*") Тогда
    		ИспользоватьВремя 	= Истина;
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Часов 			= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
    		Минут 			= СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс) + 3, 2));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 7);
    		Если Часов > 0 Тогда
    			Срок = НачалоДня(Срок) + Часов * 3600 + Минут * 60;
    		КонецЕсли;
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема   = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
	// Сделать дело во вс (в вс в конце строки)
	Префикс = "в вс";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*в вс.*") Тогда
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок 			= ПолучитьСледующийДеньНедели(мТекДата, 7);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);				
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#Область Январь26__Январь_26__26Январь__26_Январь
	
	#Область ИнициализацияМассиваМесяцев
	// Порядок элементов имеет значение (длинные в начале, короткие в конце).
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("январь", 1));
	Массив.Добавить(Новый Структура("января", 1));
    Массив.Добавить(Новый Структура("янв", 1));
	Массив.Добавить(Новый Структура("февраль", 2));
	Массив.Добавить(Новый Структура("февраля", 2));
    Массив.Добавить(Новый Структура("фев", 2));
    
    Массив.Добавить(Новый Структура("марта", 3));
	Массив.Добавить(Новый Структура("март", 3));
	Массив.Добавить(Новый Структура("мар", 3));
    
	Массив.Добавить(Новый Структура("апрель", 4));
	Массив.Добавить(Новый Структура("апреля", 4));
	Массив.Добавить(Новый Структура("апр", 4));
    
	Массив.Добавить(Новый Структура("май", 5));
	Массив.Добавить(Новый Структура("мая", 5));
    
	Массив.Добавить(Новый Структура("июнь", 6));
	Массив.Добавить(Новый Структура("июня", 6));
	Массив.Добавить(Новый Структура("июн", 6));
    
	Массив.Добавить(Новый Структура("июль", 7));
	Массив.Добавить(Новый Структура("июля", 7));
	Массив.Добавить(Новый Структура("июл", 7));
    
    Массив.Добавить(Новый Структура("августа", 8));
	Массив.Добавить(Новый Структура("август", 8));
	Массив.Добавить(Новый Структура("авг", 8));
    
	Массив.Добавить(Новый Структура("сентябрь", 9));
	Массив.Добавить(Новый Структура("сентября", 9));
	Массив.Добавить(Новый Структура("сент", 9));
	Массив.Добавить(Новый Структура("сен", 9));
    
	Массив.Добавить(Новый Структура("октябрь", 10));
	Массив.Добавить(Новый Структура("октября", 10));
	Массив.Добавить(Новый Структура("окт", 10));
    
	Массив.Добавить(Новый Структура("ноябрь", 11));
	Массив.Добавить(Новый Структура("ноября", 11));
	Массив.Добавить(Новый Структура("нояб", 11));
	Массив.Добавить(Новый Структура("ноя", 11));
    
	Массив.Добавить(Новый Структура("декабрь", 12));
	Массив.Добавить(Новый Структура("декабря", 12));
    Массив.Добавить(Новый Структура("декаб ", 12));
	Массив.Добавить(Новый Структура("декаб", 12));
	Массив.Добавить(Новый Структура("дек", 12));
	#КонецОбласти
	
	Для НомерЭлемента = 0 По Массив.Количество() - 1 Цикл
		
		Структура = Массив.Получить(НомерЭлемента);
		Для Каждого КЗ Из Структура Цикл
			Префикс = КЗ.Ключ;
			Мес 	= КЗ.Значение;
        КонецЦикла;
        
        Если СтрНайти(нТема, Префикс) = 0 Тогда
            Продолжить;
        КонецЕсли;
		
		#Область Янв26
		// Сделать дело янв26(январь26)
        Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{2}.*") Тогда
            ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
            ИндексОкончания	= ИндексНачала + СтрДлина(Префикс) + 2;
            День            = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 2));
            Год             = Год(мТекДата);
            Если День > 0 Тогда
                Попытка
                    Если Дата(Год, Мес, День) < НачалоДня(мТекДата) Тогда
                        Год = Год + 1;
                    КонецЕсли;
                    Срок    = Дата(Год, Мес, День);
                    Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
                    нТема   = НРег(Тема);
                Исключение
                КонецПопытки;
            КонецЕсли;
        КонецЕсли;
		#КонецОбласти
        
		#Область Янв_26
		// Сделать дело янв 26(январь 26)
        Если ПроверитьСтроку(нТема, ".*" + Префикс + " \d{2}.*") Тогда
            ИндексНачала 	= СтрНайти(нТема, Префикс + " ", НаправлениеПоиска.СКонца);
            ИндексОкончания	= ИндексНачала + СтрДлина(Префикс) + 3;
            День            = СтрокуВЧисло(Сред(нТема, ИндексНачала + 1 + СтрДлина(Префикс), 2));
            Год             = Год(мТекДата);
            Если День > 0 Тогда
                Попытка
                    Если Дата(Год, Мес, День) < НачалоДня(мТекДата) Тогда
                        Год = Год + 1;
                    КонецЕсли;
                    Срок    = Дата(Год, Мес, День);
                    Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
                    нТема   = НРег(Тема);
                Исключение
                КонецПопытки;
            КонецЕсли;
        КонецЕсли;
		#КонецОбласти        
		
		#Область Янв6
		// Сделать дело янв6(январь6)
		Если ПроверитьСтроку(нТема, ".*" + Префикс + "\d{1}.*") Тогда
			ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
			ИндексОкончания	= ИндексНачала + СтрДлина(Префикс) + 1;
			День            = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
			Год             = Год(мТекДата);
			Если День > 0 Тогда
				Попытка
					Если Дата(Год, Мес, День) < НачалоДня(мТекДата) Тогда
						Год = Год + 1;
					КонецЕсли;
					Срок    = Дата(Год, Мес, День);
					Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
					нТема   = НРег(Тема);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		#КонецОбласти

		#Область Янв_6
		// Сделать дело янв 6(январь 6)
		Если ПроверитьСтроку(нТема, ".*" + Префикс + " \d{1}.*") Тогда
			ИндексНачала 	= СтрНайти(нТема, Префикс + " ", НаправлениеПоиска.СКонца);
			ИндексОкончания	= ИндексНачала + СтрДлина(Префикс) + 2;
			День            = СтрокуВЧисло(Сред(нТема, ИндексНачала + 1 + СтрДлина(Префикс), 1));
			Год             = Год(мТекДата);
			Если День > 0 Тогда
				Попытка
					Если Дата(Год, Мес, День) < НачалоДня(мТекДата) Тогда
						Год = Год + 1;
					КонецЕсли;
					Срок    = Дата(Год, Мес, День);
					Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
					нТема   = НРег(Тема);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		#КонецОбласти
        
		#Область _26Янв
		// Сделать дело 26янв (26января)
		Если ПроверитьСтроку(нТема, ".*" + "\d{2}" + Префикс + ".*") Тогда
			ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца) - 2;
			ИндексОкончания	= ИндексНачала + СтрДлина(Префикс) + 2;
			День            = СтрокуВЧисло(Сред(нТема, ИндексНачала, 2));
			Год             = Год(мТекДата);
			Если День > 0 Тогда
				Попытка
					Если Дата(Год, Мес, День) < НачалоДня(мТекДата) Тогда
						Год = Год + 1;
					КонецЕсли;
					Срок    = Дата(Год, Мес, День);
					Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
					нТема   = НРег(Тема);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		#КонецОбласти
        
		#Область _26_Янв
		// Сделать дело 26 янв (26 января)
		Если ПроверитьСтроку(нТема, ".*" + "\d{2} " + Префикс + ".*") Тогда
			ИндексНачала 	= СтрНайти(нТема, " " + Префикс, НаправлениеПоиска.СКонца) - 2;
			ИндексОкончания	= ИндексНачала + СтрДлина(Префикс) + 3;
			День            = СтрокуВЧисло(Сред(нТема, ИндексНачала, 2));
			Год             = Год(мТекДата);
			Если День > 0 Тогда
				Попытка
					Если Дата(Год, Мес, День) < НачалоДня(мТекДата) Тогда
						Год = Год + 1;
					КонецЕсли;
					Срок    = Дата(Год, Мес, День);
					Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
					нТема   = НРег(Тема);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		#КонецОбласти        
        
		#Область _6Янв
		// Сделать дело 6янв (6января)
		Если ПроверитьСтроку(нТема, ".*" + "\d{1}" + Префикс + ".*") Тогда
			ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца) - 1;
			ИндексОкончания	= ИндексНачала + СтрДлина(Префикс)+1;
			День            = СтрокуВЧисло(Сред(нТема, ИндексНачала, 1));
			Год             = Год(мТекДата);
			Если День > 0 Тогда
				Попытка
					Если Дата(Год, Мес, День) < НачалоДня(мТекДата) Тогда
						Год = Год + 1;
					КонецЕсли;
					Срок    = Дата(Год, Мес, День);
					Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
					нТема   = НРег(Тема);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		#КонецОбласти        
        
		#Область _6_Янв
		// Сделать дело 6 янв (6 января)
		Если ПроверитьСтроку(нТема, ".*" + "\d{1} " + Префикс + ".*") Тогда
			ИндексНачала 	= СтрНайти(нТема, " " + Префикс, НаправлениеПоиска.СКонца) - 1;
			ИндексОкончания	= ИндексНачала + СтрДлина(Префикс) + 2;
			День            = СтрокуВЧисло(Сред(нТема, ИндексНачала, 1));
			Год             = Год(мТекДата);
			Если День > 0 Тогда
				Попытка
					Если Дата(Год, Мес, День) < НачалоДня(мТекДата) Тогда
						Год = Год + 1;
					КонецЕсли;
					Срок    = Дата(Год, Мес, День);
					Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
					нТема   = НРег(Тема);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		#КонецОбласти        
        
    КонецЦикла;

	
	// Ноя 26 08

	// Через 3 недели 14:00

	// Через 3 недели в пт

				
	#Область ЧЕРЕЗ_3_МЕСЯЦА
	// Через 3 месяца
	Префикс = "через ";
	Постфикс = " месяца";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} месяца.*") Тогда
    		Срок 			= НачалоДня(мТекДата);
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Мес             = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Мес > 0 Тогда
    			Срок        = ДобавитьМесяц(Срок, Мес);
    			Тема        = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема       = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
				
	#Область ЧЕРЕЗ_5_МЕСЯЦЕВ
	// Через 5 месяцев
	Префикс = "через ";
	Постфикс = " месяцев";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} месяцев.*") Тогда
    		Срок 			= НачалоДня(мТекДата);
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Мес             = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Мес > 0 Тогда
    			Срок        = ДобавитьМесяц(Срок, Мес);
    			Тема        = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема       = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#Область ЧЕРЕЗ_1_МЕСЯЦ
	// Через 1 месяц
	Префикс = "через ";
	Постфикс = " месяц";
    Если СтрНайти(нТема, Префикс) > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*через \d{1} месяц.*") Тогда
    		Срок 			= НачалоДня(мТекДата);
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Мес             = СтрокуВЧисло(Сред(нТема, ИндексНачала + СтрДлина(Префикс), 1));
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс) + 1 + СтрДлина(Постфикс);
    		Если Мес > 0 Тогда
    			Срок        = ДобавитьМесяц(Срок, Мес);
    			Тема        = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    			нТема       = НРег(Тема);
    		КонецЕсли;
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти

	#Область ЧЕРЕЗ_МЕСЯЦ
	// Через месяц
	Префикс = НСтр("ru = 'через месяц'");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда
    		Срок 			= НачалоДня(мТекДата);
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		Мес             = 1;
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок            = ДобавитьМесяц(Срок, Мес);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	// Сегодня через 1ч 25 мин

	#Область ЧЕРЕЗ_ГОД
	// Сделать дело через год
	Префикс = НСтр("ru = 'через год'");
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда
    		Срок 			= мТекДата;
    		ИндексНачала    = СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Срок            = ДобавитьМесяц(Срок, 12);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	//3-26-2008

	//26-3-2008
				
	#Область _26_03_2008
	// Сделать дело 26.03.2008
	Если ПроверитьСтроку(нТема, ".*\d{2}\.\d{2}.\d{4}.*") Тогда
		Срок 		    = мТекДата;
		ИндексНачала    = СтрДлина(нТема) - 9;
		День            = СтрокуВЧисло(Сред(нТема, ИндексНачала, 2));
		Мес             = СтрокуВЧисло(Сред(нТема, ИндексНачала + 3, 2));
		Год             = СтрокуВЧисло(Сред(нТема, ИндексНачала + 6, 4));
		Если Год > 2000 Тогда
			Попытка
				Срок    = Дата(Год, Мес, День);
				Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1));
				нТема   = НРег(Тема);
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;			
	#КонецОбласти
	
	#Область _26_03_08
	// Сделать дело 26.03.08
	Если ПроверитьСтроку(нТема, ".*\d{2}\.\d{2}.\d{2}.*") Тогда
		Срок 			= мТекДата;
		ИндексНачала    = СтрДлина(нТема) - 7;
		День            = СтрокуВЧисло(Сред(нТема, ИндексНачала, 2));
		Мес             = СтрокуВЧисло(Сред(нТема, ИндексНачала + 3, 2));
		Год             = СтрокуВЧисло("20" + Сред(нТема, ИндексНачала + 6, 2));
		Если Год > 2000 Тогда
			Попытка
				Срок    = Дата(Год, Мес, День);
				Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1));
				нТема   = НРег(Тема);
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;			
	#КонецОбласти			
				
	#Область _26_03
	// Сделать дело 26.03
	Если ПроверитьСтроку(нТема, ".*\d{2}\.\d{2}.*") Тогда
		ИндексНачала    = СтрДлина(нТема) - 4;
		День            = СтрокуВЧисло(Сред(нТема, ИндексНачала, 2));
		Мес             = СтрокуВЧисло(Сред(нТема, ИндексНачала + 3, 2));
		Год             = Год(мТекДата);				
		Если Мес > 0 Тогда
			Попытка
				Если Дата(Год, Мес, День) < мТекДата Тогда
					Год = Год + 1;
				КонецЕсли;
				Срок    = Дата(Год, Мес, День);
				Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала - 1));
				нТема   = НРег(Тема);
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;			
	#КонецОбласти			
	
	#КонецОбласти
       
	#КонецОбласти
	
	#Область ЭтоПапка
	
	#Область _ПАПКА
	// Сделать дело -папка
	Префикс = "-папка";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда		
    		ЭтоПапка        = Истина;		
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);		
        КонецЕсли;
    КонецЕсли; 
	#КонецОбласти	
	
	#КонецОбласти
	
	#Область ЭтоПроект
	
	#Область _проект
    // Сделать дело -проект
	Префикс = "-проект";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*-проект.*") Тогда		
    		ЭтоПроект       = Истина;		
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);		
        КонецЕсли;
	КонецЕсли;
	#КонецОбласти
	
	#Область _пр
	// Сделать дело -пр
	Префикс = "-пр";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
    	Если ПроверитьСтроку(нТема, ".*-пр.*") Тогда		
    		ЭтоПроект       = Истина;		
    		ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    		ИндексОкончания = ИндексНачала + СтрДлина(Префикс);
    		Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1)) + СокрЛП(Сред(Тема, ИндексОкончания));
    		нТема           = НРег(Тема);		
        КонецЕсли;
    КонецЕсли;
	#КонецОбласти
	
	#КонецОбласти
	
	#Область Контексты
	
	#Область _плюс_собака_контекст_точка_с_запятой
	// Сделать дело +@project;
	Префикс = "\+@";
	Постфикс = ";";
    Если СтрНайти(нТема, "+@") > 0 И СтрНайти(нТема, Постфикс) > 0 Тогда
    	Пока ПроверитьСтроку(нТема, ".*" + Префикс + ".*" + Постфикс + ".*") Цикл
    		ПрефиксСтр = "+@";
    		ИндексНачала 		= СтрНайти(нТема, ПрефиксСтр, НаправлениеПоиска.СНачала);
    		ИндексОкончания 	= СтрНайти(нТема, ";", НаправлениеПоиска.СНачала, ИндексНачала + 1, 1);
    		СтрокаКонтекста1 	= "@" + Сред(Тема, ИндексНачала + СтрДлина(ПрефиксСтр), ИндексОкончания - ИндексНачала - СтрДлина(ПрефиксСтр));
    		Контекст 			= НайтиКонтекст(СтрокаКонтекста1);		
    		Если НЕ ЗначениеЗаполнено(Контекст) Тогда
    			СтрокаКонтекста2 	= Сред(Тема, ИндексНачала + СтрДлина(ПрефиксСтр), ИндексОкончания - ИндексНачала - СтрДлина(ПрефиксСтр));
    			Контекст 			= НайтиКонтекст(СтрокаКонтекста2);
    			Если НЕ ЗначениеЗаполнено(Контекст) Тогда
    				Контекст 				= Справочники.Контексты.СоздатьЭлемент();
    				Контекст.Наименование 	= СтрокаКонтекста1;
    				Контекст.Пользователь 	= Пользователи.ТекущийПользователь();
    				Контекст.Записать();
    				Контекст 				= Контекст.Ссылка;
    			КонецЕсли;
    		КонецЕсли;
    		МассивКонтекстов.Добавить(Контекст.Ссылка);
    		Тема    = СокрЛП(Сред(Тема, 1, ИндексНачала-1)) + СокрЛП(Сред(Тема, ИндексОкончания + 1));
    		нТема   = НРег(Тема);
        КонецЦикла;
    КонецЕсли;
	#КонецОбласти	

	#КонецОбласти
	
	#Область Начало
	// Сделать дело -начало сегодня
	Если Срок <> Дата(1, 1, 1) 
		И (СтрНайти(НРег(СтрокаТемы), "-начало") > 0 
		ИЛИ СтрНайти(НРег(СтрокаТемы), "-start") > 0
		ИЛИ СтрНайти(НРег(СтрокаТемы), "-н") > 0) Тогда		
		Начало = Срок;
		Срок = Дата(1, 1, 1);
	КонецЕсли;
	#КонецОбласти
	
		#Область ПЕРЕНОС_В_ПАПКУ
		// Сделать дело -впапкуИмя папки
		Префикс = "-впапку";
        Если СтрНайти(нТема, Префикс) > 0 Тогда
    		Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда
    			ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    			ИмяПапки 		= СокрЛП(Сред(нТема, ИндексНачала + СтрДлина(Префикс)));
    			Папка 			= НайтиПапку(ИмяПапки);
    			Если ЗначениеЗаполнено(Папка) Тогда
    				Родитель	= Папка;
    			КонецЕсли;
    			Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1));
    			нТема           = НРег(Тема);
            КонецЕсли;
        КонецЕсли;
        
		// Сделать дело -впапИмя папки
		Префикс = "-впап";
        Если СтрНайти(нТема, Префикс) > 0 Тогда
    		Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда
    			ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
    			ИмяПапки 		= СокрЛП(Сред(нТема, ИндексНачала + СтрДлина(Префикс)));
    			Папка 			= НайтиПапку(ИмяПапки);
    			Если ЗначениеЗаполнено(Папка) Тогда
    				Родитель	= Папка;
    			КонецЕсли;
    			Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1));
    			нТема           = НРег(Тема);
            КонецЕсли;
        КонецЕсли;
		#КонецОбласти
		
    #Область ПЕРЕНОС_В_ПРОЕКТ
    // Сделать дело -впроектИмя проекта
    Префикс = "-впроект";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
        Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда
            ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
            ИмяПроекта 		= СокрЛП(Сред(нТема, ИндексНачала + СтрДлина(Префикс)));
            Проект			= НайтиПроект(ИмяПроекта);
            Если ЗначениеЗаполнено(Проект) Тогда
                Родитель	= Проект;
            КонецЕсли;
            Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1));
            нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    
    // Сделать дело -впрИмя проекта
    Префикс = "-впр";
    Если СтрНайти(нТема, Префикс) > 0 Тогда
        Если ПроверитьСтроку(нТема, ".*" + Префикс + ".*") Тогда
            ИндексНачала 	= СтрНайти(нТема, Префикс, НаправлениеПоиска.СКонца);
            ИмяПроекта 		= СокрЛП(Сред(нТема, ИндексНачала + СтрДлина(Префикс)));
            Проект			= НайтиПроект(ИмяПроекта);
            Если ЗначениеЗаполнено(Проект) Тогда
                Родитель	= Проект;
            КонецЕсли;
            Тема            = СокрЛП(Сред(Тема, 1, ИндексНачала - 1));
            нТема           = НРег(Тема);
        КонецЕсли;
    КонецЕсли;
    #КонецОбласти		
    
    Тема = СокрЛП(Тема);
    
    // Приводим первую букву темы в верхний регистр.
    Если НЕ ПустаяСтрока(Тема) Тогда
    	Если Лев(Тема, 1) = НРег(Лев(Тема, 1)) Тогда
        	Тема = ВРег(Лев(Тема, 1)) + Сред(Тема, 2);
        КонецЕсли; 
    КонецЕсли; 
    
	Структура = Новый Структура();
	Структура.Вставить("Тема", 				Тема);
	Структура.Вставить("Срок", 				Срок);
	Структура.Вставить("ИспользоватьВремя", ИспользоватьВремя);
	Структура.Вставить("Начало", 			Начало);
	Структура.Вставить("ЭтоПроект",			ЭтоПроект);
	Структура.Вставить("ЭтоПапка",			ЭтоПапка);
	Структура.Вставить("МассивКонтекстов", 	МассивКонтекстов);
	Структура.Вставить("Родитель",			Родитель);
	Структура.Вставить("Избранное",			Избранное);
	Структура.Вставить("Отметка",			Отметка);
	
	Возврат Структура;
						
КонецФункции

// Возвращает массив родителей дела.
//
// Параметры:
//	Дело - СправочникСсылка.Дела - исходное дело.
//
// Возвращаемое значение:
//	Массив - массив родителей.
//
Функция ПолучитьРодителейДела(Знач Дело) Экспорт
	
	Массив = Новый Массив;	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Дела.Родитель КАК Родитель,
		|	Дела.Родитель.Родитель КАК РодительРодитель,
		|	Дела.Родитель.Родитель.Родитель КАК РодительРодительРодитель,
		|	Дела.Родитель.Родитель.Родитель.Родитель КАК РодительРодительРодительРодитель,
		|	Дела.Родитель.Родитель.Родитель.Родитель.Родитель КАК РодительРодительРодительРодительРодитель
		|ИЗ
		|	Справочник.Дела КАК Дела
		|ГДЕ
		|	Дела.Ссылка = &Дело"; 

	ТекДело = Дело;
	Пока Истина Цикл 
	    Запрос.УстановитьПараметр("Дело", ТекДело); 
	    Результат = Запрос.Выполнить(); 
	    Если Результат.Пустой() Тогда 
	        Прервать; 
	    КонецЕсли; 
	    Выборка = Результат.Выбрать(); 
	    Выборка.Следующий(); 
	    Для НомерКолонки = 0 По Результат.Колонки.Количество() - 1 Цикл 
	        ТекДело = Выборка[НомерКолонки]; 
	        Если ТекДело = Справочники.Дела.ПустаяСсылка() Тогда 
	            Прервать; 
	        Иначе 
	            Массив.Добавить(ТекДело);
	        КонецЕсли; 
	    КонецЦикла; 

	    Если НЕ ЗначениеЗаполнено(ТекДело) Тогда 
	        Прервать; 
	    КонецЕсли; 
	КонецЦикла;	
	
	Возврат Массив;
	
КонецФункции

// Возвращает пути переданных дел.
//
// Параметры:
//	МассивДел - Массив - СправочникСсылка.Дела - исходные дело.
//
// Возвращаемое значение:
//	Соответствие 
//      * Дело
//      * Путь вида "\Дело1\Дело2\Дело3\".
//
Функция ПолучитьПути(Знач МассивДел) Экспорт
    
    Соответствие = Новый Соответствие;
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
        |	Дела.Ссылка КАК Ссылка,
		|	Дела.Родитель КАК Родитель,
		|	Дела.Родитель.Тема КАК РодительТема,
		|	Дела.Родитель.Родитель КАК РодительРодитель,
		|	Дела.Родитель.Родитель.Тема КАК РодительРодительТема,
		|	Дела.Родитель.Родитель.Родитель КАК РодительРодительРодитель,
		|	Дела.Родитель.Родитель.Родитель.Тема КАК РодительРодительРодительТема,
		|	Дела.Родитель.Родитель.Родитель.Родитель КАК РодительРодительРодительРодитель,
		|	Дела.Родитель.Родитель.Родитель.Родитель.Тема КАК РодительРодительРодительРодительТема,
		|	Дела.Родитель.Родитель.Родитель.Родитель.Родитель КАК РодительРодительРодительРодительРодитель,
		|	Дела.Родитель.Родитель.Родитель.Родитель.Родитель.Тема КАК РодительРодительРодительРодительРодительТема
		|ИЗ
		|	Справочник.Дела КАК Дела
		|ГДЕ
		|	Дела.Ссылка В(&МассивДел)"; 

    ТаблицаЗначений = Новый ТаблицаЗначений;
    ТаблицаЗначений.Колонки.Добавить("Дело");
    ТаблицаЗначений.Колонки.Добавить("ПромежуточноеДело");
    ТаблицаЗначений.Колонки.Добавить("Путь");
    Для каждого Дело Из МассивДел Цикл
    	НоваяСтрока = ТаблицаЗначений.Добавить();
        НоваяСтрока.Дело = Дело;
        НоваяСтрока.Путь = "";
        НоваяСтрока.ПромежуточноеДело = Справочники.Дела.ПустаяСсылка();
    КонецЦикла; 
    
    Пока Истина Цикл 
        
	    Запрос.УстановитьПараметр("МассивДел", МассивДел); 
	    Результат = Запрос.Выполнить(); 
	    Если Результат.Пустой() Тогда 
	        Прервать; 
        КонецЕсли;
        
	    Выборка = Результат.Выбрать(); 
        Пока Выборка.Следующий() Цикл
            
            Путь = "\";
    		НомерКолонки = 1;
    	    Пока НомерКолонки < Результат.Колонки.Количество() Цикл 
    	        ТекДело = Выборка[НомерКолонки]; 
    	        Если ТекДело = Справочники.Дела.ПустаяСсылка() Тогда 
    	            Прервать; 
    	        Иначе 
    	            Путь = "\" + Выборка[НомерКолонки + 1] + Путь;
    			КонецЕсли; 
    			НомерКолонки = НомерКолонки + 2;
    	    КонецЦикла; 

            Индекс = МассивДел.Найти(Выборка.Ссылка);
            Если Индекс <> Неопределено Тогда
            	МассивДел.Удалить(Индекс);
            КонецЕсли; 
            
            Если НЕ ЗначениеЗаполнено(ТекДело) Тогда
                
                НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("ПромежуточноеДело", Выборка.Ссылка));
                Если НайденныеСтроки.Количество() > 0 Тогда
                    Для Каждого Строки Из НайденныеСтроки Цикл                        
                    	Строки.ПромежуточноеДело = Справочники.Дела.ПустаяСсылка();
                        Строки.Путь = Путь + Строки.Путь;
                    КонецЦикла; 
                Иначе
                    НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Дело", Выборка.Ссылка));
                    Если НайденныеСтроки.Количество() > 0 Тогда
                        Для Каждого Строки Из НайденныеСтроки Цикл                        
                        	Строки.ПромежуточноеДело = Справочники.Дела.ПустаяСсылка();
                            Строки.Путь = Путь + Строки.Путь;
                        КонецЦикла; 
                    КонецЕсли;
                КонецЕсли;                 
                
            Иначе
                
                НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("ПромежуточноеДело", ТекДело));
                Если НайденныеСтроки.Количество() > 0 Тогда
                    Для Каждого Строки Из НайденныеСтроки Цикл                        
                    	Строки.ПромежуточноеДело = Выборка.Ссылка;
                        Строки.Путь = Путь + Строки.Путь;
                    КонецЦикла; 
                Иначе
                    НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Дело", Выборка.Ссылка));
                    Если НайденныеСтроки.Количество() > 0 Тогда
                        Для Каждого Строки Из НайденныеСтроки Цикл                        
                        	Строки.ПромежуточноеДело = ТекДело;
                            Строки.Путь = Путь + Строки.Путь;
                        КонецЦикла; 
                    КонецЕсли;
                КонецЕсли; 
                
                МассивДел.Добавить(ТекДело);
            КонецЕсли;
            
        КонецЦикла;
        
        Если МассивДел.Количество() = 0 Тогда 
            Прервать;
        КонецЕсли;
        
    КонецЦикла;
    
    Для каждого Строки Из ТаблицаЗначений Цикл
        Путь = Строки.Путь;
        Пока СтрНайти(Путь, "\\") > 0 Цикл
        	Путь = СтрЗаменить(Путь, "\\", "\");
        КонецЦикла; 
    	Соответствие.Вставить(Строки.Дело, Путь);
    КонецЦикла; 
	
	Возврат Соответствие;
	
КонецФункции

// Возвращает дату в виде строки.
//
// Параметры:
//	Дата - Дата - исходная дата.
//	ИспользоватьВремя - Булево - при преведении даты использовать время в строке.
//
// Возвращаемое значение:
//	Строка - представление даты.
//
Функция ПредставлениеДаты(Знач Дата, Знач ИспользоватьВремя) Экспорт

	// Пустые даты игнорируем.
	Если Дата = Дата(1, 1, 1) Тогда
		Возврат "";
	КонецЕсли;
		
	ТекДата = ТекущаяДатаСеанса();
	Если НачалоДня(ТекДата) = НачалоДня(Дата) Тогда
		Возврат ?(ИспользоватьВремя = Истина, Формат(Дата, "ДФ=HH:mm"), НСтр("ru = 'Сегодня'"));
	ИначеЕсли НачалоДня(Дата) = НачалоДня(ТекДата) + 86400 Тогда
		Возврат НСтр("ru = 'Завтра'") + ?(ИспользоватьВремя = Истина, " " + Формат(Дата, "ДФ=HH:mm"), "");
	ИначеЕсли НачалоДня(Дата) = НачалоДня(ТекДата) - 86400 Тогда
		Возврат НСтр("ru = 'Вчера'") + ?(ИспользоватьВремя = Истина, " " + Формат(Дата, "ДФ=HH:mm"), "");
	ИначеЕсли Дата < ДобавитьМесяц(ТекДата, 1) И ТекДата < Дата Тогда
		Возврат СтрШаблон(НСтр("ru = '+ %1 дн.'"), Цел(НачалоДня(Дата) - НачалоДня(ТекДата)) / 86400);
	ИначеЕсли Дата - ДобавитьМесяц(ТекДата, -1) >= 30 * 86400 И Дата < ТекДата Тогда
		Возврат СтрШаблон(НСтр("ru = '- %1 дн.'"), Цел(НачалоДня(Дата) - НачалоДня(ТекДата)) / 86400);
	Иначе
		Возврат Формат(Дата, "ДФ=dd.MM.yy");
	КонецЕсли;		
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает массив структур, который описывает какие столбцы являются составными.
//
// Возвращаемое значение:
//	Массив
//		Структура
//			* Имя - Строка - имя столбца.
//			* Синоним - Строка - представление столбца.
//
Функция МассивСоставныхСтолбцов()
	
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("Имя,Синоним", НСтр("ru = 'Контексты'"), 	НСтр("ru = 'Контексты'")));
	Массив.Добавить(Новый Структура("Имя,Синоним", НСтр("ru = 'Напоминание'"), 	НСтр("ru = 'Напоминание'")));
	Массив.Добавить(Новый Структура("Имя,Синоним", НСтр("ru = 'Вес'"), 			НСтр("ru = 'Вес'")));
	Возврат Массив;
	
КонецФункции

// Преобразует строку в число.
//
// Параметры:
//	Стр - Строка - исходная строка.
//
// Возвращаемое значение:
//	Число - преобразованное число или 0, если преобразование не возможно.
//
Функция СтрокуВЧисло(Знач Стр)
	
	Попытка
		Результат = Число(Стр);
		Возврат Результат;
	Исключение
		Возврат 0;
	КонецПопытки;	
		
КонецФункции

// Возвращает следующий день недели для указанной даты.
//  мДата - Дата - дата.
//  НомерДняНедели - номер дня недели, который нужен следующим.
//
// Дата - результирующая дата
Функция ПолучитьСледующийДеньНедели(Знач мДата, Знач НомерДняНедели)
    
    ВычДата = мДата + ((7 + НомерДняНедели - ДеньНедели(мДата)) % 7) * 86400;
    Если ВычДата <= ТекущаяДатаСеанса() Тогда
    	ВычДата = ВычДата + 7 * 86400;
    КонецЕсли; 
    
    Возврат ВычДата;
    
КонецФункции

#КонецОбласти
