
#Область ПрограммныйИнтерфейс

// Возвращает таблицу всех контактов, связанных с EMail.
//
// Параметры:
//  Адрес - Строка - адрес электронной почты для поиска.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица значений, которая содержит информацию о контактах.
//
Функция ВзаимодействияПолучитьВсеКонтактыПоEmail(Знач Адрес) Экспорт 
	
	Если ПустаяСтрока(Адрес) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ВзаимодействияСформироватьТекстЗапросаДляПоискаПоEmail(Ложь);
	
	Запрос.УстановитьПараметр("Адрес", Адрес);
	ТаблицаКонтактов = Запрос.Выполнить().Выгрузить();
	Массив           = Новый Массив;
	Для Каждого СтрокаТаблицы Из ТаблицаКонтактов Цикл
		Массив.Добавить(Новый Структура("Адрес, Представление, Контакт",
								Адрес, СтрокаТаблицы.Наименование 
									+ ?(ПустаяСтрока(СтрокаТаблицы.НаименованиеВладельца), "", " (" + СтрокаТаблицы.НаименованиеВладельца + ")"),
								СтрокаТаблицы.Контакт));
	КонецЦикла;	
	
	Возврат Массив;
	
КонецФункции

// Формирует текст запроса для поиска контактов по Email.
//
// Параметры:
//  ПоискПоСписку  - Булево - признак того, что в качестве параметра передается массив значений.
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ВзаимодействияСформироватьТекстЗапросаДляПоискаПоEmail(Знач ПоискПоСписку, Знач ИтогиПоEmail = Ложь)
	
	//@skip-warning
	МассивОписанияТиповКонтактов = ВзаимодействияКлиентСервер.МассивОписанияВозможныхКонтактов();
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаКонтактнойИнформации.Ссылка КАК Контакт,
	|	ТаблицаКонтактнойИнформации.Представление,
	|	"""" КАК НаименованиеВладельца,
	|	ТаблицаКонтактнойИнформации.Ссылка.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Пользователи.КонтактнаяИнформация КАК ТаблицаКонтактнойИнформации
	|ГДЕ
	|	ТаблицаКонтактнойИнформации.АдресЭП = &Адрес
	|	И (НЕ ТаблицаКонтактнойИнформации.Ссылка.ПометкаУдаления)
	|	И ТаблицаКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)";
	
	Для Каждого ЭлементМассива Из МассивОписанияТиповКонтактов Цикл
		
		Если ЭлементМассива.Имя = "Пользователи" Тогда
			Продолжить;
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТаблицаКонтактнойИнформации.Ссылка,
			|	ТаблицаКонтактнойИнформации.Представление,
			|	" + ?(ЭлементМассива.ЕстьВладелец," ТаблицаКонтактнойИнформации.Ссылка.Владелец.Наименование","""""") + ",
			|	ТаблицаКонтактнойИнформации.Ссылка." + ЭлементМассива.ИмяРеквизитаПредставлениеКонтакта + " КАК Наименование
			|ИЗ
			|	Справочник." + ЭлементМассива.Имя + ".КонтактнаяИнформация КАК ТаблицаКонтактнойИнформации
			|ГДЕ
			|	ТаблицаКонтактнойИнформации.АдресЭП = &Адрес
			|  И (НЕ ТаблицаКонтактнойИнформации.Ссылка.ПометкаУдаления)
			|	И ТаблицаКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
			|  "+?(ЭлементМассива.Иерархический," И (НЕ ТаблицаКонтактнойИнформации.Ссылка.ЭтоГруппа)","");
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Если ИтогиПоEmail Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ИТОГИ ПО
		|	Представление";
	КонецЕсли;
	
	Если ПоискПоСписку Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "= &Адрес", "В (&Адрес)");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает ссылку по переданному идентификатору.
//
// Параметры:
//	ВидСправочника - Строка - имя справочника.
//	Идентификатор - Строка - UID элемента.
//
// Возвращаемое значение:
//	СправочникСсылка.
//
Функция ПолучитьСсылкуПоИдентификатору(Знач ВидСправочника, Знач Идентификатор) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат Справочники[ВидСправочника].ПустаяСсылка();
	КонецЕсли;
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор(Идентификатор);
	Возврат Справочники[ВидСправочника].ПолучитьСсылку(УникальныйИдентификатор);
	
КонецФункции

// Возвращает вложение по ID.
//
// Параметры:
//	ID - Строка - ИД вложения.
//
// Возвращаемое значение:
//	СправочникСсылка.КомментарииПрисоединенныеФайлы.
//
Функция КомментарийВложениеПоID(Знач ID) Экспорт
	
	Возврат Справочники.КомментарииПрисоединенныеФайлы.ПолучитьСсылку(Новый УникальныйИдентификатор(ID));
	
КонецФункции

#КонецОбласти
