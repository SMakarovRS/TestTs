
////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЕЙСТВИЙ

// Процедура выполняет доступное действие
//
// Параметры:
//	Номер			- Число		- Номер действия (соответветствует значению параметра EvenType,
//									которое возвращает панель управления при выборе действия
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпВыполнитьДоступноеДействие(Номер, СтруктураЗвонка) Экспорт
	МассивДоступныхДействий	= сфпСофтФонПроСерверПереопределяемый.сфпПолучитьМассивДоступныхДействий();
	ЭлементМассива			= МассивДоступныхДействий[Номер];
	//Попытка
		Выполнить("" + ЭлементМассива.Действие + "(СтруктураЗвонка)");
	//Исключение
	//КонецПопытки;	
КонецПроцедуры // сфпВыполнитьДоступноеДействие()

// Процедура выполняет автоматическое действие
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//  ОткрыватьЗвонок	- Булево	- Нужно ли открывать форму звонка, если настройка на действие не задана
//
Процедура сфпВыполнитьАвтоматическоеДействие(СтруктураЗвонка, ОткрыватьЗвонок = Ложь) Экспорт
	
	Если СтруктураЗвонка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураЗвонка.ВходящийЗвонок Тогда
		НаименованиеДействия	= сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриВходящемЗвонке");	
	Иначе	
		НаименованиеДействия	= сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриИсходящемЗвонке");	
	КонецЕсли;
	МассивАвтоматическихДействий = сфпСофтФонПроСерверПереопределяемый.сфпПолучитьМассивДоступныхДействий();
	Для Каждого ЭлементМассива Из МассивАвтоматическихДействий Цикл
		Если ЭлементМассива.Наименование = НаименованиеДействия Тогда
			Если НЕ ПустаяСтрока(ЭлементМассива.Действие) Тогда
				//Попытка
					Выполнить("" + ЭлементМассива.Действие + "(СтруктураЗвонка)");
				//Исключение
				//КонецПопытки;	
			Иначе
				// в настройках стоит "нет действий", проверим, что это команда панели и откроем звонок
				Если ОткрыватьЗвонок Тогда
					//Попытка
						сфпОткрытьТелефонныйЗвонок(СтруктураЗвонка);
					//Исключение
					//КонецПопытки;
				КонецЕсли;
			КонецЕсли;	
			Прервать;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры // сфпВыполнитьАвтоматическоеДействие()

// Процедура заканчивает команду открытия звонка после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "КонтактАбонент"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьТелефонныйЗвонокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяФормыДокументаТелефонныйЗвонок = сфпСофтФонПроСервер.сфпИмяФормыДокументаТелефонныйЗвонок();
	
	ПараметрыФормы = ДополнительныеПараметры.СтруктураЗвонка;
	Если Результат <> Неопределено И ЗначениеЗаполнено(Результат) Тогда		
		Если ЗначениеЗаполнено(ИмяФормыДокументаТелефонныйЗвонок) Тогда			
			ФормаЗвонка = ПолучитьФорму(ИмяФормыДокументаТелефонныйЗвонок, ПараметрыФормы);
			ФормаЗвонка.Объект.АбонентКонтакт = Результат;
			ФормаЗвонка.Объект.АбонентПредставление = Строка(ФормаЗвонка.Объект.АбонентКонтакт);
			ФормаЗвонка.Открыть();
		КонецЕсли;
		
		Возврат;
	КонецЕсли;		
	
	Если ЗначениеЗаполнено(ИмяФормыДокументаТелефонныйЗвонок) Тогда
		ОткрытьФорму(ИмяФормыДокументаТелефонныйЗвонок, ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры	

// Процедура открывает карточку контакта
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьКарточкуКонтакта(СтруктураЗвонка)
	
	Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() >= 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьКарточкуКонтактаЗавершение", ЭтотОбъект, 
			Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(
			СтруктураЗвонка["МассивЗвонящих"], Ложь);
			
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьКарточкуКонтактаЗавершение(СписокКонтактов[0].Значение,Новый Структура("СтруктураЗвонка", 
				СтруктураЗвонка));
		Иначе				
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Ложь);
			ПараметрыОткрытия.Вставить("СписокОбъектов", 
				сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),
				,,ОписаниеВыбора);
		КонецЕсли;				
	ИначеЕсли СтруктураЗвонка.Свойство("hCall") Тогда
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		ПоказатьЗначение(,НовыйЗвонок);
	КонецЕсли;
	
КонецПроцедуры // сфпОткрытьКарточкуКонтакта() 	

// Процедура заканчивает команду открытия события после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьКарточкуКонтактаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		ПоказатьЗначение(, Результат);
	КонецЕсли;
	
	Если СтруктураЗвонка.Свойство("hCall") Тогда
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьКарточкуКонтактаЗавершение()

// Функция создает и открывает документ "ЗаказПоставщику"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпНовыйЗаказПоставщику(СтруктураЗвонка)
	
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;		
	ФормаЗаказа = сфпИнициализироватьФормуЗаказаПоставщика(СтруктураЗвонка, сфпДанныеЗаполнения);
	Если НЕ (ФормаЗаказа = Неопределено) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() >= 1 Тогда
			ОписаниеВыбора = Новый ОписаниеОповещения("сфпНовыйЗаказПоставщикуЗавершение", ЭтотОбъект,
				Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаЗаказа, СтруктураЗвонка));
			СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(
				СтруктураЗвонка["МассивЗвонящих"], Ложь);
				
			Если СписокКонтактов.Количество() = 1 Тогда
				сфпНовыйЗаказПоставщикуЗавершение(СписокКонтактов[0].Значение,
					Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаЗаказа, СтруктураЗвонка));
			Иначе				
				ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Ложь);
				ПараметрыОткрытия.Вставить("СписокОбъектов", 
					сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
				ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),
					,,ОписаниеВыбора);
			КонецЕсли;				
		Иначе			
			ФормаЗаказа.Модифицированность = Истина;
			ФормаЗаказа.Открыть();
			
			Если СтруктураЗвонка.Свойство("hCall") Тогда
				НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
				сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры // сфпНовыйЗаказПоставщику() 

// Процедура заканчивает команду открытия заказа клиента после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпНовыйЗаказПоставщикуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	//СправочникСсылка.Сотрудники
	//СправочникСсылка.ПотенциальныеКлиенты
	//СправочникСсылка.ФизическиеЛица
	//СправочникСсылка.КонтактныеЛица
	//СправочникСсылка.Подразделения
	//СправочникСсылка.Контрагенты
	//СправочникСсылка.Пользователи
	ФормаДокумента 	   = ДополнительныеПараметры.ФормаДокумента;
	СтруктураЗвонка    = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		ФормаДокумента.Объект["Инициатор"] = Результат;
	КонецЕсли;
	ФормаДокумента.Модифицированность = Истина;
	
	Если СтруктураЗвонка.Свойство("hCall") Тогда
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка); 	
		ФормаДокумента.ТелефонныйЗвонок = НовыйЗвонок;
	КонецЕсли;
	
	ФормаДокумента.Открыть();
	
КонецПроцедуры	

Процедура сфпНовоеЗадание(СтруктураЗвонка)
	
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;		
	ФормаЗадания = сфпИнициализироватьФормуНовогоЗадания(СтруктураЗвонка, сфпДанныеЗаполнения);
	Если НЕ (ФормаЗадания = Неопределено) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() >= 1 Тогда
			ОписаниеВыбора = Новый ОписаниеОповещения("сфпНовоеЗаданиеЗавершение", ЭтотОбъект, 
				Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаЗадания, СтруктураЗвонка));
			СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(
				СтруктураЗвонка["МассивЗвонящих"]);
				
			Если СписокКонтактов.Количество() = 1 Тогда
				сфпНовоеЗаданиеЗавершение(СписокКонтактов[0].Значение,
					Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаЗадания, СтруктураЗвонка));
			Иначе				
				ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Ложь);
				ПараметрыОткрытия.Вставить("СписокОбъектов", 
					сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
				ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),
					,,ОписаниеВыбора);
			КонецЕсли;				
		Иначе			
			ФормаЗадания.Модифицированность = Истина;
			ФормаЗадания.Открыть();
			
			Если СтруктураЗвонка.Свойство("hCall") Тогда
				НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
				сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

// Процедура заканчивает команду открытия заказа клиента после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпНовоеЗаданиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаДокумента 	   = ДополнительныеПараметры.ФормаДокумента;
	СтруктураЗвонка    = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);								
		ФормаДокумента.Объект["Инициатор"] = Результат;
		ФормаДокумента.Объект["Клиент"] = Результат;
	КонецЕсли;
	ФормаДокумента.Модифицированность = Истина;
	
	Если СтруктураЗвонка.Свойство("hCall") Тогда
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка); 	
		ФормаДокумента.ТелефонныйЗвонок = НовыйЗвонок;
	КонецЕсли;
	
	ФормаДокумента.Открыть();
	
КонецПроцедуры

Процедура сфпОткрытьСписокЗаказовПоставщику(СтруктураЗвонка) Экспорт
		
	Если СтруктураЗвонка.Свойство("ФормаПолучена") И СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", СтруктураЗвонка.НовыйЗвонок);
	Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() >= 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьСписокЗаказовПоставщикуЗавершение", ЭтотОбъект, 
			Новый Структура("СтруктураЗвонка, ПараметрыФормы", СтруктураЗвонка, ПараметрыФормы));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(
			СтруктураЗвонка["МассивЗвонящих"]);
			
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьСписокЗаказовПоставщикуЗавершение(СписокКонтактов[0].Значение, 
				Новый Структура("СтруктураЗвонка, ПараметрыФормы", СтруктураЗвонка, ПараметрыФормы));
		Иначе				
			ПараметрыОткрытия = Новый Структура("НомерТелефона", СтруктураЗвонка["НомерТелефона"]);
			ПараметрыОткрытия.Вставить("СписокОбъектов", 
				сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , 
				Новый УникальныйИдентификатор(), ,, ОписаниеВыбора);
		КонецЕсли;		
	Иначе
		ИмяФормыДокументаТелефонныйЗвонок = сфпСофтФонПроСервер.сфпИмяФормыДокументаТелефонныйЗвонок();
		Если ЗначениеЗаполнено(ИмяФормыДокументаТелефонныйЗвонок) Тогда
			ОткрытьФорму(ИмяФормыДокументаТелефонныйЗвонок, ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заканчивает команду открытия заказа клиента после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьСписокЗаказовПоставщикуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураЗвонка    = ДополнительныеПараметры.СтруктураЗвонка;
	ПараметрыФормы	   = Новый Структура();
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		ПараметрыФормы.Вставить("Инициатор", Результат);
	КонецЕсли;
	ОткрытьФорму("Документ.ЗаказПоставщику.ФормаСписка", ПараметрыФормы);
	Оповестить("ОткрытьСПомощьюСофтфона", ПараметрыФормы);

КонецПроцедуры

Процедура сфпОткрытьСписокЗаданий(СтруктураЗвонка) Экспорт
		
	Если СтруктураЗвонка.Свойство("ФормаПолучена") И СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", СтруктураЗвонка.НовыйЗвонок);
	Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() >= 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьСписокЗаданийЗавершение", ЭтотОбъект, 
			Новый Структура("СтруктураЗвонка, ПараметрыФормы", СтруктураЗвонка, ПараметрыФормы));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"]);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьСписокЗаданийЗавершение(СписокКонтактов[0].Значение, 
				Новый Структура("СтруктураЗвонка, ПараметрыФормы", СтруктураЗвонка, ПараметрыФормы));
		Иначе				
			ПараметрыОткрытия = Новый Структура("НомерТелефона", СтруктураЗвонка["НомерТелефона"]);
			ПараметрыОткрытия.Вставить("СписокОбъектов", 
				сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , 
				Новый УникальныйИдентификатор(), ,, ОписаниеВыбора);
		КонецЕсли;		
	Иначе
		ИмяФормыДокументаТелефонныйЗвонок = сфпСофтФонПроСервер.сфпИмяФормыДокументаТелефонныйЗвонок();
		Если ЗначениеЗаполнено(ИмяФормыДокументаТелефонныйЗвонок) Тогда
			ОткрытьФорму(ИмяФормыДокументаТелефонныйЗвонок, ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заканчивает команду открытия заказа клиента после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьСписокЗаданийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	ПараметрыФормы	= Новый Структура();
	ПараметрыФормы.Вставить("ПрименитьОтборыПриЗагрузкеФормы", Истина);
	СтруктураОтборов= Новый Структура();
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);		
		СтруктураОтборов.Вставить("Инициатор", Результат);		
	КонецЕсли;
	ПараметрыФормы.Вставить("СтруктураОтборов", 	СтруктураОтборов);
	ОткрытьФорму("Документ.Задание.ФормаСписка", 	ПараметрыФормы);
	Оповестить("Задание_ФормаСписка_УстановитьОтбор", ПараметрыФормы);

КонецПроцедуры


/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫПОЛНЕНИЯ ЗВОНКА

// Процедура - обработчик выполнения общей команды "ИсторияРазговора"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыИсторияРазговора(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяДокументаТелефонныйЗвонок = сфпСофтФонПроСервер.сфпИмяДокументаТелефонныйЗвонок(Истина);
	Если ЗначениеЗаполнено(ИмяДокументаТелефонныйЗвонок) Тогда
		Если ТипЗнч(ПараметрКоманды) = Тип(ИмяДокументаТелефонныйЗвонок) Тогда
			сфпСофтФонПроКлиент.сфпОткрытьИсториюРазговора(ПараметрКоманды);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // сфпОбработкаКомандыИсторияРазговора()

// Процедура - обработчик выполнения общей команды "сфпКарточкаCoMagic"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыКарточкаCoMagic(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда 
		Возврат; 
	КонецЕсли;
	
	CoMagicID	= сфпСофтФонПроСерверПереопределяемый.сфпПолучитьCoMagicID(ПараметрКоманды);
	Если ПустаяСтрока(CoMagicID) Тогда 
		Возврат;
	КонецЕсли;
	КлючСессии	= сфпСофтФонПроСервер.сфпПолучитьКлючСессииCoMagic();
	Если НЕ ЗначениеЗаполнено(КлючСессии) Тогда
		Возврат;
	КонецЕсли;
	
	Адрес	= "http://app.comagic.ru/analytics/auditory/cmvisitor/?session_key=" + КлючСессии + "&visitor_id=" + CoMagicID;
	ПерейтиПоНавигационнойСсылке(Адрес);
	
КонецПроцедуры // сфпОбработкаКомандыКарточкаCoMagic()

// Процедура - обработчик выполнения общей команды "ПереводЗвонков"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыПереводЗвонков(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	ИначеЕсли НЕ сфпСофтФонПроСервер.сфпРолиДоступны("ПолныеПрава, сфпУправлениеМаршрутизацией") Тогда
		сфпОбщегоНазначенияКлиентСервер.сфпСообщитьПользователю(НСтр("ru='Недостаточно прав для настройки перевода звонков'"));
		Возврат;
	КонецЕсли;
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("Контакт",	ПараметрКоманды);
	ОткрытьФорму("ОбщаяФорма.сфпПользователиДляПереключения", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно);
		
КонецПроцедуры // сфпОбработкаКомандыПереводЗвонков()

// Процедура - обработчик выполнения общей команды "сфпПозвонить"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыПозвонить(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПараметрКоманды) Тогда
		сфпОбщегоНазначенияКлиентСервер.сфпСообщитьПользователю(НСтр("ru = 'Необходимо записать элемент'"));
		Возврат;
	КонецЕсли;	
	
	ДанныеЗаполнения = Новый Структура("Основание", ПараметрКоманды);
	
	ИмяДокументаТелефонныйЗвонок = сфпСофтФонПроСервер.сфпИмяДокументаТелефонныйЗвонок(Истина);
	Если ЗначениеЗаполнено(ИмяДокументаТелефонныйЗвонок) 
		И ТипЗнч(ПараметрКоманды) = Тип(ИмяДокументаТелефонныйЗвонок) Тогда
		
		АбонентКонтакт = сфпСофтФонПроСервер.сфпПолучитьЗначениеРеквизита(ПараметрКоманды, "АбонентКонтакт"); 
		АбонентКакСвязаться	= сфпСофтФонПроСервер.сфпПолучитьЗначениеРеквизита(ПараметрКоманды, "АбонентКакСвязаться"); 
		Если ЗначениеЗаполнено(АбонентКонтакт) Тогда
			Если ЗначениеЗаполнено(АбонентКакСвязаться) Тогда
				сфпСофтФонПроКлиент.сфпПозвонить(АбонентКакСвязаться, АбонентКонтакт, ДанныеЗаполнения);
				
		    Иначе
				СписокОбъектов = Новый СписокЗначений;
				СписокОбъектов.Добавить(АбонентКонтакт);
				сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов, ДанныеЗаполнения);
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(АбонентКакСвязаться) Тогда
			сфпСофтФонПроКлиент.сфпПозвонить(АбонентКакСвязаться, , ДанныеЗаполнения);
			
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Не выбран номер телефона'"), 5);
		КонецЕсли;		
		
	ИначеЕсли СтрНайти("" + ТипЗнч(ПараметрКоманды), "Задание") > 0 Тогда
		Инициатор = сфпСофтФонПроСервер.сфпПолучитьЗначениеРеквизита(ПараметрКоманды, "Инициатор"); 
		Если ЗначениеЗаполнено(Инициатор) Тогда
			СписокОбъектов = Новый СписокЗначений();
			СписокОбъектов.Добавить(Инициатор);
			сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов, ДанныеЗаполнения);
		КонецЕсли;
	Иначе
		СписокОбъектов = Новый СписокЗначений();
		СписокОбъектов.Добавить(ПараметрКоманды);
		сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов);
	КонецЕсли;

КонецПроцедуры // сфпОбработкаКомандыПозвонить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

/////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИНИЦИАЛИЗАЦИИ ФОРМ ОБЪЕКТОВ

// Функция создает и заполняет форму документа "Событие"
//
// Параметры:
//	СтруктураЗвонка		- Структура	- Структура данных звонка
//	ДанныеЗаполнения	- Структура	- Структура данных для заполнения документа
//
Функция сфпИнициализироватьФормуСобытия(СтруктураЗвонка, ДанныеЗаполнения)
	
	ИмяФормы = "Документ.Событие.ФормаОбъекта";		
	ФормаСобытия = ПолучитьФорму(ИмяФормы,,,СтруктураЗвонка.hCall);
	ФормаСобытия.Объект["Дата"]						= сфпСофтФонПроСервер.сфпТекущаяДата();
	ФормаСобытия.Объект["Автор"]					= сфпСофтФонПроСервер.сфпТекущийПользователь();
	ФормаСобытия.Объект["Ответственный"]			= ФормаСобытия.Объект["Автор"];
	ФормаСобытия.Объект["НачалоСобытия"]			= ФормаСобытия.Объект["Дата"];
	ФормаСобытия.Объект["ОкончаниеСобытия"]			= ФормаСобытия.Объект["Дата"];
	ФормаСобытия.Объект["Тема"]						= НСтр("ru='#Создан автоматически средствами СофтФон'");
	Если ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		ФормаСобытия.Объект["ДокументОснование"]	= СтруктураЗвонка.НовыйЗвонок;
	КонецЕсли;
	ИмяПредопределенногоЗначения					= Нстр("ru ='Справочник.ТипыСобытий.ТелефонныйЗвонок'");
	ФормаСобытия.Объект["ТипСобытия"]				= ПредопределенноеЗначение(ИмяПредопределенногоЗначения); 
	ИмяПредопределенногоЗначения					= Нстр("ru ='Перечисление.СостоянияСобытий.Завершено'");
	ФормаСобытия.Объект["Состояние"]				= ПредопределенноеЗначение(ИмяПредопределенногоЗначения); 	
		
	Если СтруктураЗвонка.ВходящийЗвонок Тогда
		ИмяПредопределенногоЗначения =  Нстр("ru ='Перечисление.ВходящееИсходящееСобытие.Входящее'");
		ФормаСобытия.Объект["ВходящееИсходящееСобытие"] = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
	Иначе	
		ИмяПредопределенногоЗначения =  Нстр("ru ='Перечисление.ВходящееИсходящееСобытие.Исходящее'");		
		ФормаСобытия.Объект["ВходящееИсходящееСобытие"] = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
	КонецЕсли;		
	
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если НЕ (СтруктураЗвонка.МассивЗвонящих = Неопределено) Тогда
			Если СтруктураЗвонка.МассивЗвонящих.Количество() = 1 Тогда
				СтруктураЗвонка.Контакт	= СтруктураЗвонка.МассивЗвонящих[0];
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	НовыйУчастник	= ФормаСобытия.Объект["Участники"].Добавить();
	Если ФормаСобытия.Объект.Ссылка.Метаданные().Реквизиты.Найти("Контрагент") = Неопределено Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
			Если ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Контрагенты") Тогда
				НовыйУчастник["Контакт"] = СтруктураЗвонка.Контакт;
			ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
				НовыйУчастник["Контакт"] = СтруктураЗвонка.Контакт;
			ИначеЕсли Найти(Строка(СтруктураЗвонка.Контакт), НСтр("ru = '<Объект не найден>'")) > 0 Тогда
				ФормаСобытия.Объект["Содержание"] = ФормаСобытия.Объект["Содержание"] + Символы.ПС 
					+ Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона)
					+ Символы.ПС + НСтр("ru='К данному абоненту в доступе отказано.'")
					+ НСтр("ru=' Для разрешения работы с абонентом обратитесь к руководителю или администратору.'");
			Иначе			
				НовыйУчастник["Контакт"]	= СтруктураЗвонка.Контакт.Наименование;
			КонецЕсли;	
		ИначеЕсли СтруктураЗвонка.ВнешнийЗвонок Тогда
			Если СтруктураЗвонка.МассивЗвонящих = Неопределено Тогда
				НовыйУчастник["Контакт"]	= НСтр("ru='!!!Не определен!!!'");
			ИначеЕсли СтруктураЗвонка.МассивЗвонящих.Количество() = 0 Тогда
				НовыйУчастник["Контакт"]	= НСтр("ru='!!!Не определен!!!'");
			Иначе
				НовыйУчастник["Контакт"]	= НСтр("ru='!!!Не определен!!!'");
				ФормаСобытия.Объект["Содержание"]	= ФормаСобытия.Объект["Содержание"] + Символы.ПС + 
					НСтр("ru='Несколько совпадений номера: '") + СтруктураЗвонка.НомерТелефона;
				Для Каждого ЭлементМассива Из СтруктураЗвонка.МассивЗвонящих Цикл
					ФормаСобытия.Объект["Содержание"]	= ФормаСобытия.Объект["Содержание"] + Символы.ПС 
					+ Строка(ТипЗнч(ЭлементМассива)) + ": " 
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(ЭлементМассива);
					ВладелецКонтакта = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(ЭлементМассива);
					Если НЕ (ВладелецКонтакта = Неопределено) Тогда
						ФормаСобытия.Объект["Содержание"]	= ФормаСобытия.Объект["Содержание"] + " (" 
							+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(ВладелецКонтакта) + ")";
					КонецЕсли;	
				КонецЦикла;	
			КонецЕсли;	
		Иначе	
			Если ПустаяСтрока(СтруктураЗвонка.CalledInfoName) Тогда
				НовыйУчастник["Контакт"]	= НСтр("ru='!!!Не определен!!!'");
			Иначе
				НовыйУчастник["Контакт"]	= СтруктураЗвонка.CalledInfoName;
			КонецЕсли;	
		КонецЕсли;	
	Иначе	
		Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
			Если ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Контрагенты") Тогда
				ФормаСобытия.Объект["Контрагент"]	= СтруктураЗвонка.Контакт;
				НовыйУчастник["ПредставлениеКонтакта"] = сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(
					СтруктураЗвонка.Контакт);
					
			ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
				НовыйУчастник["КонтактноеЛицо"]			= СтруктураЗвонка.Контакт;
				ФормаСобытия.Объект["Контрагент"]		= сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
				НовыйУчастник["ПредставлениеКонтакта"]	= сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(
					СтруктураЗвонка.Контакт);
					
			КонецЕсли;
			Если СтрНайти(Строка(СтруктураЗвонка.Контакт), НСтр("ru = '<Объект не найден>'")) > 0 Тогда
				ФормаСобытия.Объект["Содержание"]	= Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
						+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
						+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, 
							СтруктураЗвонка.НомерТелефона)
						+ Символы.ПС + НСтр("ru='К данному абоненту в доступе отказано.'")
						+ НСтр("ru=' Для разрешения работы с абонентом обратитесь к руководителю или администратору.'");
			КонецЕсли;	
		ИначеЕсли СтруктураЗвонка.ВнешнийЗвонок Тогда
			Если СтруктураЗвонка.МассивЗвонящих = Неопределено Тогда
				Если ПустаяСтрока(СтруктураЗвонка.CallerInfoName) Тогда
					НовыйУчастник["ПредставлениеКонтакта"]	= НСтр("ru='!!!Не определен!!!'");
				ИначеЕсли Найти(СтруктураЗвонка.CallerInfoName, СтруктураЗвонка.НомерТелефона) = 0 Тогда
					НовыйУчастник["ПредставлениеКонтакта"]	= СтруктураЗвонка.CallerInfoName;
				Иначе	
					НовыйУчастник["ПредставлениеКонтакта"]	= НСтр("ru='!!!Не определен!!!'");
				КонецЕсли;	
			ИначеЕсли СтруктураЗвонка.МассивЗвонящих.Количество() = 0 Тогда
				Если ПустаяСтрока(СтруктураЗвонка.CallerInfoName) Тогда
					НовыйУчастник["ПредставлениеКонтакта"]	= НСтр("ru='!!!Не определен!!!'");
				ИначеЕсли Найти(СтруктураЗвонка.CallerInfoName, СтруктураЗвонка.НомерТелефона) = 0 Тогда
					НовыйУчастник["ПредставлениеКонтакта"]	= СтруктураЗвонка.CallerInfoName;
				Иначе	
					НовыйУчастник["ПредставлениеКонтакта"]	= НСтр("ru='!!!Не определен!!!'");
				КонецЕсли;	
			Иначе
				НовыйУчастник["ПредставлениеКонтакта"] = НСтр("ru='Несколько совпадений номера: '") 
					+ СтруктураЗвонка.НомерТелефона;
				ФормаСобытия.Объект["Содержание"] = НовыйУчастник["ПредставлениеКонтакта"];
				Для Каждого ЭлементМассива Из СтруктураЗвонка.МассивЗвонящих Цикл
					НовыйУчастник["ПредставлениеКонтакта"]	= НовыйУчастник["ПредставлениеКонтакта"] + Символы.ПС 
					+ Строка(ТипЗнч(ЭлементМассива)) + ": " 
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(ЭлементМассива);
					ВладелецКонтакта = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(ЭлементМассива);
					Если НЕ (ВладелецКонтакта = Неопределено) Тогда
						НовыйУчастник["ПредставлениеКонтакта"]	= НовыйУчастник["ПредставлениеКонтакта"] + " (" 
							+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(ВладелецКонтакта) + ")";
					КонецЕсли;	
				КонецЦикла;	
			КонецЕсли;	
		Иначе	
			Если ПустаяСтрока(СтруктураЗвонка.CalledInfoName) Тогда
				НовыйУчастник["ПредставлениеКонтакта"]	= НСтр("ru='!!!Не определен!!!'");
			Иначе
				НовыйУчастник["ПредставлениеКонтакта"]	= СтруктураЗвонка.CalledInfoName;
			КонецЕсли;	
		КонецЕсли;	
		ФормаСобытия.Объект["СписокУчастников"]	= НовыйУчастник["ПредставлениеКонтакта"];
	КонецЕсли;	
	НовыйУчастник["КакСвязаться"]		= СтруктураЗвонка.НомерТелефона; 	
	
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);	
	Возврат ФормаСобытия;	
	
КонецФункции	

// Функция создает и заполняет форму документа "Заказ поставщика"
//
// Параметры:
//	СтруктураЗвонка		- Структура	- Структура данных звонка
//	ДанныеЗаполнения	- Структура	- Структура данных для заполнения документа
//
Функция сфпИнициализироватьФормуЗаказаПоставщика(СтруктураЗвонка, ДанныеЗаполнения)
	
	ИмяФормы = "Документ.ЗаказПоставщику.ФормаОбъекта";		
	ФормаЗаказа = ПолучитьФорму(ИмяФормы,,,СтруктураЗвонка.hCall);		
	
	ФормаЗаказа.Объект["Дата"]			= сфпСофтФонПроСервер.сфпТекущаяДата();
	ФормаЗаказа.Объект["Автор"]			= сфпСофтФонПроСервер.сфпТекущийПользователь();
	ФормаЗаказа.Объект["Ответственный"]	= ФормаЗаказа.Объект["Автор"];
	ФормаЗаказа.Объект["Комментарий"]	= НСтр("ru='#Создан автоматически средствами СофтФон'");
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	
	ФормаЗаказа.Объект["Инициатор"]		= СтруктураЗвонка.Контакт;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);	
	
	Возврат ФормаЗаказа;		
	
КонецФункции	

// Функция создает и заполняет форму документа "Заказ поставщика"
//
// Параметры:
//	СтруктураЗвонка		- Структура	- Структура данных звонка
//	ДанныеЗаполнения	- Структура	- Структура данных для заполнения документа
//
Функция сфпИнициализироватьФормуНовогоЗадания(СтруктураЗвонка, ДанныеЗаполнения)
	
	ИмяФормы = "Документ.Задание.ФормаОбъекта";
	ФормаЗадания = ПолучитьФорму(ИмяФормы,,,СтруктураЗвонка.hCall);		
	
	ФормаЗадания.Объект["Дата"]		= сфпСофтФонПроСервер.сфпТекущаяДата();
	ФормаЗадания.Объект["Автор"]	= сфпСофтФонПроСервер.сфпТекущийПользователь();
	ФормаЗадания.Объект["СпособСоздания"] = ПредопределенноеЗначение("Справочник.СпособыСозданияЗаданий.Телефон");
	ФормаЗадания.Объект["Комментарий"] = НСтр("ru='#Создан автоматически средствами СофтФон'");
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		ФормаЗадания.Объект["Инициатор"] = СтруктураЗвонка.Контакт;		
	КонецЕсли;		
	
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);	
	
	Возврат ФормаЗадания;		
	
КонецФункции

/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫПОЛНЕНИЯ ДЕЙСТВИЙ

// Процедура открывает документ "Телефонный звонок"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьТелефонныйЗвонок(СтруктураЗвонка)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", СтруктураЗвонка.НовыйЗвонок);
	Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьТелефонныйЗвонокЗавершение", ЭтотОбъект, 
			Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(
			СтруктураЗвонка["МассивЗвонящих"]);
			
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьТелефонныйЗвонокЗавершение(СписокКонтактов[0].Значение,Новый Структура("ПараметрыФормы", ПараметрыФормы));
		Иначе				
			ПараметрыОткрытия = Новый Структура("НомерТелефона", СтруктураЗвонка["НомерТелефона"]);
			ПараметрыОткрытия.Вставить("СписокОбъектов", 
				сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , 
				Новый УникальныйИдентификатор(), ,, ОписаниеВыбора);
		КонецЕсли;				
		
	Иначе
		ИмяФормыДокументаТелефонныйЗвонок = сфпСофтФонПроСервер.сфпИмяФормыДокументаТелефонныйЗвонок();
		Если ЗначениеЗаполнено(ИмяФормыДокументаТелефонныйЗвонок) Тогда
			ОткрытьФорму(ИмяФормыДокументаТелефонныйЗвонок, ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // сфпОткрытьТелефонныйЗвонок()

// Процедура открывает отчет "Взаиморасчеты"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура ВзаиморасчетыСКонтрагентами(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;	
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	
	ТекДата			= сфпСофтФонПроСервер.сфпТекущаяДата();
	ПараметрыФормы	= Новый Структура("КлючВарианта, Период, НачалоПериода, КонецПериода, Отбор, СформироватьПриОткрытии");
	ПараметрыФормы.СформироватьПриОткрытии = Истина;
	ПараметрыФормы.КлючВарианта		= "Основной";
	ПараметрыФормы.Период			= "ПериодМесяц";
	ПараметрыФормы.НачалоПериода	= НачалоМесяца(ТекДата);
	ПараметрыФормы.НачалоПериода	= КонецМесяца(ТекДата);
	ПараметрыФормы.Отбор			= Новый Структура("Контрагент", СтруктураЗвонка.Контакт);
	ОткрытьФорму("Отчет.ВзаиморасчетыСКонтрагентами.ФормаОбъекта", ПараметрыФормы);
	
	Если СтруктураЗвонка.Свойство("hCall") Тогда
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка); 																		
	КонецЕсли;

КонецПроцедуры // ВзаиморасчетыСКонтрагентами() 	 	

#КонецОбласти