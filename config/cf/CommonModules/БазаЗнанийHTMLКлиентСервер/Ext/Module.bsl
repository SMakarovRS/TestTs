////////////////////////////////////////////////////////////////////////////////
// Модуль базы знаний (клиент/сервер).
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// ОБЩАЯ ФУНКЦИОНАЛЬНОСТЬ.

Функция ВыделитьЭлементHTMLПоТегу(Знач ТекстHTML, Знач НачПозиция, Знач ТегHTML) Экспорт
	
	ТегНачала		= "<" + НРег(ТегHTML);
	ТегОкончания	= "</" + НРег(ТегHTML) + ">";
	ДлинаТегНач		= СтрДлина(ТегНачала);
	ДлинаТегКон		= СтрДлина(ТегОкончания);
	
	ПозицияНачТекста = -1;
	ПозицияКонТекста = -1;
	
	// Вычисляем нач. текста
	Для Индекс = 1 По НачПозиция Цикл
		ТекПозиция	= НачПозиция - Индекс;
		ЗначениеСтр	= Сред(ТекстHTML, ТекПозиция, ДлинаТегНач);
		
		Если НРег(ЗначениеСтр) = ТегНачала Тогда
			ПозицияНачТекста = ТекПозиция;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// Вычисляем кон. текста\	
	Если ПозицияНачТекста >= 0 Тогда
		ВремТекстHTML = НРег(Сред(ТекстHTML, ПозицияНачТекста));
		// ДлинаТекста = СтрДлина(ТекстHTML);
		// ДлинаВремТекстHTML = СтрДлина(ВремТекстHTML);
		Индекс = 1;
		ИндексПодстроки = СтрНайти(ВремТекстHTML, ТегОкончания, НаправлениеПоиска.СНачала, Индекс, 1);
		Пока ИндексПодстроки > 0 Цикл
			Врем = Сред(ВремТекстHTML, 1, ИндексПодстроки + ДлинаТегКон);
			Если СтрЧислоВхождений(Врем, ТегНачала) = СтрЧислоВхождений(Врем, ТегОкончания) Тогда
				ПозицияКонТекста = ПозицияНачТекста + СтрДлина(Врем) - ДлинаТегКон - 1;
				Прервать;
			КонецЕсли;
			Индекс = ИндексПодстроки + ДлинаТегКон;
			ИндексПодстроки = СтрНайти(ВремТекстHTML, ТегОкончания, НаправлениеПоиска.СНачала, Индекс, 1);
		КонецЦикла;
	КонецЕсли;
	
	// Вырезаем строку
	Если ПозицияНачТекста >= 0 И ПозицияКонТекста > 0 И ПозицияКонТекста > ПозицияНачТекста Тогда
		ИтоговыйРезультат = Сред(ТекстHTML, ПозицияНачТекста, ПозицияКонТекста - ПозицияНачТекста + ДлинаТегКон);
	Иначе 
		ИтоговыйРезультат = "";
	КонецЕсли;
	
	Возврат ИтоговыйРезультат;
	
КонецФункции

Процедура ПроверитьСвойствоКоллекции(Коллекция, Ключ, ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	ТипКоллекции = Тип(Коллекция);
	Если ТипКоллекции = Тип("Структура") Тогда
		Если НЕ Коллекция.Свойство(Ключ) Тогда
			Коллекция.Вставить(Ключ, ЗначениеПоУмолчанию);
		КонецЕсли;
	ИначеЕсли ТипКоллекции = Тип("Соответствие") Тогда
		ЗначениеКоллекции = Коллекция.Получить(Ключ);
		Если ЗначениеКоллекции = Неопределено И ЗначениеПоУмолчанию <> Неопределено Тогда
			Коллекция.Вставить(Ключ, ЗначениеПоУмолчанию);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВырезатьТекстТелаДокумента(Текст) Экспорт
	
	Текст = РаботаСHTML.ТекстТелаДокумента(Текст);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА КАРТИНОК ДЛЯ ОТОБРАЖЕНИЯ.

Процедура ОбработатьДополнительныеКартинки(ДопКартинки) Экспорт
	
	Если НЕ ТипЗнч(ДопКартинки) = Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	#Если НЕ (ВебКлиент ИЛИ ВнешнееСоединение) Тогда
		ОбработатьДопКартинкиЛокально(ДопКартинки);
	#КонецЕсли
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВЕРСТКА СТРАНИЦ ДЛЯ САЙТА.

Функция ПолучитьОсновуСтраницы(ОбщиеКартинки, ТекстСкрипты, Заголовок = "", СсылкаНаСтатью = Неопределено) Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Картинки"		, ОбщиеКартинки);
	Параметры.Вставить("Скрипты"		, ТекстСкрипты);
	Параметры.Вставить("Заголовок"		, Заголовок);
	Параметры.Вставить("СсылкаНаСтатью" , СсылкаНаСтатью);	
	
	Возврат ПолучитьОбщуюЧастьСтраницы(Параметры);
	
КонецФункции

Функция ПолучитьОбщиеФайлы() Экспорт
		
	СтруктураКартинки = ПолучитьОбщиеКартинки();	
	ТекстСкрипты 	  = ПолучитьОбщиеСкрипты();	
	
	Возврат Новый Структура("Картинки, Скрипты", СтруктураКартинки, ТекстСкрипты);
	
КонецФункции

Функция ПолучитьПараметрыВыводаСтраницыПоВиду(ВидСтраницы) Экспорт
	
	ПараметрыВывода = Новый Структура("Информация, Заголовок, Кнопки, Порядок", "", "", "");
	
	Если ВидСтраницы = "featured_articles" Тогда
		ПараметрыВывода.Информация	= "Просмотрена";
		ПараметрыВывода.Заголовок	= "Рекомендуемые статьи";
		ПараметрыВывода.Порядок		= "СредняяОценка УБЫВ, Просмотры УБЫВ, Ссылка ВОЗР";
	ИначеЕсли ВидСтраницы = "recently_added" Тогда
		ПараметрыВывода.Информация	= "Опубликована";
		ПараметрыВывода.Заголовок	= "Недавно добавленные статьи";
		ПараметрыВывода.Порядок		= "Создана УБЫВ, Ссылка ВОЗР";
	ИначеЕсли ВидСтраницы = "most_popular" Тогда
		ПараметрыВывода.Информация	= "Просмотрена";
		ПараметрыВывода.Заголовок	= "Самые популярные статьи";
		ПараметрыВывода.Порядок		= "Просмотры УБЫВ, Ссылка ВОЗР";
	ИначеЕсли ВидСтраницы = "top_rated" Тогда
		ПараметрыВывода.Информация	= "Оценена";
		ПараметрыВывода.Заголовок	= "Наиболее рейтинговые статьи";
		ПараметрыВывода.Порядок		= "СредняяОценка УБЫВ, Ссылка ВОЗР";
	ИначеЕсли ВидСтраницы = "category_articles" Тогда
		ПараметрыВывода.Информация	= "КраткоеОписание";
		ПараметрыВывода.Заголовок	= "Статьи по категории";
		ПараметрыВывода.Кнопки		= "Добавить, ПереключениеСтраниц";
		ПараметрыВывода.Порядок		= "РеквизитДопУпорядочивания ВОЗР";
	КонецЕсли;

	Возврат ПараметрыВывода;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ДАННЫХ ПОРТАЛА.

Функция ПолучитьОбщуюЧастьСтраницы(Параметры)
	
	// АдресаКартинок		= ?(Параметры.Свойство("Картинки"), Параметры.Картинки, Новый Структура);
	ТекстСкрипты		= ?(Параметры.Свойство("Скрипты"), Параметры.Скрипты, "");
	Заголовок			= ?(Параметры.Свойство("Заголовок"), Параметры.Заголовок, "");
	
	ТаблицаСтилей	= БазаЗнанийCSSКлиентСервер.ПолучитьТаблицуСтилей();
	
	Если ЗначениеЗаполнено(Параметры.СсылкаНаСтатью) Тогда
		БазаЗнанийHTMLВызовСервера.ЗаполнитьРазделДополнительноВТаблицеСтилей(Параметры.СсылкаНаСтатью, ТаблицаСтилей); 
	КонецЕсли;	
		
	ТекстСтраницы = 
	"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
	|<html xmlns=""http://www.w3.org/1999/xhtml"">
	|	<head>
	|		<title>" + Заголовок + "</title>
	|		" + ТекстСкрипты + "
	|		" + ТаблицаСтилей + "	
	|	</head>
	|	<body>
	|		<div id='content' class='content_main'>
	|			[[ОсновнойКонтент]]
	|		</div>
	|		<div id='footer'>
	|			<div align='center' style='font-size:9px;'>
	|				" + УправлениеITОтделом8УФПовтИсп.ПолучитьКонстанту("КонтактыРазработчиков") + "
	|			</div>
	|		</div>	
	|	</body>
	|</html>";
	
	Возврат ТекстСтраницы;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ МЕТОДЫ.

Функция ПолучитьОбщиеСкрипты()
	
	Возврат БазаЗнанийВызовСервера.ПолучитьТекстыСкриптов();
	
КонецФункции

Процедура ОбработатьДопКартинкиЛокально(СтруктураФайлов)
	
	#Если Клиент Тогда
		РасширениеПодключено = РаботаСФайламиСлужебныйКлиент.РасширениеРаботыСФайламиПодключено();
		Если НЕ РасширениеПодключено Тогда
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	МассивОписаний = Новый Массив;
	Для Каждого КлючИЗначение Из СтруктураФайлов Цикл
		СтруктураФайла	= КлючИЗначение.Значение;
		Если НЕ ТипЗнч(СтруктураФайла) = Тип("Структура") Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеФайла 	= СтруктураФайла.ОписаниеФайла;
		ДатаОбновления	= СтруктураФайла.ДатаОбновления;
		
		Файл = Новый Файл(ОписаниеФайла.Имя);
		Если Файл.Существует() И Файл.ПолучитьВремяИзменения() >= ДатаОбновления Тогда
			Продолжить;
		КонецЕсли;
		
		МассивОписаний.Добавить(ОписаниеФайла);
	КонецЦикла;
	
	Если МассивОписаний.Количество() > 0 Тогда
		#Если Клиент Тогда
			//@skip-warning
			Результат = ПолучитьФайлы(МассивОписаний, , , Ложь);
			
			Для Каждого Описание Из МассивОписаний Цикл
				УдалитьИзВременногоХранилища(Описание.Хранение);
			КонецЦикла;
		#Иначе
			Результат = Ложь;
		#КонецЕсли
	Иначе 
		Результат = Истина;
	КонецЕсли;
	
	Если НЕ Результат Тогда
		#Если Клиент Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Отображение картинок в статье невозможно.'"));
		#Иначе
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Отображение картинок в статье невозможно.'"));
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьОбщиеКартинки()
	
	СтруктураКартинок = Новый Структура;
	СтруктураКартинок.Вставить("ДобавитьКатегорию", БиблиотекаКартинок.БазаЗнанийДобавитьКатегорию);		
	СтруктураКартинок.Вставить("ДобавитьСтатью",	БиблиотекаКартинок.БазаЗнанийДобавитьСтатью);		
	СтруктураКартинок.Вставить("Статья", 			БиблиотекаКартинок.БазаЗнанийСтатья);		
	СтруктураКартинок.Вставить("Категория",			БиблиотекаКартинок.БазаЗнанийКатегория);		
	СтруктураКартинок.Вставить("КатегорияПубличная",БиблиотекаКартинок.БазаЗнанийКатегория);
	СтруктураКартинок.Вставить("КатегорияПриватная",БиблиотекаКартинок.БазаЗнанийКатегорияПриватная);
	СтруктураКартинок.Вставить("Редактирование",	БиблиотекаКартинок.БазаЗнанийРедактирование);		
	СтруктураКартинок.Вставить("РедактированиеНедоступно", БиблиотекаКартинок.БазаЗнанийРедактированиеНедоступно);		
	СтруктураКартинок.Вставить("Путь",				БиблиотекаКартинок.БазаЗнанийПуть);		
	СтруктураКартинок.Вставить("ЗвездаПолная",      БиблиотекаКартинок.БазаЗнанийЗвездаПолная);		
	СтруктураКартинок.Вставить("Комментарии",       БиблиотекаКартинок.БазаЗнанийКомментарий);		
	СтруктураКартинок.Вставить("Пользователь",      БиблиотекаКартинок.БазаЗнанийПользователь);		
	СтруктураКартинок.Вставить("Кнопка",            БиблиотекаКартинок.БазаЗнанийКнопка);		
	СтруктураКартинок.Вставить("КнопкаЧБ",          БиблиотекаКартинок.БазаЗнанийКнопкаЧБ);		
	СтруктураКартинок.Вставить("НовостьСоздание",   БиблиотекаКартинок.БазаЗнанийНовостьСоздание);		
	СтруктураКартинок.Вставить("НовостьИзменение",	БиблиотекаКартинок.БазаЗнанийНовостьИзменение);		
	СтруктураКартинок.Вставить("НовостьУдаление",   БиблиотекаКартинок.БазаЗнанийНовостьУдаление);		
	СтруктураКартинок.Вставить("НовостьОповещение", БиблиотекаКартинок.БазаЗнанийНовостьОповещение);		
	СтруктураКартинок.Вставить("НовостьПрочее",     БиблиотекаКартинок.БазаЗнанийНовостьПрочее);
	СтруктураКартинок.Вставить("Скрепка",     		БиблиотекаКартинок.ТолькоСкрепка);	
	СтруктураКартинок.Вставить("НавигационнаяСсылка",БиблиотекаКартинок.ПолучитьНавигационнуюСсылку);
	
	Возврат СтруктураКартинок;
	
КонецФункции

#КонецОбласти