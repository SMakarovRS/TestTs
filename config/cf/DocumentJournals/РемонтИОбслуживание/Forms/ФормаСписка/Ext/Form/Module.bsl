
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаскраситьСписок();
	СоздатьКнопкиРаботыССостояниями();
	
	ФлагЗакладки = Истина;
	ФлагВидимостьОтбора = Ложь;
	Элементы.ОбщаяГруппа.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбщаяГруппаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоДокументамПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьСтатус(Команда)
	
	ВыделенныеСтроки = ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.Список);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Номер = Число(Прав(Команда.Имя, СтрДлина(Команда.Имя) -  СтрДлина("УстановитьСтатус")));
	Исключение
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Ошибка установки статуса.'"));
		Возврат;		
	КонецПопытки;
	
	Состояние = ПолучитьСостояниеПоНомеру(Номер);
	
	
	ТекстВопроса = СтрШаблон(НСтр("ru = 'У выделенных в списке заказов будет установлен статус ""%1"". Продолжить?'"), Строка(Состояние));
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьСтатусЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки, Состояние", ВыделенныеСтроки, Состояние)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
    Состояние = ДополнительныеПараметры.Состояние;
    
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьСтатусыУДокументов(ВыделенныеСтроки, Состояние);
    
    Элементы.Список.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусНачало(Команда)
	
	ВыделенныеСтроки = ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.НачалоОбслуживания);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Номер = Число(Прав(Команда.Имя, СтрДлина(Команда.Имя) -  СтрДлина("УстановитьСтатусНачало")));
	Исключение
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Ошибка установки статуса.'"));
		Возврат;		
	КонецПопытки;
	
	Состояние = ПолучитьСостояниеПоНомеру(Номер);
		
	ТекстВопроса = СтрШаблон(НСтр("ru = 'У выделенных в списке заказов будет установлен статус ""%1"". Продолжить?'"), Строка(Состояние));
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьСтатусНачалоЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки, Состояние", ВыделенныеСтроки, Состояние)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусНачалоЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
    Состояние = ДополнительныеПараметры.Состояние;
    
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьСтатусыУДокументов(ВыделенныеСтроки, Состояние);
    
    Элементы.НачалоОбслуживания.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусОкончание(Команда)
	
	ВыделенныеСтроки = ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.ОкончаниеОбслуживания);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Номер = Число(Прав(Команда.Имя, СтрДлина(Команда.Имя) -  СтрДлина("УстановитьСтатусОкончание")));
	Исключение
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Ошибка установки статуса.'"));
		Возврат;		
	КонецПопытки;
	
	Состояние = ПолучитьСостояниеПоНомеру(Номер);
		
	ТекстВопроса = СтрШаблон(НСтр("ru = 'У выделенных в списке заказов будет установлен статус ""%1"". Продолжить?'"), Строка(Состояние));
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьСтатусОкончаниеЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки, Состояние", ВыделенныеСтроки, Состояние)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусОкончаниеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
    Состояние = ДополнительныеПараметры.Состояние;
    
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьСтатусыУДокументов(ВыделенныеСтроки, Состояние);
    
    Элементы.ОкончаниеОбслуживания.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЗаказы(Команда)
	
	ВыделенныеСтроки = ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.Список);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	ТекстВопроса = НСтр("ru='У выделенных в списке будет установлен флаг ""Закрыт"". Продолжить?'");
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("ЗакрытьЗаказыЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки", ВыделенныеСтроки)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЗаказыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
    
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьСтатусыУДокументов(ВыделенныеСтроки, Истина);
    
    Элементы.Список.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура СнятьСтатусЗакрыт(Команда)
	
	ВыделенныеСтроки = ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.Список);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	ТекстВопроса = НСтр("ru='У выделенных в списке будет снят флаг ""Закрыт"". Продолжить?'");
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("СнятьСтатусЗакрытЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки", ВыделенныеСтроки)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСтатусЗакрытЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
    
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьСтатусыУДокументов(ВыделенныеСтроки, Ложь);
    
    Элементы.Список.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЗаказыНачало(Команда)
	
	ВыделенныеСтроки = ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.НачалоОбслуживания);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	ТекстВопроса = НСтр("ru='У выделенных в списке будет установлен флаг ""Закрыт"". Продолжить?'");
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("ЗакрытьЗаказыНачалоЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки", ВыделенныеСтроки)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЗаказыНачалоЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
    
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьСтатусыУДокументов(ВыделенныеСтроки, Истина);
    
    Элементы.НачалоОбслуживания.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура СнятьСтатусНачалоЗакрыт(Команда)
	
	ВыделенныеСтроки = ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.НачалоОбслуживания);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	ТекстВопроса = НСтр("ru='У выделенных в списке будет снят флаг ""Закрыт"". Продолжить?'");
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("СнятьСтатусНачалоЗакрытЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки", ВыделенныеСтроки)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСтатусНачалоЗакрытЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
    
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьСтатусыУДокументов(ВыделенныеСтроки, Ложь);
    
    Элементы.НачалоОбслуживания.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура СнятьСтатусОкончаниеЗакрыт(Команда)
	
	ВыделенныеСтроки = ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.ОкончаниеОбслуживания);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	ТекстВопроса = НСтр("ru='У выделенных в списке будет снят флаг ""Закрыт"". Продолжить?'");
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("СнятьСтатусОкончаниеЗакрытЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки", ВыделенныеСтроки)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСтатусОкончаниеЗакрытЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьСтатусыУДокументов(ВыделенныеСтроки, Ложь);
    Элементы.ОкончаниеОбслуживания.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусОкончаниеЗакрыт(Команда)
	
	ВыделенныеСтроки = ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.ОкончаниеОбслуживания);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	ТекстВопроса = НСтр("ru='У выделенных в списке будет установлен флаг ""Закрыт"". Продолжить?'");
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьСтатусОкончаниеЗакрытЗавершение", ЭтотОбъект, Новый Структура("ВыделенныеСтроки", ВыделенныеСтроки)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусОкончаниеЗакрытЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьСтатусыУДокументов(ВыделенныеСтроки, Истина);
    Элементы.ОкончаниеОбслуживания.Обновить();
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьИДоступность()
	
	Если ФлагЗакладки Тогда
		Если Элементы.ОбщаяГруппа.ТекущаяСтраница <> Элементы.ГруппаПоДокументам Тогда
			Элементы.ОбщаяГруппа.ТекущаяСтраница = Элементы.ГруппаПоДокументам;
		КонецЕсли;
	Иначе
		Если Элементы.ОбщаяГруппа.ТекущаяСтраница <> Элементы.ГруппаЖурнал Тогда
			Элементы.ОбщаяГруппа.ТекущаяСтраница = Элементы.ГруппаЖурнал;
		КонецЕсли;
	КонецЕсли;
	
	Если Элементы.ОбщаяГруппа.ТекущаяСтраница = Элементы.ГруппаЖурнал Тогда
		Элементы.СписокЗакладки.Пометка = ФлагЗакладки;
	Иначе
		Если Элементы.ПоДокументам.ТекущаяСтраница = Элементы.ГруппаНачалоОбслуживания Тогда
			Элементы.НачалоОбслуживанияЗакладки.Пометка = ФлагЗакладки;
		ИначеЕсли Элементы.ПоДокументам.ТекущаяСтраница = Элементы.ГруппаОкончаниеОбслуживания Тогда
			Элементы.ОкончаниеОбслуживанияЗакладки.Пометка = ФлагЗакладки;
		КонецЕсли;
	КонецЕсли;	
	
	Если Элементы.ОбщаяГруппа.ТекущаяСтраница = Элементы.ГруппаЖурнал Тогда
		Элементы.СписокВидимостьОтбора.Пометка = ФлагВидимостьОтбора;
		Если Элементы.ГруппаСписокОтбор.Видимость <> ФлагВидимостьОтбора Тогда
        	Элементы.ГруппаСписокОтбор.Видимость = ФлагВидимостьОтбора;
		КонецЕсли;
	Иначе
		Если Элементы.ПоДокументам.ТекущаяСтраница = Элементы.ГруппаНачалоОбслуживания Тогда
			Элементы.НачалоОбслуживанияВидимостьОтбора.Пометка = ФлагВидимостьОтбора;
			Если Элементы.ГруппаНачалоОбслуживанияОтбор.Видимость <> ФлагВидимостьОтбора Тогда
				Элементы.ГруппаНачалоОбслуживанияОтбор.Видимость = ФлагВидимостьОтбора;
			КонецЕсли;
		ИначеЕсли Элементы.ПоДокументам.ТекущаяСтраница = Элементы.ГруппаОкончаниеОбслуживания Тогда
			Элементы.ОкончаниеОбслуживанияВидимостьОтбора.Пометка = ФлагВидимостьОтбора;
			Если Элементы.ГруппаОкончаниеОбслуживанияОтбор.Видимость <> ФлагВидимостьОтбора Тогда
				Элементы.ГруппаОкончаниеОбслуживанияОтбор.Видимость = ФлагВидимостьОтбора;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

// Процедура раскрашивает список.
//
&НаСервере
Процедура РаскраситьСписок()
	
	Массив = Новый Массив();
	Массив.Добавить(Список);
	Массив.Добавить(НачалоОбслуживания);
	Массив.Добавить(ОкончаниеОбслуживания);
	
	Для каждого ЭлементМассива Из Массив Цикл
	
		// Раскраска списка.
		СписокУдаляемыхЭлементов = Новый СписокЗначений;
		Для каждого ЭлементУсловногоОформления Из ЭлементМассива.УсловноеОформление.Элементы Цикл
			Если ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Предустановленный"
				ИЛИ ЭлементУсловногоОформления.Представление = НСтр("ru = 'Обслуживание закрыто'") Тогда
				СписокУдаляемыхЭлементов.Добавить(ЭлементУсловногоОформления);
			КонецЕсли;
		КонецЦикла;
		Для каждого Элемент Из СписокУдаляемыхЭлементов Цикл
			ЭлементМассива.УсловноеОформление.Элементы.Удалить(Элемент.Значение);
		КонецЦикла;
			
		ВыборкаСостоянияЗаказов = Справочники.СостоянияОбслуживания.Выбрать();
		Пока ВыборкаСостоянияЗаказов.Следующий() Цикл
			
			ЦветФона = ВыборкаСостоянияЗаказов.Цвет.Получить();
			Если ТипЗнч(ЦветФона) <> Тип("Цвет") Тогда
				Продолжить;
			КонецЕсли;
			
			ЭлементУсловногоОформления		= ЭлементМассива.УсловноеОформление.Элементы.Добавить();
			
			ЭлементОтбора					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			
			ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("СостояниеОбслуживания");
			ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение	= ВыборкаСостоянияЗаказов.Ссылка;
			
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветФона);
			ЭлементУсловногоОформления.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Предустановленный";
			ЭлементУсловногоОформления.Представление = СтрШаблон(НСтр("ru = 'По состоянию %1'"), ВыборкаСостоянияЗаказов.Наименование);
			
		КонецЦикла;
		
		
		ЭлементУсловногоОформления		= ЭлементМассива.УсловноеОформление.Элементы.Добавить();
		
		ЭлементОтбора					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Закрыт");
		ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение	= Истина;
		
		ШрифтТекстаСтроки = Новый Шрифт(,,,,,Истина);
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтТекстаСтроки);
		ЭлементУсловногоОформления.РежимОтображения							= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки	= "Предустановленный";
		ЭлементУсловногоОформления.Представление							= НСтр("ru = 'Обслуживание закрыто'");
	
	КонецЦикла;
		
КонецПроцедуры // РаскраситьСписок()

&НаСервере
Процедура СоздатьКнопкиРаботыССостояниями()
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СостоянияОбслуживания.Ссылка,
		|	СостоянияОбслуживания.Наименование
		|ИЗ
		|	Справочник.СостоянияОбслуживания КАК СостоянияОбслуживания
		|ГДЕ
		|	СостоянияОбслуживания.ПометкаУдаления = ЛОЖЬ
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Номер = 1;
	Пока Выборка.Следующий() Цикл
	
        НоваяКоманда			= Команды.Добавить("УстановитьСтатус" + Формат(Номер, "ЧГ="));
        НоваяКоманда.Действие	= "УстановитьСтатус";
        НоваяКнопка				= Элементы.Добавить("УстановитьСтатус" + Формат(Номер, "ЧГ="), Тип("КнопкаФормы"), Элементы.ГруппаСтатусов);
        НоваяКнопка.Заголовок	= Выборка.Наименование;
        НоваяКнопка.ИмяКоманды	= "УстановитьСтатус" + Формат(Номер, "ЧГ=");		
		
        НоваяКоманда			= Команды.Добавить("УстановитьСтатусНачало" + Формат(Номер, "ЧГ="));
        НоваяКоманда.Действие	= "УстановитьСтатусНачало";
        НоваяКнопка				= Элементы.Добавить("УстановитьСтатусНачало" + Формат(Номер, "ЧГ="), Тип("КнопкаФормы"), Элементы.ГруппаСтатусовНачало);
        НоваяКнопка.Заголовок	= Выборка.Наименование;
        НоваяКнопка.ИмяКоманды	= "УстановитьСтатусНачало" + Формат(Номер, "ЧГ=");		
		
        НоваяКоманда			= Команды.Добавить("УстановитьСтатусОкончание" + Формат(Номер, "ЧГ="));
        НоваяКоманда.Действие	= "УстановитьСтатусОкончание";
        НоваяКнопка				= Элементы.Добавить("УстановитьСтатусОкончание" + Формат(Номер, "ЧГ="), Тип("КнопкаФормы"), Элементы.ГруппаСтатусовОкончание);
        НоваяКнопка.Заголовок	= Выборка.Наименование;
        НоваяКнопка.ИмяКоманды	= "УстановитьСтатусОкончание" + Формат(Номер, "ЧГ=");		
		
		Номер					= Номер + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Закладки(Команда)
	
	ФлагЗакладки = НЕ ФлагЗакладки;	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьОтбора(Команда)
	
	ФлагВидимостьОтбора = НЕ ФлагВидимостьОтбора;
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
// Проверяет наличие выделенных в списке ссылок и возвращает массив.
//
// Параметры:
// 		Список - ДинамическийСписок.
//
// Возвращаемое значение:
// 		Массив - Массив выделенных с списке ссылок.
//
Функция ПроверитьПолучитьВыделенныеВСпискеСсылки(Список) Экспорт
	
	МассивСсылок = Новый Массив;
	
	Для н = 0 По Список.ВыделенныеСтроки.Количество()-1 Цикл
		Если ТипЗнч(Список.ВыделенныеСтроки[н]) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			МассивСсылок.Добавить(Список.ВыделенныеСтроки[н]);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивСсылок.Количество() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru='Команда не может быть выполнена для указанного объекта.'"),10);
	КонецЕсли;
	
	Возврат МассивСсылок;
	
КонецФункции // ПроверитьПолучитьВыделенныеВСпискеСсылки()

&НаСервереБезКонтекста
Функция ПолучитьСостояниеПоНомеру(Номер)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СостоянияОбслуживания.Ссылка
		|ИЗ
		|	Справочник.СостоянияОбслуживания КАК СостоянияОбслуживания
		|ГДЕ
		|	СостоянияОбслуживания.ПометкаУдаления = ЛОЖЬ
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Попытка		
		Если ТЗ.Количество() >= Номер Тогда
			Возврат ТЗ[Номер - 1].Ссылка;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Возврат Справочники.СостоянияОбслуживания.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьСтатусыУДокументов(Массив, Статус)
	
	Для каждого Док Из Массив Цикл
		Об						= Док.ПолучитьОбъект();
		Если ТипЗнч(Статус)		= Тип("СправочникСсылка.СостоянияОбслуживания") Тогда
			Об.СостояниеОбслуживания = Статус;
		Иначе
			Об.Закрыт			= Статус;
		КонецЕсли;		
		Об.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти